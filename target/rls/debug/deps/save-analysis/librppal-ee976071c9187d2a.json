{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3","program":"/home/scoob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rppal","--edition=2018","/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"embedded-hal\"","--cfg","feature=\"hal\"","--cfg","feature=\"nb\"","--cfg","feature=\"void\"","-C","metadata=ee976071c9187d2a","-C","extra-filename=-ee976071c9187d2a","--out-dir","/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps","-L","dependency=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps","--extern","embedded_hal=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/libembedded_hal-c492a70e34d67525.rmeta","--extern","lazy_static=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/liblazy_static-4f4c3986ba0f23cb.rmeta","--extern","libc=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/liblibc-67f4cd3da887bbfb.rmeta","--extern","nb=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/libnb-0b6752e6aeea33fc.rmeta","--extern","void=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/libvoid-1b83a20ad21bcab9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/scoob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/librppal-ee976071c9187d2a.rmeta"},"prelude":{"crate_id":{"name":"rppal","disambiguator":[15066613317551151190,8762734696553284429]},"crate_root":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src","external_crates":[{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13842155912677385872,11660590378338683385]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1145230128757463294,15976268636418953592]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10006185802367012891,4937926339965588888]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18134491841186215314,8619879253945163470]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4357087487764653857,7816708319091665300]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10862771416828768076,14090399182622295334]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7832813774001485751,4465207999706185911]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14203079308812153325,7069038021421518271]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17468104730350570711,1510909898039763528]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11081656445949358564,12304596919514716713]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[4496289705150708668,14963538919535077439]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[12585038344938944291,11081610577875308163]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4866546307375520792,3681606541934731072]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[6903286030758146719,12939842262273902871]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","num":15,"id":{"name":"lazy_static","disambiguator":[2376082943716136021,4502182007221238058]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","num":16,"id":{"name":"libc","disambiguator":[15855753054126972153,9913793128331978678]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","num":17,"id":{"name":"embedded_hal","disambiguator":[4433601428375491001,16666039635349817714]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/hal.rs","num":18,"id":{"name":"nb","disambiguator":[15268251911854511450,8397846757788623814]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","num":19,"id":{"name":"nb","disambiguator":[5098270263905257888,707756099768455716]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","num":20,"id":{"name":"void","disambiguator":[5788285445637732447,6799967196809038091]}}],"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1121,"byte_end":2119,"line_start":21,"line_end":47,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11203,"byte_end":11211,"line_start":160,"line_end":160,"column_start":21,"column_end":29},"alias_span":null,"name":"InputPin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11213,"byte_end":11218,"line_start":160,"line_end":160,"column_start":31,"column_end":36},"alias_span":null,"name":"IoPin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11220,"byte_end":11229,"line_start":160,"line_end":160,"column_start":38,"column_end":47},"alias_span":null,"name":"OutputPin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11231,"byte_end":11234,"line_start":160,"line_end":160,"column_start":49,"column_end":52},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104672,"byte_end":104684,"line_start":106,"line_end":106,"column_start":22,"column_end":34},"alias_span":null,"name":"Capabilities","value":"","parent":{"krate":0,"index":504}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178033,"byte_end":178040,"line_start":118,"line_end":118,"column_start":24,"column_end":31},"alias_span":null,"name":"Segment","value":"","parent":{"krate":0,"index":770}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1121,"byte_end":2119,"line_start":21,"line_end":47,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":462},{"krate":0,"index":504},{"krate":0,"index":686},{"krate":0,"index":770},{"krate":0,"index":943},{"krate":0,"index":975}],"decl_id":null,"docs":" RPPAL provides access to the Raspberry Pi's GPIO, I2C, PWM, SPI and UART\n peripherals through a user-friendly interface. In addition to peripheral\n access, RPPAL also offers support for USB to serial adapters. The library\n can be used in conjunction with a variety of platform-agnostic drivers\n through its `embedded-hal` trait implementations by enabling the optional\n `hal` feature.","sig":null,"attributes":[{"value":"! RPPAL provides access to the Raspberry Pi's GPIO, I2C, PWM, SPI and UART","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1121,"byte_end":1197,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"! peripherals through a user-friendly interface. In addition to peripheral","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1198,"byte_end":1274,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"! access, RPPAL also offers support for USB to serial adapters. The library","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1275,"byte_end":1352,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! can be used in conjunction with a variety of platform-agnostic drivers","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1353,"byte_end":1427,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"! through its `embedded-hal` trait implementations by enabling the optional","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1428,"byte_end":1505,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! `hal` feature.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1506,"byte_end":1524,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1525,"byte_end":1528,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! RPPAL requires Raspbian or any similar, recent, Linux distribution. Both","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1529,"byte_end":1605,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"! `gnu` and `musl` libc targets are supported. The library is compatible with","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1606,"byte_end":1685,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"! the Raspberry Pi A, A+, B, B+, 2B, 3A+, 3B, 3B+, 4B, CM, CM 3, CM 3+, Zero and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1686,"byte_end":1768,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"! Zero W. Backwards compatibility for minor revisions isn't guaranteed until","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1769,"byte_end":1847,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"! v1.0.0.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":1848,"byte_end":1859,"line_start":32,"line_end":32,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::gpio","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":59},{"krate":0,"index":85},{"krate":0,"index":135},{"krate":0,"index":271},{"krate":0,"index":333},{"krate":0,"index":388},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":1440},{"krate":0,"index":1454},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":1456},{"krate":0,"index":1490},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1483},{"krate":0,"index":1481},{"krate":0,"index":438},{"krate":0,"index":1492},{"krate":0,"index":1508},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1501},{"krate":0,"index":1499},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":1510},{"krate":0,"index":1529},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1522},{"krate":0,"index":1520},{"krate":0,"index":445},{"krate":0,"index":1531},{"krate":0,"index":1553},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1546},{"krate":0,"index":1544},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":455},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1570},{"krate":0,"index":1568},{"krate":0,"index":457}],"decl_id":null,"docs":" Interface for the GPIO peripheral.","sig":null,"attributes":[{"value":"! Interface for the GPIO peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":4932,"byte_end":4970,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":4971,"byte_end":4974,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! To ensure fast performance, RPPAL controls the GPIO peripheral by directly","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":4975,"byte_end":5053,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"! accessing the registers through either `/dev/gpiomem` or `/dev/mem`. GPIO interrupts","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5054,"byte_end":5142,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"! are configured using the `gpiochip` character device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5143,"byte_end":5200,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5201,"byte_end":5204,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ## Pins","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5205,"byte_end":5216,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5217,"byte_end":5220,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! GPIO pins are retrieved from a [`Gpio`] instance by their BCM GPIO pin number by calling","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5221,"byte_end":5313,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"! [`Gpio::get`]. The returned unconfigured [`Pin`] can be used to read the pin's","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5314,"byte_end":5396,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"! mode and logic level. Converting the [`Pin`] to an [`InputPin`], [`OutputPin`] or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5397,"byte_end":5482,"line_start":31,"line_end":31,"column_start":1,"column_end":86}},{"value":"! [`IoPin`] through the various `into_` methods available on [`Pin`] configures the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5483,"byte_end":5568,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"! appropriate mode, and provides access to additional methods relevant to the selected pin mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5569,"byte_end":5667,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5668,"byte_end":5671,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! Retrieving a GPIO pin with [`Gpio::get`] grants access to the pin through an owned [`Pin`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5672,"byte_end":5766,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"! instance. If the pin is already in use, or the GPIO peripheral doesn't expose a pin with","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5767,"byte_end":5859,"line_start":36,"line_end":36,"column_start":1,"column_end":93}},{"value":"! the specified number, [`Gpio::get`] returns `Err(`[`Error::PinNotAvailable`]`)`. After a [`Pin`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5860,"byte_end":5960,"line_start":37,"line_end":37,"column_start":1,"column_end":101}},{"value":"! (or a derived [`InputPin`], [`OutputPin`] or [`IoPin`]) goes out of scope, it can be","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":5961,"byte_end":6049,"line_start":38,"line_end":38,"column_start":1,"column_end":89}},{"value":"! retrieved again through another [`Gpio::get`] call.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6050,"byte_end":6105,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6106,"byte_end":6109,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! By default, pins are reset to their original state when they go out of scope.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6110,"byte_end":6191,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"! Use [`InputPin::set_reset_on_drop(false)`], [`OutputPin::set_reset_on_drop(false)`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6192,"byte_end":6279,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"! or [`IoPin::set_reset_on_drop(false)`], respectively, to disable this behavior.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6280,"byte_end":6363,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"! Note that `drop` methods aren't called when a process is abnormally terminated (for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6364,"byte_end":6451,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"! instance when a `SIGINT` signal isn't caught).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6452,"byte_end":6502,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6503,"byte_end":6506,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ## Interrupts","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6507,"byte_end":6524,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6525,"byte_end":6528,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! [`InputPin`] supports both synchronous and asynchronous interrupt handlers.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6529,"byte_end":6608,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6609,"byte_end":6612,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Synchronous (blocking) interrupt triggers are configured using [`InputPin::set_interrupt`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6613,"byte_end":6708,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"! An interrupt trigger for a single pin can be polled with [`InputPin::poll_interrupt`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6709,"byte_end":6799,"line_start":52,"line_end":52,"column_start":1,"column_end":91}},{"value":"! which blocks the current thread until a trigger event occurs, or until the timeout period","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6800,"byte_end":6893,"line_start":53,"line_end":53,"column_start":1,"column_end":94}},{"value":"! elapses. [`Gpio::poll_interrupts`] should be used when multiple pins have been configured","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6894,"byte_end":6987,"line_start":54,"line_end":54,"column_start":1,"column_end":94}},{"value":"! for synchronous interrupt triggers, and need to be polled simultaneously.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":6988,"byte_end":7065,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7066,"byte_end":7069,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! Asynchronous interrupt triggers are configured using [`InputPin::set_async_interrupt`]. The","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7070,"byte_end":7165,"line_start":57,"line_end":57,"column_start":1,"column_end":96}},{"value":"! specified callback function will be executed on a separate thread when a trigger event occurs.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7166,"byte_end":7264,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7265,"byte_end":7268,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ## Software-based PWM","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7269,"byte_end":7294,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7295,"byte_end":7298,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! [`OutputPin`] and [`IoPin`] feature a software-based PWM implementation. The PWM signal is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7299,"byte_end":7393,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"! emulated by toggling the pin's output state on a separate thread, combined with sleep and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7394,"byte_end":7487,"line_start":63,"line_end":63,"column_start":1,"column_end":94}},{"value":"! busy-waiting.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7488,"byte_end":7505,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7506,"byte_end":7509,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Software-based PWM is inherently inaccurate on a multi-threaded OS due to scheduling/preemption.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7510,"byte_end":7610,"line_start":66,"line_end":66,"column_start":1,"column_end":101}},{"value":"! If an accurate or faster PWM signal is required, use the hardware [`Pwm`] peripheral instead.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7611,"byte_end":7708,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7709,"byte_end":7712,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! PWM threads may occasionally sleep longer than needed. If the active or inactive part of the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7713,"byte_end":7809,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"! signal is shorter than 250 µs, only busy-waiting is used, which will increase CPU usage. Due to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7810,"byte_end":7910,"line_start":70,"line_end":70,"column_start":1,"column_end":100}},{"value":"! function call overhead, typical jitter is expected to be up to 10 µs on debug builds, and up to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":7911,"byte_end":8011,"line_start":71,"line_end":71,"column_start":1,"column_end":100}},{"value":"! 2 µs on release builds.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8012,"byte_end":8040,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8041,"byte_end":8044,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8045,"byte_end":8060,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8061,"byte_end":8064,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! Basic example:","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8065,"byte_end":8083,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8084,"byte_end":8087,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8088,"byte_end":8095,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"! use std::thread;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8096,"byte_end":8116,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8117,"byte_end":8145,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8146,"byte_end":8149,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! use rppal::gpio::Gpio;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8150,"byte_end":8176,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8177,"byte_end":8180,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! # fn main() -> rppal::gpio::Result<()> {","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8181,"byte_end":8225,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"! let gpio = Gpio::new()?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8226,"byte_end":8254,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"! let mut pin = gpio.get(23)?.into_output();","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8255,"byte_end":8301,"line_start":86,"line_end":86,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8302,"byte_end":8305,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! pin.set_high();","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8306,"byte_end":8325,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"! thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8326,"byte_end":8368,"line_start":89,"line_end":89,"column_start":1,"column_end":43}},{"value":"! pin.set_low();","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8369,"byte_end":8387,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"! # Ok(())","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8388,"byte_end":8400,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8401,"byte_end":8408,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8409,"byte_end":8416,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8417,"byte_end":8420,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! Additional examples can be found in the `examples` directory.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8421,"byte_end":8486,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8487,"byte_end":8490,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ## Troubleshooting","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8491,"byte_end":8513,"line_start":97,"line_end":97,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8514,"byte_end":8517,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ### Permission denied","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8518,"byte_end":8543,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8544,"byte_end":8547,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! In recent releases of Raspbian (December 2017 or later), users that are part of the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8548,"byte_end":8635,"line_start":101,"line_end":101,"column_start":1,"column_end":88}},{"value":"! `gpio` group (like the default `pi` user) can access `/dev/gpiomem` and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8636,"byte_end":8711,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"! `/dev/gpiochipN` (N = 0-2) without needing additional permissions. If you encounter any","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8712,"byte_end":8803,"line_start":103,"line_end":103,"column_start":1,"column_end":92}},{"value":"! [`PermissionDenied`] errors when constructing a new [`Gpio`] instance, either the current","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8804,"byte_end":8897,"line_start":104,"line_end":104,"column_start":1,"column_end":94}},{"value":"! user isn't a member of the `gpio` group, or your Raspbian distribution isn't","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8898,"byte_end":8978,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"! up-to-date and doesn't automatically configure permissions for the above-mentioned","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":8979,"byte_end":9065,"line_start":106,"line_end":106,"column_start":1,"column_end":87}},{"value":"! files. Updating Raspbian to the latest release should fix any permission issues.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9066,"byte_end":9150,"line_start":107,"line_end":107,"column_start":1,"column_end":85}},{"value":"! Alternatively, although not recommended, you can run your application with superuser","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9151,"byte_end":9239,"line_start":108,"line_end":108,"column_start":1,"column_end":89}},{"value":"! privileges by using `sudo`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9240,"byte_end":9271,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9272,"byte_end":9275,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! If you're unable to update Raspbian and its packages (namely `raspberrypi-sys-mods`) to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9276,"byte_end":9367,"line_start":111,"line_end":111,"column_start":1,"column_end":92}},{"value":"! the latest available release, or updating hasn't fixed the issue, you might be able to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9368,"byte_end":9458,"line_start":112,"line_end":112,"column_start":1,"column_end":91}},{"value":"! manually update your `udev` rules to set the appropriate permissions. More information","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9459,"byte_end":9549,"line_start":113,"line_end":113,"column_start":1,"column_end":91}},{"value":"! can be found at [raspberrypi/linux#1225] and [raspberrypi/linux#2289].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9550,"byte_end":9624,"line_start":114,"line_end":114,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9625,"byte_end":9628,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! [`Error::PinNotAvailable`]: enum.Error.html#variant.PinNotAvailable","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9629,"byte_end":9700,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"! [`PermissionDenied`]: enum.Error.html#variant.PermissionDenied","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9701,"byte_end":9767,"line_start":117,"line_end":117,"column_start":1,"column_end":67}},{"value":"! [raspberrypi/linux#1225]: https://github.com/raspberrypi/linux/issues/1225","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9768,"byte_end":9846,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"! [raspberrypi/linux#2289]: https://github.com/raspberrypi/linux/issues/2289","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9847,"byte_end":9925,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"! [`Gpio`]: struct.Gpio.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9926,"byte_end":9956,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"! [`Gpio::get`]: struct.Gpio.html#method.get","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":9957,"byte_end":10003,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"! [`Gpio::poll_interrupts`]: struct.Gpio.html#method.poll_interrupts","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10004,"byte_end":10074,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"! [`Pin`]: struct.Pin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10075,"byte_end":10103,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"! [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10104,"byte_end":10142,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"! [`InputPin::set_reset_on_drop(false)`]: struct.InputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10143,"byte_end":10232,"line_start":125,"line_end":125,"column_start":1,"column_end":90}},{"value":"! [`InputPin::set_interrupt`]: struct.InputPin.html#method.set_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10233,"byte_end":10307,"line_start":126,"line_end":126,"column_start":1,"column_end":75}},{"value":"! [`InputPin::poll_interrupt`]: struct.InputPin.html#method.poll_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10308,"byte_end":10384,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"! [`InputPin::set_async_interrupt`]: struct.InputPin.html#method.set_async_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10385,"byte_end":10471,"line_start":128,"line_end":128,"column_start":1,"column_end":87}},{"value":"! [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10472,"byte_end":10512,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"! [`OutputPin::set_reset_on_drop(false)`]: struct.OutputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10513,"byte_end":10604,"line_start":130,"line_end":130,"column_start":1,"column_end":92}},{"value":"! [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10605,"byte_end":10637,"line_start":131,"line_end":131,"column_start":1,"column_end":33}},{"value":"! [`IoPin::set_reset_on_drop(false)`]: struct.IoPin.html#method.set_reset_on_drop","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10638,"byte_end":10721,"line_start":132,"line_end":132,"column_start":1,"column_end":84}},{"value":"! [`Pwm`]: ../pwm/struct.Pwm.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":10722,"byte_end":10757,"line_start":133,"line_end":133,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72050,"byte_end":72053,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"Pin","qualname":"::gpio::pin::Pin","value":"Pin {  }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":" Unconfigured GPIO pin.","sig":null,"attributes":[{"value":"/ Unconfigured GPIO pin.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71142,"byte_end":71168,"line_start":264,"line_end":264,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71169,"byte_end":71172,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ `Pin`s are constructed by retrieving them using [`Gpio::get`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71173,"byte_end":71239,"line_start":266,"line_end":266,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71240,"byte_end":71243,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ An unconfigured `Pin` can be used to read the pin's mode and logic level.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71244,"byte_end":71321,"line_start":268,"line_end":268,"column_start":1,"column_end":78}},{"value":"/ Converting the `Pin` to an [`InputPin`], [`OutputPin`] or [`IoPin`] through the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71322,"byte_end":71405,"line_start":269,"line_end":269,"column_start":1,"column_end":84}},{"value":"/ various `into_` methods available on `Pin` configures the appropriate mode, and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71406,"byte_end":71489,"line_start":270,"line_end":270,"column_start":1,"column_end":84}},{"value":"/ provides access to additional methods relevant to the selected pin mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71490,"byte_end":71566,"line_start":271,"line_end":271,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71567,"byte_end":71570,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`] trait implementation for `Pin` can be enabled","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71571,"byte_end":71672,"line_start":273,"line_end":273,"column_start":1,"column_end":102}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71673,"byte_end":71760,"line_start":274,"line_end":274,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71761,"byte_end":71783,"line_start":275,"line_end":275,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71784,"byte_end":71787,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71788,"byte_end":71861,"line_start":277,"line_end":277,"column_start":1,"column_end":74}},{"value":"/ [`Gpio::get`]: struct.Gpio.html#method.get","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71862,"byte_end":71908,"line_start":278,"line_end":278,"column_start":1,"column_end":47}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71909,"byte_end":71947,"line_start":279,"line_end":279,"column_start":1,"column_end":39}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71948,"byte_end":71988,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":71989,"byte_end":72021,"line_start":281,"line_end":281,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72403,"byte_end":72406,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"pin","qualname":"<Pin>::pin","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the GPIO pin number.","sig":null,"attributes":[{"value":"/ Returns the GPIO pin number.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72251,"byte_end":72283,"line_start":294,"line_end":294,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72288,"byte_end":72291,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Pins are addressed by their BCM numbers, rather than their physical location.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72296,"byte_end":72377,"line_start":296,"line_end":296,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72382,"byte_end":72391,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72503,"byte_end":72507,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"mode","qualname":"<Pin>::mode","value":"fn (&self) -> Mode","parent":null,"children":[],"decl_id":null,"docs":" Returns the pin's mode.\n","sig":null,"attributes":[{"value":"/ Returns the pin's mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72450,"byte_end":72477,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72482,"byte_end":72491,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72642,"byte_end":72646,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"read","qualname":"<Pin>::read","value":"fn (&self) -> Level","parent":null,"children":[],"decl_id":null,"docs":" Reads the pin's logic level.\n","sig":null,"attributes":[{"value":"/ Reads the pin's logic level.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72584,"byte_end":72616,"line_start":308,"line_end":308,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72621,"byte_end":72630,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72995,"byte_end":73005,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"into_input","qualname":"<Pin>::into_input","value":"fn (self) -> InputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin`, returns an [`InputPin`], sets its mode to [`Input`],\n and disables the pin's built-in pull-up/pull-down resistors.","sig":null,"attributes":[{"value":"/ Consumes the `Pin`, returns an [`InputPin`], sets its mode to [`Input`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72725,"byte_end":72801,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ and disables the pin's built-in pull-up/pull-down resistors.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72806,"byte_end":72870,"line_start":315,"line_end":315,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72875,"byte_end":72878,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72883,"byte_end":72921,"line_start":317,"line_end":317,"column_start":5,"column_end":43}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72926,"byte_end":72969,"line_start":318,"line_end":318,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72974,"byte_end":72983,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73557,"byte_end":73576,"line_start":334,"line_end":334,"column_start":12,"column_end":31},"name":"into_input_pulldown","qualname":"<Pin>::into_input_pulldown","value":"fn (self) -> InputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin`, returns an [`InputPin`], sets its mode to [`Input`],\n and enables the pin's built-in pull-down resistor.","sig":null,"attributes":[{"value":"/ Consumes the `Pin`, returns an [`InputPin`], sets its mode to [`Input`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73082,"byte_end":73158,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ and enables the pin's built-in pull-down resistor.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73163,"byte_end":73217,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73222,"byte_end":73225,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The pull-down resistor is disabled when `InputPin` goes out of scope if [`reset_on_drop`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73230,"byte_end":73323,"line_start":327,"line_end":327,"column_start":5,"column_end":98}},{"value":"/ is set to `true` (default).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73328,"byte_end":73359,"line_start":328,"line_end":328,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73364,"byte_end":73367,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73372,"byte_end":73410,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73415,"byte_end":73458,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/ [`reset_on_drop`]: struct.InputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73463,"byte_end":73531,"line_start":332,"line_end":332,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73536,"byte_end":73545,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74129,"byte_end":74146,"line_start":348,"line_end":348,"column_start":12,"column_end":29},"name":"into_input_pullup","qualname":"<Pin>::into_input_pullup","value":"fn (self) -> InputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin`, returns an [`InputPin`], sets its mode to [`Input`],\n and enables the pin's built-in pull-up resistor.","sig":null,"attributes":[{"value":"/ Consumes the `Pin`, returns an [`InputPin`], sets its mode to [`Input`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73658,"byte_end":73734,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ and enables the pin's built-in pull-up resistor.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73739,"byte_end":73791,"line_start":339,"line_end":339,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73796,"byte_end":73799,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The pull-up resistor is disabled when `InputPin` goes out of scope if [`reset_on_drop`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73804,"byte_end":73895,"line_start":341,"line_end":341,"column_start":5,"column_end":96}},{"value":"/ is set to `true` (default).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73900,"byte_end":73931,"line_start":342,"line_end":342,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73936,"byte_end":73939,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73944,"byte_end":73982,"line_start":344,"line_end":344,"column_start":5,"column_end":43}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":73987,"byte_end":74030,"line_start":345,"line_end":345,"column_start":5,"column_end":48}},{"value":"/ [`reset_on_drop`]: struct.InputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74035,"byte_end":74103,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74108,"byte_end":74117,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74436,"byte_end":74447,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"into_output","qualname":"<Pin>::into_output","value":"fn (self) -> OutputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin`, returns an [`OutputPin`] and sets its mode to [`Output`].","sig":null,"attributes":[{"value":"/ Consumes the `Pin`, returns an [`OutputPin`] and sets its mode to [`Output`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74226,"byte_end":74307,"line_start":352,"line_end":352,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74312,"byte_end":74315,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74320,"byte_end":74360,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ [`Output`]: enum.Mode.html#variant.Output","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74365,"byte_end":74410,"line_start":355,"line_end":355,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74415,"byte_end":74424,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74698,"byte_end":74705,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"into_io","qualname":"<Pin>::into_io","value":"fn (self, mode: Mode) -> IoPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin`, returns an [`IoPin`] and sets its mode to the specified mode.","sig":null,"attributes":[{"value":"/ Consumes the `Pin`, returns an [`IoPin`] and sets its mode to the specified mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74509,"byte_end":74594,"line_start":361,"line_end":361,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74599,"byte_end":74602,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74607,"byte_end":74639,"line_start":363,"line_end":363,"column_start":5,"column_end":37}},{"value":"/ [`Mode`]: enum.Mode.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74644,"byte_end":74672,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":74677,"byte_end":74686,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1325},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76628,"byte_end":76636,"line_start":428,"line_end":428,"column_start":12,"column_end":20},"name":"InputPin","qualname":"::gpio::pin::InputPin","value":"InputPin {  }","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"decl_id":null,"docs":" GPIO pin configured as input.","sig":null,"attributes":[{"value":"/ GPIO pin configured as input.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75657,"byte_end":75690,"line_start":408,"line_end":408,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75691,"byte_end":75694,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ `InputPin`s are constructed by converting a [`Pin`] using [`Pin::into_input`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75695,"byte_end":75777,"line_start":410,"line_end":410,"column_start":1,"column_end":83}},{"value":"/ [`Pin::into_input_pullup`] or [`Pin::into_input_pulldown`]. The pin's mode is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75778,"byte_end":75859,"line_start":411,"line_end":411,"column_start":1,"column_end":82}},{"value":"/ automatically set to [`Input`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75860,"byte_end":75895,"line_start":412,"line_end":412,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75896,"byte_end":75899,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ An `InputPin` can be used to read a pin's logic level, or (a)synchronously poll for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75900,"byte_end":75987,"line_start":414,"line_end":414,"column_start":1,"column_end":88}},{"value":"/ interrupt trigger events.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75988,"byte_end":76017,"line_start":415,"line_end":415,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76018,"byte_end":76021,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`] trait implementation for `InputPin` can be enabled","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76022,"byte_end":76128,"line_start":417,"line_end":417,"column_start":1,"column_end":107}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76129,"byte_end":76216,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76217,"byte_end":76239,"line_start":419,"line_end":419,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76240,"byte_end":76243,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76244,"byte_end":76317,"line_start":421,"line_end":421,"column_start":1,"column_end":74}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76318,"byte_end":76346,"line_start":422,"line_end":422,"column_start":1,"column_end":29}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76347,"byte_end":76390,"line_start":423,"line_end":423,"column_start":1,"column_end":44}},{"value":"/ [`Pin::into_input`]: struct.Pin.html#method.into_input","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76391,"byte_end":76449,"line_start":424,"line_end":424,"column_start":1,"column_end":59}},{"value":"/ [`Pin::into_input_pullup`]: struct.Pin.html#method.into_input_pullup","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76450,"byte_end":76522,"line_start":425,"line_end":425,"column_start":1,"column_end":73}},{"value":"/ [`Pin::into_input_pulldown`]: struct.Pin.html#method.into_input_pulldown","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76523,"byte_end":76599,"line_start":426,"line_end":426,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77788,"byte_end":77801,"line_start":470,"line_end":470,"column_start":12,"column_end":25},"name":"set_interrupt","qualname":"<InputPin>::set_interrupt","value":"fn (&mut self, trigger: Trigger) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configures a synchronous interrupt trigger.","sig":null,"attributes":[{"value":"/ Configures a synchronous interrupt trigger.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77330,"byte_end":77377,"line_start":461,"line_end":461,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77382,"byte_end":77385,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ After configuring a synchronous interrupt trigger, call [`poll_interrupt`] or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77390,"byte_end":77471,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"/ [`Gpio::poll_interrupts`] to block while waiting for a trigger event.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77476,"byte_end":77549,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77554,"byte_end":77557,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Any previously configured (a)synchronous interrupt triggers will be cleared.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77562,"byte_end":77642,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77647,"byte_end":77650,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`poll_interrupt`]: #method.poll_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77655,"byte_end":77701,"line_start":468,"line_end":468,"column_start":5,"column_end":51}},{"value":"/ [`Gpio::poll_interrupts`]: struct.Gpio.html#method.poll_interrupts","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":77706,"byte_end":77776,"line_start":469,"line_end":469,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78143,"byte_end":78158,"line_start":478,"line_end":478,"column_start":12,"column_end":27},"name":"clear_interrupt","qualname":"<InputPin>::clear_interrupt","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a previously configured synchronous interrupt trigger.\n","sig":null,"attributes":[{"value":"/ Removes a previously configured synchronous interrupt trigger.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78065,"byte_end":78131,"line_start":477,"line_end":477,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79597,"byte_end":79611,"line_start":502,"line_end":502,"column_start":12,"column_end":26},"name":"poll_interrupt","qualname":"<InputPin>::poll_interrupt","value":"fn (&mut self, reset: bool, timeout: Option<Duration>) -> Result<Option<Level>>","parent":null,"children":[],"decl_id":null,"docs":" Blocks until an interrupt is triggered on the pin, or a timeout occurs.","sig":null,"attributes":[{"value":"/ Blocks until an interrupt is triggered on the pin, or a timeout occurs.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78288,"byte_end":78363,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78368,"byte_end":78371,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This only works after the pin has been configured for synchronous interrupts using","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78376,"byte_end":78462,"line_start":484,"line_end":484,"column_start":5,"column_end":91}},{"value":"/ [`set_interrupt`]. Asynchronous interrupt triggers are automatically polled on a separate thread.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78467,"byte_end":78568,"line_start":485,"line_end":485,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78573,"byte_end":78576,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Calling `poll_interrupt` blocks any other calls to `poll_interrupt` (including on other `InputPin`s) or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78581,"byte_end":78688,"line_start":487,"line_end":487,"column_start":5,"column_end":112}},{"value":"/ [`Gpio::poll_interrupts`] until it returns. If you need to poll multiple pins simultaneously, use","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78693,"byte_end":78794,"line_start":488,"line_end":488,"column_start":5,"column_end":106}},{"value":"/ [`Gpio::poll_interrupts`] to block while waiting for any of the interrupts to trigger, or switch to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78799,"byte_end":78902,"line_start":489,"line_end":489,"column_start":5,"column_end":108}},{"value":"/ using asynchronous interrupts with [`set_async_interrupt`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78907,"byte_end":78970,"line_start":490,"line_end":490,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78975,"byte_end":78978,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Setting `reset` to `false` returns any cached interrupt trigger events if available. Setting `reset` to `true`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":78983,"byte_end":79097,"line_start":492,"line_end":492,"column_start":5,"column_end":119}},{"value":"/ clears all cached events before polling for new events.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79102,"byte_end":79161,"line_start":493,"line_end":493,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79166,"byte_end":79169,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ The `timeout` duration indicates how long the call will block while waiting","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79174,"byte_end":79253,"line_start":495,"line_end":495,"column_start":5,"column_end":84}},{"value":"/ for interrupt trigger events, after which an `Ok(None))` is returned.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79258,"byte_end":79331,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/ `timeout` can be set to `None` to wait indefinitely.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79336,"byte_end":79392,"line_start":497,"line_end":497,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79397,"byte_end":79400,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [`set_interrupt`]: #method.set_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79405,"byte_end":79449,"line_start":499,"line_end":499,"column_start":5,"column_end":49}},{"value":"/ [`Gpio::poll_interrupts`]: struct.Gpio.html#method.poll_interrupts","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79454,"byte_end":79524,"line_start":500,"line_end":500,"column_start":5,"column_end":75}},{"value":"/ [`set_async_interrupt`]: #method.set_async_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79529,"byte_end":79585,"line_start":501,"line_end":501,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80512,"byte_end":80531,"line_start":527,"line_end":527,"column_start":12,"column_end":31},"name":"set_async_interrupt","qualname":"<InputPin>::set_async_interrupt","value":"fn <C> (&mut self, trigger: Trigger, callback: C) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configures an asynchronous interrupt trigger, which executes the callback on a\n separate thread when the interrupt is triggered.","sig":null,"attributes":[{"value":"/ Configures an asynchronous interrupt trigger, which executes the callback on a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":79967,"byte_end":80049,"line_start":517,"line_end":517,"column_start":5,"column_end":87}},{"value":"/ separate thread when the interrupt is triggered.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80054,"byte_end":80106,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80111,"byte_end":80114,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ The callback closure or function pointer is called with a single [`Level`] argument.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80119,"byte_end":80207,"line_start":520,"line_end":520,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80212,"byte_end":80215,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Any previously configured (a)synchronous interrupt triggers for this pin are cleared","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80220,"byte_end":80308,"line_start":522,"line_end":522,"column_start":5,"column_end":93}},{"value":"/ when `set_async_interrupt` is called, or when `InputPin` goes out of scope.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80313,"byte_end":80392,"line_start":523,"line_end":523,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80397,"byte_end":80400,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`clear_async_interrupt`]: #method.clear_async_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80405,"byte_end":80465,"line_start":525,"line_end":525,"column_start":5,"column_end":65}},{"value":"/ [`Level`]: enum.Level.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80470,"byte_end":80500,"line_start":526,"line_end":526,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81015,"byte_end":81036,"line_start":545,"line_end":545,"column_start":12,"column_end":33},"name":"clear_async_interrupt","qualname":"<InputPin>::clear_async_interrupt","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a previously configured asynchronous interrupt trigger.\n","sig":null,"attributes":[{"value":"/ Removes a previously configured asynchronous interrupt trigger.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":80936,"byte_end":81003,"line_start":544,"line_end":544,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82646,"byte_end":82655,"line_start":585,"line_end":585,"column_start":12,"column_end":21},"name":"OutputPin","qualname":"::gpio::pin::OutputPin","value":"OutputPin {  }","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"decl_id":null,"docs":" GPIO pin configured as output.","sig":null,"attributes":[{"value":"/ GPIO pin configured as output.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81268,"byte_end":81302,"line_start":559,"line_end":559,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81303,"byte_end":81306,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ `OutputPin`s are constructed by converting a [`Pin`] using [`Pin::into_output`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81307,"byte_end":81391,"line_start":561,"line_end":561,"column_start":1,"column_end":85}},{"value":"/ The pin's mode is automatically set to [`Output`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81392,"byte_end":81446,"line_start":562,"line_end":562,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81447,"byte_end":81450,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ An `OutputPin` can be used to change a pin's output state.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81451,"byte_end":81513,"line_start":564,"line_end":564,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81514,"byte_end":81517,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`digital::OutputPin`] and [`PwmPin`] trait implementations for `OutputPin`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81518,"byte_end":81616,"line_start":566,"line_end":566,"column_start":1,"column_end":99}},{"value":"/ can be enabled by specifying the optional `hal` feature in the dependency","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81617,"byte_end":81694,"line_start":567,"line_end":567,"column_start":1,"column_end":78}},{"value":"/ declaration for the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81695,"byte_end":81733,"line_start":568,"line_end":568,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81734,"byte_end":81737,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`], [`digital::StatefulOutputPin`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81738,"byte_end":81826,"line_start":570,"line_end":570,"column_start":1,"column_end":89}},{"value":"/ [`digital::ToggleableOutputPin`] and [`Pwm`] trait implementations for `OutputPin` can be enabled","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81827,"byte_end":81928,"line_start":571,"line_end":571,"column_start":1,"column_end":102}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":81929,"byte_end":82016,"line_start":572,"line_end":572,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82017,"byte_end":82039,"line_start":573,"line_end":573,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82040,"byte_end":82043,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82044,"byte_end":82117,"line_start":575,"line_end":575,"column_start":1,"column_end":74}},{"value":"/ [`digital::StatefulOutputPin`]: ../../embedded_hal/digital/trait.StatefulOutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82118,"byte_end":82209,"line_start":576,"line_end":576,"column_start":1,"column_end":92}},{"value":"/ [`digital::ToggleableOutputPin`]: ../../embedded_hal/digital/trait.ToggleableOutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82210,"byte_end":82305,"line_start":577,"line_end":577,"column_start":1,"column_end":96}},{"value":"/ [`Pwm`]: ../../embedded_hal/trait.Pwm.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82306,"byte_end":82352,"line_start":578,"line_end":578,"column_start":1,"column_end":47}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82353,"byte_end":82381,"line_start":579,"line_end":579,"column_start":1,"column_end":29}},{"value":"/ [`Output`]: enum.Mode.html#variant.Output","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82382,"byte_end":82427,"line_start":580,"line_end":580,"column_start":1,"column_end":46}},{"value":"/ [`Pin::into_output`]: struct.Pin.html#method.into_output","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82428,"byte_end":82488,"line_start":581,"line_end":581,"column_start":1,"column_end":61}},{"value":"/ [`digital::OutputPin`]: ../../embedded_hal/digital/trait.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82489,"byte_end":82564,"line_start":582,"line_end":582,"column_start":1,"column_end":76}},{"value":"/ [`PwmPin`]: ../../embedded_hal/trait.PwmPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":82565,"byte_end":82617,"line_start":583,"line_end":583,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83797,"byte_end":83807,"line_start":629,"line_end":629,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<OutputPin>::is_set_low","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pin's output state is set to [`Low`].","sig":null,"attributes":[{"value":"/ Returns `true` if the pin's output state is set to [`Low`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83655,"byte_end":83718,"line_start":625,"line_end":625,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83723,"byte_end":83726,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ [`Low`]: enum.Level.html#variant.Low","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83731,"byte_end":83771,"line_start":627,"line_end":627,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83776,"byte_end":83785,"line_start":628,"line_end":628,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84019,"byte_end":84030,"line_start":637,"line_end":637,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<OutputPin>::is_set_high","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pin's output state is set to [`High`].","sig":null,"attributes":[{"value":"/ Returns `true` if the pin's output state is set to [`High`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83874,"byte_end":83938,"line_start":633,"line_end":633,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83943,"byte_end":83946,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ [`High`]: enum.Level.html#variant.High","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83951,"byte_end":83993,"line_start":635,"line_end":635,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83998,"byte_end":84007,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1381},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85790,"byte_end":85795,"line_start":677,"line_end":677,"column_start":12,"column_end":17},"name":"IoPin","qualname":"::gpio::pin::IoPin","value":"IoPin {  }","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389}],"decl_id":null,"docs":" GPIO pin that can be (re)configured for any mode or alternate function.","sig":null,"attributes":[{"value":"/ GPIO pin that can be (re)configured for any mode or alternate function.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84189,"byte_end":84264,"line_start":648,"line_end":648,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84265,"byte_end":84268,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ `IoPin`s are constructed by converting a [`Pin`] using [`Pin::into_io`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84269,"byte_end":84345,"line_start":650,"line_end":650,"column_start":1,"column_end":77}},{"value":"/ The pin's mode is automatically set to the specified mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84346,"byte_end":84408,"line_start":651,"line_end":651,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84409,"byte_end":84412,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ An `IoPin` can be reconfigured for any available mode. Depending on the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84413,"byte_end":84488,"line_start":653,"line_end":653,"column_start":1,"column_end":76}},{"value":"/ mode, some methods may not have any effect. For instance, calling a method that","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84489,"byte_end":84572,"line_start":654,"line_end":654,"column_start":1,"column_end":84}},{"value":"/ alters the pin's output state won't cause any changes when the pin's mode is set","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84573,"byte_end":84657,"line_start":655,"line_end":655,"column_start":1,"column_end":85}},{"value":"/ to [`Input`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84658,"byte_end":84675,"line_start":656,"line_end":656,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84676,"byte_end":84679,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`digital::OutputPin`] and [`PwmPin`] trait implementations for `IoPin`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84680,"byte_end":84774,"line_start":658,"line_end":658,"column_start":1,"column_end":95}},{"value":"/ can be enabled by specifying the optional `hal` feature in the dependency","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84775,"byte_end":84852,"line_start":659,"line_end":659,"column_start":1,"column_end":78}},{"value":"/ declaration for the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84853,"byte_end":84891,"line_start":660,"line_end":660,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84892,"byte_end":84895,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`], [`digital::StatefulOutputPin`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84896,"byte_end":84984,"line_start":662,"line_end":662,"column_start":1,"column_end":89}},{"value":"/ [`digital::ToggleableOutputPin`] and [`Pwm`] trait implementations for `IoPin` can be enabled","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":84985,"byte_end":85082,"line_start":663,"line_end":663,"column_start":1,"column_end":98}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85083,"byte_end":85170,"line_start":664,"line_end":664,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85171,"byte_end":85193,"line_start":665,"line_end":665,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85194,"byte_end":85197,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85198,"byte_end":85271,"line_start":667,"line_end":667,"column_start":1,"column_end":74}},{"value":"/ [`digital::StatefulOutputPin`]: ../../embedded_hal/digital/trait.StatefulOutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85272,"byte_end":85363,"line_start":668,"line_end":668,"column_start":1,"column_end":92}},{"value":"/ [`digital::ToggleableOutputPin`]: ../../embedded_hal/digital/trait.ToggleableOutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85364,"byte_end":85459,"line_start":669,"line_end":669,"column_start":1,"column_end":96}},{"value":"/ [`Pwm`]: ../../embedded_hal/trait.Pwm.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85460,"byte_end":85506,"line_start":670,"line_end":670,"column_start":1,"column_end":47}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85507,"byte_end":85535,"line_start":671,"line_end":671,"column_start":1,"column_end":29}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85536,"byte_end":85579,"line_start":672,"line_end":672,"column_start":1,"column_end":44}},{"value":"/ [`Pin::into_io`]: struct.Pin.html#method.into_io","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85580,"byte_end":85632,"line_start":673,"line_end":673,"column_start":1,"column_end":53}},{"value":"/ [`digital::OutputPin`]: ../../embedded_hal/digital/trait.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85633,"byte_end":85708,"line_start":674,"line_end":674,"column_start":1,"column_end":76}},{"value":"/ [`PwmPin`]: ../../embedded_hal/trait.PwmPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":85709,"byte_end":85761,"line_start":675,"line_end":675,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86866,"byte_end":86870,"line_start":721,"line_end":721,"column_start":12,"column_end":16},"name":"mode","qualname":"<IoPin>::mode","value":"fn (&self) -> Mode","parent":null,"children":[],"decl_id":null,"docs":" Returns the pin's mode.\n","sig":null,"attributes":[{"value":"/ Returns the pin's mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86813,"byte_end":86840,"line_start":719,"line_end":719,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86845,"byte_end":86854,"line_start":720,"line_end":720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86973,"byte_end":86981,"line_start":727,"line_end":727,"column_start":12,"column_end":20},"name":"set_mode","qualname":"<IoPin>::set_mode","value":"fn (&mut self, mode: Mode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the pin's mode.\n","sig":null,"attributes":[{"value":"/ Sets the pin's mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86923,"byte_end":86947,"line_start":725,"line_end":725,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86952,"byte_end":86961,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":87498,"byte_end":87512,"line_start":741,"line_end":741,"column_start":12,"column_end":26},"name":"set_pullupdown","qualname":"<IoPin>::set_pullupdown","value":"fn (&mut self, pud: PullUpDown) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures the built-in pull-up/pull-down resistors.\n","sig":null,"attributes":[{"value":"/ Configures the built-in pull-up/pull-down resistors.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":87416,"byte_end":87472,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":87477,"byte_end":87486,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1441},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11818,"byte_end":11830,"line_start":175,"line_end":175,"column_start":5,"column_end":17},"name":"UnknownModel","qualname":"::gpio::Error::UnknownModel","value":"Error::UnknownModel","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" Unknown model.","sig":null,"attributes":[{"value":"/ Unknown model.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11338,"byte_end":11356,"line_start":165,"line_end":165,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11361,"byte_end":11364,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi model or SoC can't be identified. Support for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11369,"byte_end":11435,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/ new models is usually added shortly after they are officially","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11440,"byte_end":11505,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ announced and available to the public. Make sure you're using","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11510,"byte_end":11575,"line_start":169,"line_end":169,"column_start":5,"column_end":70}},{"value":"/ the latest release of RPPAL.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11580,"byte_end":11612,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11617,"byte_end":11620,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ You may also encounter this error if your Linux distribution","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11625,"byte_end":11689,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/ doesn't provide any of the common user-accessible system files","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11694,"byte_end":11760,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"/ that are used to identify the model and SoC.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11765,"byte_end":11813,"line_start":174,"line_end":174,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1443},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12360,"byte_end":12375,"line_start":187,"line_end":187,"column_start":5,"column_end":20},"name":"PinNotAvailable","qualname":"::gpio::Error::PinNotAvailable","value":"Error::PinNotAvailable(u8)","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" Pin is not available.","sig":null,"attributes":[{"value":"/ Pin is not available.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11836,"byte_end":11861,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11866,"byte_end":11869,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The pin is already in use elsewhere in your application, or the GPIO peripheral","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11874,"byte_end":11957,"line_start":178,"line_end":178,"column_start":5,"column_end":88}},{"value":"/ doesn't expose a pin with the specified number. If the pin is currently in use, you","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11962,"byte_end":12049,"line_start":179,"line_end":179,"column_start":5,"column_end":92}},{"value":"/ can retrieve it again after the [`Pin`] (or a derived [`InputPin`], [`OutputPin`] or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12054,"byte_end":12142,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ [`IoPin`]) instance goes out of scope.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12147,"byte_end":12189,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12194,"byte_end":12197,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12202,"byte_end":12230,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12235,"byte_end":12273,"line_start":184,"line_end":184,"column_start":5,"column_end":43}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12278,"byte_end":12318,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12323,"byte_end":12355,"line_start":186,"line_end":186,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1446},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12643,"byte_end":12659,"line_start":194,"line_end":194,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::gpio::Error::PermissionDenied","value":"Error::PermissionDenied(String)","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" Permission denied when opening `/dev/gpiomem`, `/dev/mem` or `/dev/gpiochipN` for\n read/write access.","sig":null,"attributes":[{"value":"/ Permission denied when opening `/dev/gpiomem`, `/dev/mem` or `/dev/gpiochipN` for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12385,"byte_end":12470,"line_start":188,"line_end":188,"column_start":5,"column_end":90}},{"value":"/ read/write access.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12475,"byte_end":12497,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12502,"byte_end":12505,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ More information on possible causes for this error can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12510,"byte_end":12585,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12590,"byte_end":12593,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#permission-denied","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12598,"byte_end":12638,"line_start":193,"line_end":193,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1449},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12692,"byte_end":12694,"line_start":196,"line_end":196,"column_start":5,"column_end":7},"name":"Io","qualname":"::gpio::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12673,"byte_end":12687,"line_start":195,"line_end":195,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1452},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12736,"byte_end":12747,"line_start":198,"line_end":198,"column_start":5,"column_end":16},"name":"ThreadPanic","qualname":"::gpio::Error::ThreadPanic","value":"Error::ThreadPanic","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" Thread panicked.\n","sig":null,"attributes":[{"value":"/ Thread panicked.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12711,"byte_end":12731,"line_start":197,"line_end":197,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1440},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11326,"byte_end":11331,"line_start":164,"line_end":164,"column_start":10,"column_end":15},"name":"Error","qualname":"::gpio::Error","value":"Error::{UnknownModel, PinNotAvailable, PermissionDenied, Io, ThreadPanic}","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1452}],"decl_id":null,"docs":" Errors that can occur when accessing the GPIO peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the GPIO peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":11238,"byte_end":11299,"line_start":162,"line_end":162,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":436},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13608,"byte_end":13614,"line_start":228,"line_end":228,"column_start":10,"column_end":16},"name":"Result","qualname":"::gpio::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `rppal::gpio::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `rppal::gpio::Error`s.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13524,"byte_end":13598,"line_start":227,"line_end":227,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1457},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13739,"byte_end":13744,"line_start":234,"line_end":234,"column_start":5,"column_end":10},"name":"Input","qualname":"::gpio::Mode::Input","value":"Mode::Input","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1460},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13758,"byte_end":13764,"line_start":235,"line_end":235,"column_start":5,"column_end":11},"name":"Output","qualname":"::gpio::Mode::Output","value":"Mode::Output","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1463},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13778,"byte_end":13782,"line_start":236,"line_end":236,"column_start":5,"column_end":9},"name":"Alt0","qualname":"::gpio::Mode::Alt0","value":"Mode::Alt0","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1466},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13796,"byte_end":13800,"line_start":237,"line_end":237,"column_start":5,"column_end":9},"name":"Alt1","qualname":"::gpio::Mode::Alt1","value":"Mode::Alt1","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1469},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13814,"byte_end":13818,"line_start":238,"line_end":238,"column_start":5,"column_end":9},"name":"Alt2","qualname":"::gpio::Mode::Alt2","value":"Mode::Alt2","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1472},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13832,"byte_end":13836,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Alt3","qualname":"::gpio::Mode::Alt3","value":"Mode::Alt3","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13850,"byte_end":13854,"line_start":240,"line_end":240,"column_start":5,"column_end":9},"name":"Alt4","qualname":"::gpio::Mode::Alt4","value":"Mode::Alt4","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1478},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13868,"byte_end":13872,"line_start":241,"line_end":241,"column_start":5,"column_end":9},"name":"Alt5","qualname":"::gpio::Mode::Alt5","value":"Mode::Alt5","parent":{"krate":0,"index":1456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1456},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13728,"byte_end":13732,"line_start":233,"line_end":233,"column_start":10,"column_end":14},"name":"Mode","qualname":"::gpio::Mode","value":"Mode::{Input, Output, Alt0, Alt1, Alt2, Alt3, Alt4, Alt5}","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1478}],"decl_id":null,"docs":" Pin modes.\n","sig":null,"attributes":[{"value":"/ Pin modes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13647,"byte_end":13661,"line_start":230,"line_end":230,"column_start":1,"column_end":15}},{"value":"repr(u8)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13707,"byte_end":13718,"line_start":232,"line_end":232,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1493},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14478,"byte_end":14481,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"Low","qualname":"::gpio::Level::Low","value":"Level::Low","parent":{"krate":0,"index":1492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14491,"byte_end":14495,"line_start":264,"line_end":264,"column_start":5,"column_end":9},"name":"High","qualname":"::gpio::Level::High","value":"Level::High","parent":{"krate":0,"index":1492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1492},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14466,"byte_end":14471,"line_start":262,"line_end":262,"column_start":10,"column_end":15},"name":"Level","qualname":"::gpio::Level","value":"Level::{Low, High}","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1496}],"decl_id":null,"docs":" Pin logic levels.\n","sig":null,"attributes":[{"value":"/ Pin logic levels.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14378,"byte_end":14399,"line_start":259,"line_end":259,"column_start":1,"column_end":22}},{"value":"repr(u8)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14445,"byte_end":14456,"line_start":261,"line_end":261,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1511},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15040,"byte_end":15043,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"Off","qualname":"::gpio::PullUpDown::Off","value":"PullUpDown::Off","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1514},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15056,"byte_end":15064,"line_start":291,"line_end":291,"column_start":5,"column_end":13},"name":"PullDown","qualname":"::gpio::PullUpDown::PullDown","value":"PullUpDown::PullDown","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1517},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15077,"byte_end":15083,"line_start":292,"line_end":292,"column_start":5,"column_end":11},"name":"PullUp","qualname":"::gpio::PullUpDown::PullUp","value":"PullUpDown::PullUp","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1510},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15023,"byte_end":15033,"line_start":289,"line_end":289,"column_start":10,"column_end":20},"name":"PullUpDown","qualname":"::gpio::PullUpDown","value":"PullUpDown::{Off, PullDown, PullUp}","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1517}],"decl_id":null,"docs":" Built-in pull-up/pull-down resistor states.\n","sig":null,"attributes":[{"value":"/ Built-in pull-up/pull-down resistor states.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14921,"byte_end":14968,"line_start":287,"line_end":287,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1532},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15499,"byte_end":15507,"line_start":308,"line_end":308,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::gpio::Trigger::Disabled","value":"Trigger::Disabled","parent":{"krate":0,"index":1531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15517,"byte_end":15527,"line_start":309,"line_end":309,"column_start":5,"column_end":15},"name":"RisingEdge","qualname":"::gpio::Trigger::RisingEdge","value":"Trigger::RisingEdge","parent":{"krate":0,"index":1531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15537,"byte_end":15548,"line_start":310,"line_end":310,"column_start":5,"column_end":16},"name":"FallingEdge","qualname":"::gpio::Trigger::FallingEdge","value":"Trigger::FallingEdge","parent":{"krate":0,"index":1531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1541},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15558,"byte_end":15562,"line_start":311,"line_end":311,"column_start":5,"column_end":9},"name":"Both","qualname":"::gpio::Trigger::Both","value":"Trigger::Both","parent":{"krate":0,"index":1531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1531},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15485,"byte_end":15492,"line_start":307,"line_end":307,"column_start":10,"column_end":17},"name":"Trigger","qualname":"::gpio::Trigger","value":"Trigger::{Disabled, RisingEdge, FallingEdge, Both}","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541}],"decl_id":null,"docs":" Interrupt trigger conditions.\n","sig":null,"attributes":[{"value":"/ Interrupt trigger conditions.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15397,"byte_end":15430,"line_start":305,"line_end":305,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1566},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":16981,"byte_end":16985,"line_start":354,"line_end":354,"column_start":12,"column_end":16},"name":"Gpio","qualname":"::gpio::Gpio","value":"Gpio {  }","parent":null,"children":[{"krate":0,"index":1567}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's GPIO peripheral.\n","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's GPIO peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":16887,"byte_end":16945,"line_start":352,"line_end":352,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":17074,"byte_end":17077,"line_start":360,"line_end":360,"column_start":12,"column_end":15},"name":"new","qualname":"<Gpio>::new","value":"fn () -> Result<Gpio>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Gpio`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Gpio`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":17034,"byte_end":17062,"line_start":359,"line_end":359,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18928,"byte_end":18931,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"get","qualname":"<Gpio>::get","value":"fn (&self, pin: u8) -> Result<Pin>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Pin`] for the specified BCM GPIO pin number.","sig":null,"attributes":[{"value":"/ Returns a [`Pin`] for the specified BCM GPIO pin number.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18187,"byte_end":18247,"line_start":391,"line_end":391,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18252,"byte_end":18255,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Retrieving a GPIO pin grants access to the pin through an owned [`Pin`] instance.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18260,"byte_end":18345,"line_start":393,"line_end":393,"column_start":5,"column_end":90}},{"value":"/ If the pin is already in use, or the GPIO peripheral doesn't expose a pin with the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18350,"byte_end":18436,"line_start":394,"line_end":394,"column_start":5,"column_end":91}},{"value":"/ specified number, `get` returns `Err(`[`Error::PinNotAvailable`]`)`. After a [`Pin`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18441,"byte_end":18529,"line_start":395,"line_end":395,"column_start":5,"column_end":93}},{"value":"/ (or a derived [`InputPin`], [`OutputPin`] or [`IoPin`]) goes out of scope, it","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18534,"byte_end":18615,"line_start":396,"line_end":396,"column_start":5,"column_end":86}},{"value":"/ can be retrieved again through another `get` call.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18620,"byte_end":18674,"line_start":397,"line_end":397,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18679,"byte_end":18682,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18687,"byte_end":18715,"line_start":399,"line_end":399,"column_start":5,"column_end":33}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18720,"byte_end":18758,"line_start":400,"line_end":400,"column_start":5,"column_end":43}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18763,"byte_end":18803,"line_start":401,"line_end":401,"column_start":5,"column_end":45}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18808,"byte_end":18840,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/ [`Error::PinNotAvailable`]: enum.Error.html#variant.PinNotAvailable","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":18845,"byte_end":18916,"line_start":403,"line_end":403,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":21277,"byte_end":21292,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"poll_interrupts","qualname":"<Gpio>::poll_interrupts","value":"fn <'a> (&self, pins: &[&'a InputPin], reset: bool, timeout: Option<Duration>) -> Result<Option<(&'a InputPin, Level)>>","parent":null,"children":[],"decl_id":null,"docs":" Blocks until an interrupt is triggered on any of the specified pins, or until a timeout occurs.","sig":null,"attributes":[{"value":"/ Blocks until an interrupt is triggered on any of the specified pins, or until a timeout occurs.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":19455,"byte_end":19554,"line_start":419,"line_end":419,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":19559,"byte_end":19562,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Only pins that have been previously configured for synchronous interrupts using [`InputPin::set_interrupt`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":19567,"byte_end":19678,"line_start":421,"line_end":421,"column_start":5,"column_end":116}},{"value":"/ can be polled. Asynchronous interrupt triggers are automatically polled on a separate thread.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":19683,"byte_end":19780,"line_start":422,"line_end":422,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":19785,"byte_end":19788,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Calling `poll_interrupts` blocks any other calls to `poll_interrupts` or [`InputPin::poll_interrupt`] until","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":19793,"byte_end":19904,"line_start":424,"line_end":424,"column_start":5,"column_end":116}},{"value":"/ it returns. If you need to poll multiple pins simultaneously on different threads, consider using","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":19909,"byte_end":20010,"line_start":425,"line_end":425,"column_start":5,"column_end":106}},{"value":"/ asynchronous interrupts with [`InputPin::set_async_interrupt`] instead.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20015,"byte_end":20090,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20095,"byte_end":20098,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Setting `reset` to `false` returns any cached interrupt trigger events if available. Setting `reset` to `true`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20103,"byte_end":20217,"line_start":428,"line_end":428,"column_start":5,"column_end":119}},{"value":"/ clears all cached events before polling for new events.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20222,"byte_end":20281,"line_start":429,"line_end":429,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20286,"byte_end":20289,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The `timeout` duration indicates how long the call to `poll_interrupts` will block while waiting","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20294,"byte_end":20394,"line_start":431,"line_end":431,"column_start":5,"column_end":105}},{"value":"/ for interrupt trigger events, after which an `Ok(None)` is returned.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20399,"byte_end":20471,"line_start":432,"line_end":432,"column_start":5,"column_end":77}},{"value":"/ `timeout` can be set to `None` to wait indefinitely.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20476,"byte_end":20532,"line_start":433,"line_end":433,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20537,"byte_end":20540,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ When an interrupt event is triggered, `poll_interrupts` returns","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20545,"byte_end":20612,"line_start":435,"line_end":435,"column_start":5,"column_end":72}},{"value":"/ `Ok((&`[`InputPin`]`, `[`Level`]`))` containing the corresponding pin and logic level. If multiple events trigger","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20617,"byte_end":20734,"line_start":436,"line_end":436,"column_start":5,"column_end":122}},{"value":"/ at the same time, only the first one is returned. The remaining events are cached and will be returned","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20739,"byte_end":20845,"line_start":437,"line_end":437,"column_start":5,"column_end":111}},{"value":"/ the next time [`InputPin::poll_interrupt`] or `poll_interrupts` is called.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20850,"byte_end":20928,"line_start":438,"line_end":438,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20933,"byte_end":20936,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ [`InputPin::set_interrupt`]: struct.InputPin.html#method.set_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":20941,"byte_end":21015,"line_start":440,"line_end":440,"column_start":5,"column_end":79}},{"value":"/ [`InputPin::poll_interrupt`]: struct.InputPin.html#method.poll_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":21020,"byte_end":21096,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ [`InputPin::set_async_interrupt`]: struct.InputPin.html#method.set_async_interrupt","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":21101,"byte_end":21187,"line_start":442,"line_end":442,"column_start":5,"column_end":91}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":21192,"byte_end":21230,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ [`Level`]: enum.Level.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":21235,"byte_end":21265,"line_start":444,"line_end":444,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":462},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hal","qualname":"::hal","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1574},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":1578},{"krate":0,"index":1584},{"krate":0,"index":1583},{"krate":0,"index":1581},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499}],"decl_id":null,"docs":" Miscellaneous `embedded-hal` trait implementations.","sig":null,"attributes":[{"value":"cfg(feature = \"hal\")","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2014,"byte_end":2037,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"! Miscellaneous `embedded-hal` trait implementations.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":96975,"byte_end":97030,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97031,"byte_end":97034,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! The `hal` module consists of a collection of `embedded-hal` trait","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97035,"byte_end":97104,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"! implementations for traits that aren't tied to a specific peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97105,"byte_end":97178,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97179,"byte_end":97182,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! This module is only included when either the `hal` or `hal-unproven` feature","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97183,"byte_end":97263,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"! flag is enabled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97264,"byte_end":97284,"line_start":27,"line_end":27,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1573},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97551,"byte_end":97556,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Delay","qualname":"::hal::Delay","value":"Delay {  }","parent":null,"children":[],"decl_id":null,"docs":" Implements the `embedded-hal` `DelayMs` and `DelayUs` traits.\n","sig":null,"attributes":[{"value":"/ Implements the `embedded-hal` `DelayMs` and `DelayUs` traits.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97448,"byte_end":97513,"line_start":36,"line_end":36,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97619,"byte_end":97622,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"fn () -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Delay`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Delay`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97578,"byte_end":97607,"line_start":41,"line_end":41,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98808,"byte_end":98813,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"Hertz","qualname":"::hal::Hertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype wrapper for `f64`. Converts into `Duration`.\n","sig":null,"attributes":[{"value":"/ Newtype wrapper for `f64`. Converts into `Duration`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98740,"byte_end":98796,"line_start":95,"line_end":95,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99175,"byte_end":99180,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"Timer","qualname":"::hal::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"decl_id":null,"docs":" Implements the `embedded-hal` `CountDown` trait.\n","sig":null,"attributes":[{"value":"/ Implements the `embedded-hal` `CountDown` trait.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99081,"byte_end":99133,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99286,"byte_end":99289,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Timer`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Timer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99245,"byte_end":99274,"line_start":116,"line_end":116,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":504},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::i2c","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":540},{"krate":0,"index":645},{"krate":0,"index":1673},{"krate":0,"index":1684},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":1686},{"krate":0,"index":1693},{"krate":0,"index":655},{"krate":0,"index":685}],"decl_id":null,"docs":" Interface for the I2C peripheral.","sig":null,"attributes":[{"value":"! Interface for the I2C peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101122,"byte_end":101159,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101160,"byte_end":101163,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! The Broadcom Serial Controller (BSC) peripheral controls a proprietary bus","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101164,"byte_end":101242,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"! compliant with the I2C bus/interface. RPPAL communicates with the BSC","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101243,"byte_end":101316,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"! using the `i2cdev` device interface.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101317,"byte_end":101357,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101358,"byte_end":101361,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ## I2C buses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101362,"byte_end":101378,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101379,"byte_end":101382,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The Raspberry Pi's BCM283x SoC supports three hardware I2C buses, however","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101383,"byte_end":101460,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! only the I2C bus on physical pins 3 and 5 should be used to communicate","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101461,"byte_end":101536,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"! with slave devices. The other two buses are used internally as an HDMI","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101537,"byte_end":101611,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"! interface, and for HAT identification.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101612,"byte_end":101654,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101655,"byte_end":101658,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! The I2C bus connected to physical pins 3 (SDA) and 5 (SCL) is disabled by","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101659,"byte_end":101736,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"! default. You can enable it through `sudo raspi-config`, or by manually","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101737,"byte_end":101811,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"! adding `dtparam=i2c_arm=on` to `/boot/config.txt`. Remember to reboot","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101812,"byte_end":101885,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"! the Raspberry Pi afterwards.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101886,"byte_end":101918,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101919,"byte_end":101922,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! In addition to the hardware I2C buses, it's possible to configure a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101923,"byte_end":101994,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"! bit-banged software I2C bus on any available GPIO pins through the `i2c-gpio`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":101995,"byte_end":102076,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"! device tree overlay. More details on enabling and configuring `i2c-gpio`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102077,"byte_end":102153,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"! can be found in `/boot/overlays/README`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102154,"byte_end":102198,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102199,"byte_end":102202,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! ## Transmission speed","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102203,"byte_end":102228,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102229,"byte_end":102232,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! The BSC supports I2C data transfer rates up to 400 kbit/s (Fast-mode).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102233,"byte_end":102307,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102308,"byte_end":102311,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! By default, the I2C bus clock speed is set to 100 kHz. Transferring","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102312,"byte_end":102383,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"! 1 bit takes 1 clock cycle. You can change the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102384,"byte_end":102433,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"! transfer rate by adding `dtparam=i2c_arm_baudrate=X` to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102434,"byte_end":102493,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"! `/boot/config.txt`, where `X` should be replaced with the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102494,"byte_end":102555,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"! clock frequency in hertz (Hz). Remember to reboot","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102556,"byte_end":102609,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"! the Raspberry Pi afterwards.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102610,"byte_end":102642,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102643,"byte_end":102646,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! ## Not supported","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102647,"byte_end":102667,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102668,"byte_end":102671,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! Some I2C and SMBus features aren't fully supported by the `i2cdev` interface, the underlying driver or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102672,"byte_end":102778,"line_start":57,"line_end":57,"column_start":1,"column_end":107}},{"value":"! the BCM283x SoC: 10-bit slave addresses, SMBus Block Read, SMBus Block Process Call, SMBus Host Notify,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102779,"byte_end":102886,"line_start":58,"line_end":58,"column_start":1,"column_end":108}},{"value":"! SMBus Read/Write 32/64, and the SMBus Address Resolution Protocol.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102887,"byte_end":102957,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102958,"byte_end":102961,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! While clock stretching is supported, a bug exists in the implementation on the BCM283x SoC that will result","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":102962,"byte_end":103073,"line_start":61,"line_end":61,"column_start":1,"column_end":112}},{"value":"! in corrupted data when a slave device uses clock stretching at arbitrary points during the transfer.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103074,"byte_end":103178,"line_start":62,"line_end":62,"column_start":1,"column_end":105}},{"value":"! Clock stretching only works properly during read operations, directly after the ACK phase, when the additional","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103179,"byte_end":103293,"line_start":63,"line_end":63,"column_start":1,"column_end":115}},{"value":"! delay is longer than half of a clock period. More information can be found [here](https://elinux.org/BCM2835_datasheet_errata#p35_I2C_clock_stretching).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103294,"byte_end":103450,"line_start":64,"line_end":64,"column_start":1,"column_end":157}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103451,"byte_end":103454,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! A possible workaround for slave devices that require clock stretching at other points during the transfer is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103455,"byte_end":103567,"line_start":66,"line_end":66,"column_start":1,"column_end":113}},{"value":"! to use a bit-banged software I2C bus by configuring the `i2c-gpio` device tree overlay as described in `/boot/overlays/README`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103568,"byte_end":103699,"line_start":67,"line_end":67,"column_start":1,"column_end":132}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103700,"byte_end":103703,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! ## Troubleshooting","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103704,"byte_end":103726,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103727,"byte_end":103730,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! ### Permission denied","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103731,"byte_end":103756,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103757,"byte_end":103760,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! If [`new`] or [`with_bus`] returns an `io::ErrorKind::PermissionDenied`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103761,"byte_end":103836,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"! error, make sure the file permissions for `/dev/i2c-1` or `/dev/i2c-0`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103837,"byte_end":103911,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"! are correct, and the current user is a member of the `i2c` group.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103912,"byte_end":103981,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103982,"byte_end":103985,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ### Timed out","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":103986,"byte_end":104003,"line_start":77,"line_end":77,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104004,"byte_end":104007,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! Transactions return an `io::ErrorKind::TimedOut` error when their duration","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104008,"byte_end":104086,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"! exceeds the timeout value. You can change the timeout using [`set_timeout`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104087,"byte_end":104167,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104168,"byte_end":104171,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! [`new`]: struct.I2c.html#method.new","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104172,"byte_end":104211,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"! [`with_bus`]: struct.I2c.html#method.with_bus","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104212,"byte_end":104261,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"! [`set_timeout`]: struct.I2c.html#method.set_timeout","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104262,"byte_end":104317,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"allow(dead_code)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104319,"byte_end":104339,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1586},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131152,"byte_end":131164,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::i2c::ioctl::Capabilities","value":"Capabilities {  }","parent":null,"children":[{"krate":0,"index":1587}],"decl_id":null,"docs":" Lists the features supported by the underlying drivers.\n","sig":null,"attributes":[{"value":"/ Lists the features supported by the underlying drivers.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131047,"byte_end":131106,"line_start":60,"line_end":60,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131698,"byte_end":131708,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"addr_10bit","qualname":"<Capabilities>::addr_10bit","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether 10-bit addresses are supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether 10-bit addresses are supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131633,"byte_end":131686,"line_start":83,"line_end":83,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131841,"byte_end":131855,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"i2c_block_read","qualname":"<Capabilities>::i2c_block_read","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether I2C Block Read is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether I2C Block Read is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131779,"byte_end":131829,"line_start":88,"line_end":88,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131999,"byte_end":132014,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"i2c_block_write","qualname":"<Capabilities>::i2c_block_write","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether I2C Block Write is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether I2C Block Write is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131936,"byte_end":131987,"line_start":93,"line_end":93,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132476,"byte_end":132495,"line_start":109,"line_end":109,"column_start":12,"column_end":31},"name":"smbus_quick_command","qualname":"<Capabilities>::smbus_quick_command","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Quick Command is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Quick Command is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132409,"byte_end":132464,"line_start":108,"line_end":108,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132633,"byte_end":132651,"line_start":114,"line_end":114,"column_start":12,"column_end":30},"name":"smbus_receive_byte","qualname":"<Capabilities>::smbus_receive_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Receive Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Receive Byte is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132567,"byte_end":132621,"line_start":113,"line_end":113,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132790,"byte_end":132805,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"smbus_send_byte","qualname":"<Capabilities>::smbus_send_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Send Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Send Byte is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132727,"byte_end":132778,"line_start":118,"line_end":118,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132945,"byte_end":132960,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"smbus_read_byte","qualname":"<Capabilities>::smbus_read_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Read Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Read Byte is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":132882,"byte_end":132933,"line_start":123,"line_end":123,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133105,"byte_end":133121,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"smbus_write_byte","qualname":"<Capabilities>::smbus_write_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Write Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Write Byte is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133041,"byte_end":133093,"line_start":128,"line_end":128,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133266,"byte_end":133281,"line_start":134,"line_end":134,"column_start":12,"column_end":27},"name":"smbus_read_word","qualname":"<Capabilities>::smbus_read_word","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Read Word is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Read Word is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133203,"byte_end":133254,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133426,"byte_end":133442,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"smbus_write_word","qualname":"<Capabilities>::smbus_write_word","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Write Word is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Write Word is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133362,"byte_end":133414,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133590,"byte_end":133608,"line_start":144,"line_end":144,"column_start":12,"column_end":30},"name":"smbus_process_call","qualname":"<Capabilities>::smbus_process_call","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Process Call is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Process Call is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133524,"byte_end":133578,"line_start":143,"line_end":143,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133748,"byte_end":133764,"line_start":149,"line_end":149,"column_start":12,"column_end":28},"name":"smbus_block_read","qualname":"<Capabilities>::smbus_block_read","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Block Read is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Block Read is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133684,"byte_end":133736,"line_start":148,"line_end":148,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133911,"byte_end":133928,"line_start":154,"line_end":154,"column_start":12,"column_end":29},"name":"smbus_block_write","qualname":"<Capabilities>::smbus_block_write","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Block Write is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Block Write is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":133846,"byte_end":133899,"line_start":153,"line_end":153,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134083,"byte_end":134107,"line_start":159,"line_end":159,"column_start":12,"column_end":36},"name":"smbus_block_process_call","qualname":"<Capabilities>::smbus_block_process_call","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Block Process Call is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Block Process Call is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134011,"byte_end":134071,"line_start":158,"line_end":158,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134264,"byte_end":134273,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"smbus_pec","qualname":"<Capabilities>::smbus_pec","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Packet Error Checking is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Packet Error Checking is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134189,"byte_end":134252,"line_start":163,"line_end":163,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134408,"byte_end":134425,"line_start":169,"line_end":169,"column_start":12,"column_end":29},"name":"smbus_host_notify","qualname":"<Capabilities>::smbus_host_notify","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Host Notify is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Host Notify is supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134343,"byte_end":134396,"line_start":168,"line_end":168,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1674},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104805,"byte_end":104807,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"Io","qualname":"::i2c::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1673},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104786,"byte_end":104800,"line_start":111,"line_end":111,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1677},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105165,"byte_end":105184,"line_start":120,"line_end":120,"column_start":5,"column_end":24},"name":"InvalidSlaveAddress","qualname":"::i2c::Error::InvalidSlaveAddress","value":"Error::InvalidSlaveAddress(u16)","parent":{"krate":0,"index":1673},"children":[],"decl_id":null,"docs":" Invalid slave address.","sig":null,"attributes":[{"value":"/ Invalid slave address.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104824,"byte_end":104850,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104855,"byte_end":104858,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ I2C supports 7-bit and 10-bit addresses. Several 7-bit addresses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104863,"byte_end":104931,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ are reserved, and can't be used as slave addresses. A list of","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104936,"byte_end":105001,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/ those reserved addresses can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105006,"byte_end":105055,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105060,"byte_end":105063,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [here]: https://en.wikipedia.org/wiki/I%C2%B2C#Reserved_addresses_in_7-bit_address_space","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105068,"byte_end":105160,"line_start":119,"line_end":119,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1680},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105333,"byte_end":105352,"line_start":124,"line_end":124,"column_start":5,"column_end":24},"name":"FeatureNotSupported","qualname":"::i2c::Error::FeatureNotSupported","value":"Error::FeatureNotSupported","parent":{"krate":0,"index":1673},"children":[],"decl_id":null,"docs":" I2C/SMBus feature not supported.","sig":null,"attributes":[{"value":"/ I2C/SMBus feature not supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105195,"byte_end":105231,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105236,"byte_end":105239,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The underlying drivers don't support the selected I2C feature or SMBus protocol.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105244,"byte_end":105328,"line_start":123,"line_end":123,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1682},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105838,"byte_end":105850,"line_start":135,"line_end":135,"column_start":5,"column_end":17},"name":"UnknownModel","qualname":"::i2c::Error::UnknownModel","value":"Error::UnknownModel","parent":{"krate":0,"index":1673},"children":[],"decl_id":null,"docs":" Unknown model.","sig":null,"attributes":[{"value":"/ Unknown model.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105358,"byte_end":105376,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105381,"byte_end":105384,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi model or SoC can't be identified. Support for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105389,"byte_end":105455,"line_start":127,"line_end":127,"column_start":5,"column_end":71}},{"value":"/ new models is usually added shortly after they are officially","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105460,"byte_end":105525,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ announced and available to the public. Make sure you're using","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105530,"byte_end":105595,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/ the latest release of RPPAL.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105600,"byte_end":105632,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105637,"byte_end":105640,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ You may also encounter this error if your Linux distribution","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105645,"byte_end":105709,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/ doesn't provide any of the common user-accessible system files","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105714,"byte_end":105780,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/ that are used to identify the model and SoC.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105785,"byte_end":105833,"line_start":134,"line_end":134,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1673},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104774,"byte_end":104779,"line_start":110,"line_end":110,"column_start":10,"column_end":15},"name":"Error","qualname":"::i2c::Error","value":"Error::{Io, InvalidSlaveAddress, FeatureNotSupported, UnknownModel}","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1682}],"decl_id":null,"docs":" Errors that can occur when accessing the I2C peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the I2C peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":104687,"byte_end":104747,"line_start":108,"line_end":108,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":653},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106650,"byte_end":106656,"line_start":164,"line_end":164,"column_start":10,"column_end":16},"name":"Result","qualname":"::i2c::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `i2c::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `i2c::Error`s.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106574,"byte_end":106640,"line_start":163,"line_end":163,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1686},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107863,"byte_end":107866,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"I2c","qualname":"::i2c::I2c","value":"I2c {  }","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's I2C peripheral.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's I2C peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106689,"byte_end":106746,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106747,"byte_end":106750,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Before using `I2c`, make sure your Raspberry Pi has the necessary I2C buses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106751,"byte_end":106830,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ enabled. More information can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106831,"byte_end":106881,"line_start":169,"line_end":169,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106882,"byte_end":106885,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Besides basic I2C communication through buffer reads and writes, `I2c` can","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106886,"byte_end":106964,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ also be used with devices that require SMBus (System Management Bus) support.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106965,"byte_end":107046,"line_start":172,"line_end":172,"column_start":1,"column_end":82}},{"value":"/ SMBus is based on I2C, and defines more structured message transactions","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107047,"byte_end":107122,"line_start":173,"line_end":173,"column_start":1,"column_end":76}},{"value":"/ through its various protocols. More details can be found in the latest SMBus","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107123,"byte_end":107203,"line_start":174,"line_end":174,"column_start":1,"column_end":81}},{"value":"/ [specification].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107204,"byte_end":107224,"line_start":175,"line_end":175,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107225,"byte_end":107228,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`blocking::i2c::Read`], [`blocking::i2c::Write`] and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107229,"byte_end":107305,"line_start":177,"line_end":177,"column_start":1,"column_end":77}},{"value":"/ [`blocking::i2c::WriteRead`] trait implementations for `Spi` can be enabled","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107306,"byte_end":107385,"line_start":178,"line_end":178,"column_start":1,"column_end":80}},{"value":"/ by specifying the optional `hal`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107386,"byte_end":107422,"line_start":179,"line_end":179,"column_start":1,"column_end":37}},{"value":"/ feature in the dependency declaration for the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107423,"byte_end":107487,"line_start":180,"line_end":180,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107488,"byte_end":107491,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html#i2c-buses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107492,"byte_end":107524,"line_start":182,"line_end":182,"column_start":1,"column_end":33}},{"value":"/ [specification]: http://smbus.org/specs/SMBus_3_1_20180319.pdf","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107525,"byte_end":107591,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`blocking::i2c::Read`]: ../../embedded_hal/blocking/i2c/trait.Read.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107592,"byte_end":107668,"line_start":184,"line_end":184,"column_start":1,"column_end":77}},{"value":"/ [`blocking::i2c::Write`]: ../../embedded_hal/blocking/i2c/trait.Write.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107669,"byte_end":107747,"line_start":185,"line_end":185,"column_start":1,"column_end":79}},{"value":"/ [`blocking::i2c::WriteRead`]: ../../embedded_hal/blocking/i2c/trait.WriteRead.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":107748,"byte_end":107834,"line_start":186,"line_end":186,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108659,"byte_end":108662,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"name":"new","qualname":"<I2c>::new","value":"fn () -> Result<I2c>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `I2c`.","sig":null,"attributes":[{"value":"/ Constructs a new `I2c`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108254,"byte_end":108281,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108286,"byte_end":108289,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ `new` attempts to identify which I2C bus is bound to physical pins 3 (SDA)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108294,"byte_end":108372,"line_start":203,"line_end":203,"column_start":5,"column_end":83}},{"value":"/ and 5 (SCL) based on the Raspberry Pi model. For the early model B Rev 1,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108377,"byte_end":108454,"line_start":204,"line_end":204,"column_start":5,"column_end":82}},{"value":"/ bus 0 is selected. For every other model, bus 1 is used.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108459,"byte_end":108519,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108524,"byte_end":108527,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ More information on configuring the I2C buses can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108532,"byte_end":108602,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108607,"byte_end":108610,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#i2c-buses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108615,"byte_end":108647,"line_start":209,"line_end":209,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":109326,"byte_end":109334,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"with_bus","qualname":"<I2c>::with_bus","value":"fn (bus: u8) -> Result<I2c>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `I2c` using the specified bus.","sig":null,"attributes":[{"value":"/ Constructs a new `I2c` using the specified bus.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108838,"byte_end":108889,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108894,"byte_end":108897,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ `bus` indicates the selected I2C bus. You'll typically want to select the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108902,"byte_end":108979,"line_start":219,"line_end":219,"column_start":5,"column_end":82}},{"value":"/ bus that's bound to physical pins 3 (SDA) and 5 (SCL). On the Raspberry","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108984,"byte_end":109059,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ Pi Model B Rev 1, those pins are tied to bus 0. On every other Raspberry","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":109064,"byte_end":109140,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ Pi model, they're connected to bus 1.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":109145,"byte_end":109186,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":109191,"byte_end":109194,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ More information on configuring the I2C buses can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":109199,"byte_end":109269,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":109274,"byte_end":109277,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#i2c-buses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":109282,"byte_end":109314,"line_start":226,"line_end":226,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110455,"byte_end":110467,"line_start":263,"line_end":263,"column_start":12,"column_end":24},"name":"capabilities","qualname":"<I2c>::capabilities","value":"fn (&self) -> Capabilities","parent":null,"children":[],"decl_id":null,"docs":" Returns information on the functionality supported by the underlying drivers.","sig":null,"attributes":[{"value":"/ Returns information on the functionality supported by the underlying drivers.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110196,"byte_end":110277,"line_start":257,"line_end":257,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110282,"byte_end":110285,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The returned [`Capabilities`] instance lists the available","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110290,"byte_end":110352,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/ I2C and SMBus features.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110357,"byte_end":110384,"line_start":260,"line_end":260,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110389,"byte_end":110392,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ [`Capabilities`]: struct.Capabilities.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110397,"byte_end":110443,"line_start":262,"line_end":262,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110562,"byte_end":110565,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"bus","qualname":"<I2c>::bus","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the I2C bus ID.\n","sig":null,"attributes":[{"value":"/ Returns the I2C bus ID.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110523,"byte_end":110550,"line_start":267,"line_end":267,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110667,"byte_end":110678,"line_start":273,"line_end":273,"column_start":12,"column_end":23},"name":"clock_speed","qualname":"<I2c>::clock_speed","value":"fn (&self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the clock frequency in hertz (Hz).\n","sig":null,"attributes":[{"value":"/ Returns the clock frequency in hertz (Hz).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":110609,"byte_end":110655,"line_start":272,"line_end":272,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111692,"byte_end":111709,"line_start":300,"line_end":300,"column_start":12,"column_end":29},"name":"set_slave_address","qualname":"<I2c>::set_slave_address","value":"fn (&mut self, slave_address: u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a 7-bit or 10-bit slave address.","sig":null,"attributes":[{"value":"/ Sets a 7-bit or 10-bit slave address.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111077,"byte_end":111118,"line_start":288,"line_end":288,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111123,"byte_end":111126,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ `slave_address` refers to the slave device you're communicating with.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111131,"byte_end":111204,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ The specified address shouldn't include the R/W bit.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111209,"byte_end":111265,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111270,"byte_end":111273,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ By default, 10-bit addressing is disabled, which means","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111278,"byte_end":111336,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ `set_slave_address` only accepts 7-bit addresses. 10-bit addressing","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111341,"byte_end":111412,"line_start":294,"line_end":294,"column_start":5,"column_end":76}},{"value":"/ can be enabled with [`set_addr_10bit`]. Note that setting a 7-bit","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111417,"byte_end":111486,"line_start":295,"line_end":295,"column_start":5,"column_end":74}},{"value":"/ address when 10-bit addressing is enabled won't correctly target a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111491,"byte_end":111561,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ slave device that doesn't support 10-bit addresses.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111566,"byte_end":111621,"line_start":297,"line_end":297,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111626,"byte_end":111629,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ [`set_addr_10bit`]: #method.set_addr_10bit","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":111634,"byte_end":111680,"line_start":299,"line_end":299,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":112493,"byte_end":112504,"line_start":322,"line_end":322,"column_start":12,"column_end":23},"name":"set_timeout","qualname":"<I2c>::set_timeout","value":"fn (&self, timeout: u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum duration of a transaction in milliseconds (ms).","sig":null,"attributes":[{"value":"/ Sets the maximum duration of a transaction in milliseconds (ms).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":112249,"byte_end":112317,"line_start":316,"line_end":316,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":112322,"byte_end":112325,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Transactions that take longer than `timeout` return an","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":112330,"byte_end":112388,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ `io::ErrorKind::TimedOut` error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":112393,"byte_end":112429,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":112434,"byte_end":112437,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ `timeout` has a resolution of 10ms.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":112442,"byte_end":112481,"line_start":321,"line_end":321,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113423,"byte_end":113437,"line_start":345,"line_end":345,"column_start":12,"column_end":26},"name":"set_addr_10bit","qualname":"<I2c>::set_addr_10bit","value":"fn (&mut self, addr_10bit: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables 10-bit addressing.","sig":null,"attributes":[{"value":"/ Enables or disables 10-bit addressing.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113017,"byte_end":113059,"line_start":337,"line_end":337,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113064,"byte_end":113067,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ 10-bit addressing currently isn't supported on the Raspberry Pi. `set_addr_10bit` returns","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113072,"byte_end":113165,"line_start":339,"line_end":339,"column_start":5,"column_end":98}},{"value":"/ `Err(`[`Error::FeatureNotSupported`]`)` unless underlying driver support is detected.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113170,"byte_end":113259,"line_start":340,"line_end":340,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113264,"byte_end":113267,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ By default, `addr_10bit` is set to `false`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113272,"byte_end":113319,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113324,"byte_end":113327,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [`Error::FeatureNotSupported`]: enum.Error.html#variant.FeatureNotSupported","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113332,"byte_end":113411,"line_start":344,"line_end":344,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114026,"byte_end":114030,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"read","qualname":"<I2c>::read","value":"fn (&mut self, buffer: &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives incoming data from the slave device and writes it to `buffer`.","sig":null,"attributes":[{"value":"/ Receives incoming data from the slave device and writes it to `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113739,"byte_end":113814,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113819,"byte_end":113822,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ `read` reads as many bytes as can fit in `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113827,"byte_end":113881,"line_start":359,"line_end":359,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113886,"byte_end":113889,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Read Bit → Incoming Bytes → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113894,"byte_end":113964,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113969,"byte_end":113972,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":113977,"byte_end":114014,"line_start":363,"line_end":363,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114348,"byte_end":114353,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"write","qualname":"<I2c>::write","value":"fn (&mut self, buffer: &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends the outgoing data contained in `buffer` to the slave device.","sig":null,"attributes":[{"value":"/ Sends the outgoing data contained in `buffer` to the slave device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114129,"byte_end":114199,"line_start":368,"line_end":368,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114204,"byte_end":114207,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Outgoing Bytes → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114212,"byte_end":114283,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114288,"byte_end":114291,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were written.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114296,"byte_end":114336,"line_start":372,"line_end":372,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115200,"byte_end":115210,"line_start":392,"line_end":392,"column_start":12,"column_end":22},"name":"write_read","qualname":"<I2c>::write_read","value":"fn (&self, write_buffer: &[u8], read_buffer: &mut [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends the outgoing data contained in `write_buffer` to the slave device, and\n then fills `read_buffer` with incoming data.","sig":null,"attributes":[{"value":"/ Sends the outgoing data contained in `write_buffer` to the slave device, and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114449,"byte_end":114529,"line_start":377,"line_end":377,"column_start":5,"column_end":85}},{"value":"/ then fills `read_buffer` with incoming data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114534,"byte_end":114582,"line_start":378,"line_end":378,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114587,"byte_end":114590,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Compared to calling [`write`] and [`read`] separately, `write_read` doesn't","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114595,"byte_end":114674,"line_start":380,"line_end":380,"column_start":5,"column_end":84}},{"value":"/ issue a STOP condition in between the write and read operation. A repeated","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114679,"byte_end":114757,"line_start":381,"line_end":381,"column_start":5,"column_end":83}},{"value":"/ START is sent instead.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114762,"byte_end":114788,"line_start":382,"line_end":382,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114793,"byte_end":114796,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ `write_read` reads as many bytes as can fit in `read_buffer`. The maximum","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114801,"byte_end":114878,"line_start":384,"line_end":384,"column_start":5,"column_end":82}},{"value":"/ number of bytes in either `write_buffer` or `read_buffer` can't exceed 8192.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114883,"byte_end":114963,"line_start":385,"line_end":385,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114968,"byte_end":114971,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Outgoing Bytes → Repeated START →","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":114976,"byte_end":115061,"line_start":387,"line_end":387,"column_start":5,"column_end":82}},{"value":"/ Address + Read Bit → Incoming Bytes → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115066,"byte_end":115116,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115121,"byte_end":115124,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115129,"byte_end":115157,"line_start":390,"line_end":390,"column_start":5,"column_end":33}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115162,"byte_end":115188,"line_start":391,"line_end":391,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116177,"byte_end":116187,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"block_read","qualname":"<I2c>::block_read","value":"fn (&self, command: u8, buffer: &mut [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and then fills a multi-byte `buffer` with\n incoming data.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and then fills a multi-byte `buffer` with","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115492,"byte_end":115563,"line_start":404,"line_end":404,"column_start":5,"column_end":76}},{"value":"/ incoming data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115568,"byte_end":115586,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115591,"byte_end":115594,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ `block_read` can read a maximum of 32 bytes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115599,"byte_end":115647,"line_start":407,"line_end":407,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115652,"byte_end":115655,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Although `block_read` isn't part of the SMBus protocol, it uses the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115660,"byte_end":115731,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ SMBus functionality to offer this commonly used I2C transaction format.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115736,"byte_end":115811,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ The difference between `block_read` and [`smbus_block_read`] is that the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115816,"byte_end":115892,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ latter also expects a byte count from the slave device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115897,"byte_end":115956,"line_start":412,"line_end":412,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115961,"byte_end":115964,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":115969,"byte_end":116043,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Bytes → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116048,"byte_end":116102,"line_start":415,"line_end":415,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116107,"byte_end":116110,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ [`smbus_block_read`]: #method.smbus_block_read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116115,"byte_end":116165,"line_start":417,"line_end":417,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117013,"byte_end":117024,"line_start":437,"line_end":437,"column_start":12,"column_end":23},"name":"block_write","qualname":"<I2c>::block_write","value":"fn (&self, command: u8, buffer: &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` followed by a multi-byte `buffer`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` followed by a multi-byte `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116344,"byte_end":116407,"line_start":424,"line_end":424,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116412,"byte_end":116415,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `block_write` can write a maximum of 32 bytes. Any additional data contained","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116420,"byte_end":116500,"line_start":426,"line_end":426,"column_start":5,"column_end":85}},{"value":"/ in `buffer` is ignored.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116505,"byte_end":116532,"line_start":427,"line_end":427,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116537,"byte_end":116540,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Although `block_write` isn't part of the SMBus protocol, it uses the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116545,"byte_end":116617,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ SMBus functionality to offer this commonly used I2C transaction format. The","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116622,"byte_end":116701,"line_start":430,"line_end":430,"column_start":5,"column_end":84}},{"value":"/ difference between `block_write` and [`smbus_block_write`] is that the latter","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116706,"byte_end":116787,"line_start":431,"line_end":431,"column_start":5,"column_end":86}},{"value":"/ also sends a byte count to the slave device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116792,"byte_end":116840,"line_start":432,"line_end":432,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116845,"byte_end":116848,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Bytes → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116853,"byte_end":116936,"line_start":434,"line_end":434,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116941,"byte_end":116944,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ [`smbus_block_write`]: #method.smbus_block_write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":116949,"byte_end":117001,"line_start":436,"line_end":436,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117457,"byte_end":117476,"line_start":449,"line_end":449,"column_start":12,"column_end":31},"name":"smbus_quick_command","qualname":"<I2c>::smbus_quick_command","value":"fn (&self, command: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends a 1-bit `command` in place of the R/W bit.","sig":null,"attributes":[{"value":"/ Sends a 1-bit `command` in place of the R/W bit.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117326,"byte_end":117378,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117383,"byte_end":117386,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Command Bit → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117391,"byte_end":117445,"line_start":448,"line_end":448,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117735,"byte_end":117753,"line_start":458,"line_end":458,"column_start":12,"column_end":30},"name":"smbus_receive_byte","qualname":"<I2c>::smbus_receive_byte","value":"fn (&self) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Receives an 8-bit value.","sig":null,"attributes":[{"value":"/ Receives an 8-bit value.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117613,"byte_end":117641,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117646,"byte_end":117649,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Read Bit → Incoming Byte → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117654,"byte_end":117723,"line_start":457,"line_end":457,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117974,"byte_end":117989,"line_start":465,"line_end":465,"column_start":12,"column_end":27},"name":"smbus_send_byte","qualname":"<I2c>::smbus_send_byte","value":"fn (&self, value: u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `value`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `value`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117852,"byte_end":117879,"line_start":462,"line_end":462,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117884,"byte_end":117887,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Outgoing Byte → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":117892,"byte_end":117962,"line_start":464,"line_end":464,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118331,"byte_end":118346,"line_start":475,"line_end":475,"column_start":12,"column_end":27},"name":"smbus_read_byte","qualname":"<I2c>::smbus_read_byte","value":"fn (&self, command: u8) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and receives an 8-bit value.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and receives an 8-bit value.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118116,"byte_end":118174,"line_start":471,"line_end":471,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118179,"byte_end":118182,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118187,"byte_end":118261,"line_start":473,"line_end":473,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Byte → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118266,"byte_end":118319,"line_start":474,"line_end":474,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118621,"byte_end":118637,"line_start":482,"line_end":482,"column_start":12,"column_end":28},"name":"smbus_write_byte","qualname":"<I2c>::smbus_write_byte","value":"fn (&self, command: u8, value: u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and an 8-bit `value`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and an 8-bit `value`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118464,"byte_end":118514,"line_start":479,"line_end":479,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118519,"byte_end":118522,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118527,"byte_end":118609,"line_start":481,"line_end":481,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119432,"byte_end":119447,"line_start":499,"line_end":499,"column_start":12,"column_end":27},"name":"smbus_read_word","qualname":"<I2c>::smbus_read_word","value":"fn (&self, command: u8) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and receives a 16-bit value.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and receives a 16-bit value.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118787,"byte_end":118845,"line_start":488,"line_end":488,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118850,"byte_end":118853,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Based on the SMBus protocol definition, the first byte received is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118858,"byte_end":118928,"line_start":490,"line_end":490,"column_start":5,"column_end":75}},{"value":"/ stored as the low byte of the 16-bit value, and the second byte as","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":118933,"byte_end":119003,"line_start":491,"line_end":491,"column_start":5,"column_end":75}},{"value":"/ the high byte. Some devices may require you to swap these bytes. In those","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119008,"byte_end":119085,"line_start":492,"line_end":492,"column_start":5,"column_end":82}},{"value":"/ cases you can use the convenience method [`smbus_read_word_swapped`] instead.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119090,"byte_end":119171,"line_start":493,"line_end":493,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119176,"byte_end":119179,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119184,"byte_end":119258,"line_start":495,"line_end":495,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Byte Low → Incoming Byte High → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119263,"byte_end":119343,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119348,"byte_end":119351,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`smbus_read_word_swapped`]: #method.smbus_read_word_swapped","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119356,"byte_end":119420,"line_start":498,"line_end":498,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120151,"byte_end":120174,"line_start":513,"line_end":513,"column_start":12,"column_end":35},"name":"smbus_read_word_swapped","qualname":"<I2c>::smbus_read_word_swapped","value":"fn (&self, command: u8) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and receives a 16-bit `value` in a non-standard swapped byte order.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and receives a 16-bit `value` in a non-standard swapped byte order.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119566,"byte_end":119663,"line_start":503,"line_end":503,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119668,"byte_end":119671,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ `smbus_read_word_swapped` is a convenience method that works similarly to [`smbus_read_word`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119676,"byte_end":119774,"line_start":505,"line_end":505,"column_start":5,"column_end":103}},{"value":"/ but reverses the byte order of the incoming 16-bit value. The high byte is received first,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119779,"byte_end":119873,"line_start":506,"line_end":506,"column_start":5,"column_end":99}},{"value":"/ and the low byte second.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119878,"byte_end":119906,"line_start":507,"line_end":507,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119911,"byte_end":119914,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119919,"byte_end":119993,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Byte High → Incoming Byte Low → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":119998,"byte_end":120078,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120083,"byte_end":120086,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`smbus_read_word`]: #method.smbus_read_word","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120091,"byte_end":120139,"line_start":512,"line_end":512,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120939,"byte_end":120955,"line_start":529,"line_end":529,"column_start":12,"column_end":28},"name":"smbus_write_word","qualname":"<I2c>::smbus_write_word","value":"fn (&self, command: u8, value: u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120363,"byte_end":120413,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120418,"byte_end":120421,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Based on the SMBus protocol definition, the first byte sent is the low byte","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120426,"byte_end":120505,"line_start":521,"line_end":521,"column_start":5,"column_end":84}},{"value":"/ of the 16-bit value, and the second byte is the high byte. Some devices may","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120510,"byte_end":120589,"line_start":522,"line_end":522,"column_start":5,"column_end":84}},{"value":"/ require you to swap these bytes. In those cases you can use the convenience method","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120594,"byte_end":120680,"line_start":523,"line_end":523,"column_start":5,"column_end":91}},{"value":"/ [`smbus_write_word_swapped`] instead.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120685,"byte_end":120726,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120731,"byte_end":120734,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte Low → Outgoing Byte High → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120739,"byte_end":120848,"line_start":526,"line_end":526,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120853,"byte_end":120856,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ [`smbus_write_word_swapped`]: #method.smbus_write_word_swapped","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":120861,"byte_end":120927,"line_start":528,"line_end":528,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121623,"byte_end":121647,"line_start":543,"line_end":543,"column_start":12,"column_end":36},"name":"smbus_write_word_swapped","qualname":"<I2c>::smbus_write_word_swapped","value":"fn (&self, command: u8, value: u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value` in a non-standard swapped byte order.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value` in a non-standard swapped byte order.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121106,"byte_end":121193,"line_start":535,"line_end":535,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121198,"byte_end":121201,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ `smbus_write_word_swapped` is a convenience method that works similarly to [`smbus_write_word`], but reverses the byte","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121206,"byte_end":121328,"line_start":537,"line_end":537,"column_start":5,"column_end":127}},{"value":"/ order of the outgoing 16-bit value. The high byte is sent first, and the low byte second.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121333,"byte_end":121426,"line_start":538,"line_end":538,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121431,"byte_end":121434,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte High → Outgoing Byte Low → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121439,"byte_end":121548,"line_start":540,"line_end":540,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121553,"byte_end":121556,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ [`smbus_write_word`]: #method.smbus_write_word","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121561,"byte_end":121611,"line_start":542,"line_end":542,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122674,"byte_end":122692,"line_start":565,"line_end":565,"column_start":12,"column_end":30},"name":"smbus_process_call","qualname":"<I2c>::smbus_process_call","value":"fn (&self, command: u8, value: u16) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121887,"byte_end":121983,"line_start":553,"line_end":553,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121988,"byte_end":121991,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ Based on the SMBus protocol definition, for both the outgoing and incoming 16-bit value,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":121996,"byte_end":122088,"line_start":555,"line_end":555,"column_start":5,"column_end":97}},{"value":"/ the first byte transferred is the low byte of the 16-bit value, and the second byte is the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122093,"byte_end":122187,"line_start":556,"line_end":556,"column_start":5,"column_end":99}},{"value":"/ high byte. Some devices may require you to swap these bytes. In those cases you can use the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122192,"byte_end":122287,"line_start":557,"line_end":557,"column_start":5,"column_end":100}},{"value":"/ convenience method [`smbus_process_call_swapped`] instead.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122292,"byte_end":122354,"line_start":558,"line_end":558,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122359,"byte_end":122362,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte Low →","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122367,"byte_end":122448,"line_start":560,"line_end":560,"column_start":5,"column_end":78}},{"value":"/ Outgoing Byte High → Repeated START → Address + Read Bit → Incoming Byte Low →","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122453,"byte_end":122543,"line_start":561,"line_end":561,"column_start":5,"column_end":87}},{"value":"/ Incoming Byte High → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122548,"byte_end":122579,"line_start":562,"line_end":562,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122584,"byte_end":122587,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ [`smbus_process_call_swapped`]: #method.smbus_process_call_swapped","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122592,"byte_end":122662,"line_start":564,"line_end":564,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123583,"byte_end":123609,"line_start":585,"line_end":585,"column_start":12,"column_end":38},"name":"smbus_process_call_swapped","qualname":"<I2c>::smbus_process_call_swapped","value":"fn (&self, command: u8, value: u16) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response, in\n a non-standard byte order.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response, in","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122880,"byte_end":122979,"line_start":573,"line_end":573,"column_start":5,"column_end":104}},{"value":"/ a non-standard byte order.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":122984,"byte_end":123014,"line_start":574,"line_end":574,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123019,"byte_end":123022,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ `smbus_process_call_swapped` is a convenience method that works similarly to [`smbus_process_call`],","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123027,"byte_end":123131,"line_start":576,"line_end":576,"column_start":5,"column_end":109}},{"value":"/ but reverses the byte order of the outgoing and incoming 16-bit value. The high byte is transferred","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123136,"byte_end":123239,"line_start":577,"line_end":577,"column_start":5,"column_end":108}},{"value":"/ first, and the low byte second.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123244,"byte_end":123279,"line_start":578,"line_end":578,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123284,"byte_end":123287,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte High →","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123292,"byte_end":123374,"line_start":580,"line_end":580,"column_start":5,"column_end":79}},{"value":"/ Outgoing Byte Low → Repeated START → Address + Read Bit → Incoming Byte High →","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123379,"byte_end":123469,"line_start":581,"line_end":581,"column_start":5,"column_end":87}},{"value":"/ Incoming Byte Low → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123474,"byte_end":123504,"line_start":582,"line_end":582,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123509,"byte_end":123512,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`smbus_process_call`]: #method.smbus_process_call","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123517,"byte_end":123571,"line_start":584,"line_end":584,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125019,"byte_end":125035,"line_start":616,"line_end":616,"column_start":12,"column_end":28},"name":"smbus_block_read","qualname":"<I2c>::smbus_block_read","value":"fn (&self, command: u8, buffer: &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and then receives an 8-bit byte count along with a\n multi-byte `buffer`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and then receives an 8-bit byte count along with a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":123918,"byte_end":123998,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ multi-byte `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124003,"byte_end":124027,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124032,"byte_end":124035,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ `smbus_block_read` currently isn't supported on the Raspberry Pi, and returns","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124040,"byte_end":124121,"line_start":598,"line_end":598,"column_start":5,"column_end":86}},{"value":"/ `Err(`[`Error::FeatureNotSupported`]`)` unless underlying driver support is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124126,"byte_end":124205,"line_start":599,"line_end":599,"column_start":5,"column_end":84}},{"value":"/ detected. You might be able to emulate the `smbus_block_read` functionality","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124210,"byte_end":124289,"line_start":600,"line_end":600,"column_start":5,"column_end":84}},{"value":"/ with [`write_read`], [`block_read`] or [`read`] provided the length of the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124294,"byte_end":124372,"line_start":601,"line_end":601,"column_start":5,"column_end":83}},{"value":"/ expected incoming data is known beforehand, or the slave device allows the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124377,"byte_end":124455,"line_start":602,"line_end":602,"column_start":5,"column_end":83}},{"value":"/ master to read more data than it needs to send.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124460,"byte_end":124511,"line_start":603,"line_end":603,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124516,"byte_end":124519,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ `smbus_block_read` can read a maximum of 32 bytes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124524,"byte_end":124578,"line_start":605,"line_end":605,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124583,"byte_end":124586,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START →","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124591,"byte_end":124669,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ Address + Read Bit → Incoming Byte Count → Incoming Bytes → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124674,"byte_end":124748,"line_start":608,"line_end":608,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124753,"byte_end":124756,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124761,"byte_end":124798,"line_start":610,"line_end":610,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124803,"byte_end":124806,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ [`Error::FeatureNotSupported`]: enum.Error.html#variant.FeatureNotSupported","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124811,"byte_end":124890,"line_start":612,"line_end":612,"column_start":5,"column_end":84}},{"value":"/ [`write_read`]: #method.write_read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124895,"byte_end":124933,"line_start":613,"line_end":613,"column_start":5,"column_end":43}},{"value":"/ [`block_read`]: #method.block_read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124938,"byte_end":124976,"line_start":614,"line_end":614,"column_start":5,"column_end":43}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":124981,"byte_end":125007,"line_start":615,"line_end":615,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125704,"byte_end":125721,"line_start":635,"line_end":635,"column_start":12,"column_end":29},"name":"smbus_block_write","qualname":"<I2c>::smbus_block_write","value":"fn (&self, command: u8, buffer: &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and an 8-bit byte count along with a multi-byte `buffer`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and an 8-bit byte count along with a multi-byte `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125347,"byte_end":125433,"line_start":628,"line_end":628,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125438,"byte_end":125441,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ `smbus_block_write` can write a maximum of 32 bytes. Any additional data contained","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125446,"byte_end":125532,"line_start":630,"line_end":630,"column_start":5,"column_end":91}},{"value":"/ in `buffer` is ignored.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125537,"byte_end":125564,"line_start":631,"line_end":631,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125569,"byte_end":125572,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte Count","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125577,"byte_end":125656,"line_start":633,"line_end":633,"column_start":5,"column_end":78}},{"value":"/ → Outgoing Bytes → STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125661,"byte_end":125692,"line_start":634,"line_end":634,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126277,"byte_end":126290,"line_start":649,"line_end":649,"column_start":12,"column_end":25},"name":"set_smbus_pec","qualname":"<I2c>::set_smbus_pec","value":"fn (&self, pec: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables SMBus Packet Error Checking.","sig":null,"attributes":[{"value":"/ Enables or disables SMBus Packet Error Checking.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125877,"byte_end":125929,"line_start":641,"line_end":641,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125934,"byte_end":125937,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Packet Error Checking inserts a CRC-8 Packet Error Code (PEC) byte before each STOP","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":125942,"byte_end":126029,"line_start":643,"line_end":643,"column_start":5,"column_end":92}},{"value":"/ condition for all SMBus protocols, except Quick Command and Host Notify.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126034,"byte_end":126110,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126115,"byte_end":126118,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The PEC is calculated on all message bytes except the START, STOP, ACK and NACK bits.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126123,"byte_end":126212,"line_start":646,"line_end":646,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126217,"byte_end":126220,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ By default, `pec` is set to `false`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126225,"byte_end":126265,"line_start":648,"line_end":648,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":686},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm","qualname":"::pwm","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":702},{"krate":0,"index":1695},{"krate":0,"index":1699},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":1701},{"krate":0,"index":1717},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1710},{"krate":0,"index":1708},{"krate":0,"index":745},{"krate":0,"index":1719},{"krate":0,"index":1733},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1726},{"krate":0,"index":1724},{"krate":0,"index":747},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":749},{"krate":0,"index":768}],"decl_id":null,"docs":" Interface for the PWM peripheral.","sig":null,"attributes":[{"value":"! Interface for the PWM peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147488,"byte_end":147525,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147526,"byte_end":147529,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! RPPAL controls the Raspberry Pi's PWM peripheral through the `pwm` sysfs","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147530,"byte_end":147606,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! interface.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147607,"byte_end":147621,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147622,"byte_end":147625,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! ## PWM channels","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147626,"byte_end":147645,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147646,"byte_end":147649,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! The BCM283x SoC supports two hardware PWM channels. By default, both channels","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147650,"byte_end":147731,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"! are disabled. To enable only PWM0 on its default pin (BCM GPIO 18, physical pin 12),","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147732,"byte_end":147820,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"! add `dtoverlay=pwm` to `/boot/config.txt`. If you need both PWM channels, replace","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147821,"byte_end":147906,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"! `pwm` with `pwm-2chan`, which enables PWM0 on BCM GPIO 18 (physical pin 12), and PWM1","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147907,"byte_end":147996,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"! on BCM GPIO 19 (physical pin 35). More details on enabling and configuring PWM on","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":147997,"byte_end":148082,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"! other GPIO pins than the default ones can be found in `/boot/overlays/README`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148083,"byte_end":148165,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148166,"byte_end":148169,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! The Raspberry Pi's analog audio output uses both PWM channels. Playing audio and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148170,"byte_end":148254,"line_start":35,"line_end":35,"column_start":1,"column_end":85}},{"value":"! simultaneously accessing a PWM channel may cause issues.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148255,"byte_end":148315,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148316,"byte_end":148319,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Some of the GPIO pins capable of supporting hardware PWM can also be configured for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148320,"byte_end":148407,"line_start":38,"line_end":38,"column_start":1,"column_end":88}},{"value":"! use with other peripherals. Be careful not to enable two peripherals on the same pin","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148408,"byte_end":148496,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"! at the same time.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148497,"byte_end":148518,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148519,"byte_end":148522,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ## Using PWM without superuser privileges (`sudo`)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148523,"byte_end":148577,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148578,"byte_end":148581,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! As of kernel version 4.14.34, released on April 16 2018, it's possible to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148582,"byte_end":148659,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"! configure your Raspberry Pi to allow non-root access to PWM. 4.14.34 includes","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148660,"byte_end":148741,"line_start":45,"line_end":45,"column_start":1,"column_end":82}},{"value":"! a [patch] that allows `udev` to change file permissions when a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148742,"byte_end":148808,"line_start":46,"line_end":46,"column_start":1,"column_end":67}},{"value":"! PWM channel is exported. This will let any user that's a member of the `gpio`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148809,"byte_end":148890,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"! group configure PWM without having to use `sudo`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148891,"byte_end":148944,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148945,"byte_end":148948,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! The `udev` rules needed to make this work haven't been patched in yet as of","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":148949,"byte_end":149028,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"! June 2018, but you can easily add them yourself. Make sure you're running","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149029,"byte_end":149106,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"! 4.14.34 or later, and append the following snippet to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149107,"byte_end":149164,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"! `/etc/udev/rules.d/99-com.rules`. Reboot the Raspberry Pi afterwards.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149165,"byte_end":149238,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149239,"byte_end":149242,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149243,"byte_end":149254,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"! SUBSYSTEM==\"pwm*\", PROGRAM=\"/bin/sh -c '\\","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149255,"byte_end":149300,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"!     chown -R root:gpio /sys/class/pwm && chmod -R 770 /sys/class/pwm;\\","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149301,"byte_end":149375,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"!     chown -R root:gpio /sys/devices/platform/soc/*.pwm/pwm/pwmchip* &&\\","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149376,"byte_end":149451,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"!     chmod -R 770 /sys/devices/platform/soc/*.pwm/pwm/pwmchip*\\","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149452,"byte_end":149518,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"! '\"","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149519,"byte_end":149525,"line_start":60,"line_end":60,"column_start":1,"column_end":7}},{"value":"! ```","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149526,"byte_end":149533,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149534,"byte_end":149537,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ## Troubleshooting","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149538,"byte_end":149560,"line_start":63,"line_end":63,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149561,"byte_end":149564,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ### Permission denied","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149565,"byte_end":149590,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149591,"byte_end":149594,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! If [`new`] returns an `io::ErrorKind::PermissionDenied`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149595,"byte_end":149654,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"! error, make sure `/sys/class/pwm` and all of its subdirectories","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149655,"byte_end":149722,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"! are owned by `root:gpio`, the current user is a member of the `gpio` group","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149723,"byte_end":149801,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"! and `udev` is properly configured as mentioned above. Alternatively, you can","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149802,"byte_end":149882,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"! launch your application using `sudo`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149883,"byte_end":149924,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149925,"byte_end":149928,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ### Not found","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149929,"byte_end":149946,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149947,"byte_end":149950,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! If [`new`] returns an `io::ErrorKind::NotFound` error, you may have","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":149951,"byte_end":150022,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"! forgotten to enable the selected PWM channel. The configuration options","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150023,"byte_end":150098,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"! to enable either of the two PWM channels are listed above.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150099,"byte_end":150161,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150162,"byte_end":150165,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! [patch]: https://github.com/raspberrypi/linux/issues/1983","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150166,"byte_end":150227,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"! [`new`]: struct.Pwm.html#method.new","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150228,"byte_end":150267,"line_start":80,"line_end":80,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1696},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150569,"byte_end":150571,"line_start":98,"line_end":98,"column_start":5,"column_end":7},"name":"Io","qualname":"::pwm::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1695},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150550,"byte_end":150564,"line_start":97,"line_end":97,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":1695},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150538,"byte_end":150543,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"name":"Error","qualname":"::pwm::Error","value":"Error::{Io}","parent":null,"children":[{"krate":0,"index":1696}],"decl_id":null,"docs":" Errors that can occur when accessing the PWM peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the PWM peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150451,"byte_end":150511,"line_start":94,"line_end":94,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":743},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151000,"byte_end":151006,"line_start":118,"line_end":118,"column_start":10,"column_end":16},"name":"Result","qualname":"::pwm::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `pwm::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `pwm::Error`s.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150924,"byte_end":150990,"line_start":117,"line_end":117,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1702},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151247,"byte_end":151251,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"Pwm0","qualname":"::pwm::Channel::Pwm0","value":"Channel::Pwm0","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1705},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151261,"byte_end":151265,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"Pwm1","qualname":"::pwm::Channel::Pwm1","value":"Channel::Pwm1","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1701},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151233,"byte_end":151240,"line_start":127,"line_end":127,"column_start":10,"column_end":17},"name":"Channel","qualname":"::pwm::Channel","value":"Channel::{Pwm0, Pwm1}","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1705}],"decl_id":null,"docs":" PWM channels.","sig":null,"attributes":[{"value":"/ PWM channels.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151039,"byte_end":151056,"line_start":120,"line_end":120,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151057,"byte_end":151060,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ More information on enabling and configuring the PWM channels can be","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151061,"byte_end":151133,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/ found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151134,"byte_end":151151,"line_start":123,"line_end":123,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151152,"byte_end":151155,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151156,"byte_end":151178,"line_start":125,"line_end":125,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1720},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151598,"byte_end":151604,"line_start":144,"line_end":144,"column_start":5,"column_end":11},"name":"Normal","qualname":"::pwm::Polarity::Normal","value":"Polarity::Normal","parent":{"krate":0,"index":1719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1722},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151610,"byte_end":151617,"line_start":145,"line_end":145,"column_start":5,"column_end":12},"name":"Inverse","qualname":"::pwm::Polarity::Inverse","value":"Polarity::Inverse","parent":{"krate":0,"index":1719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1719},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151583,"byte_end":151591,"line_start":143,"line_end":143,"column_start":10,"column_end":18},"name":"Polarity","qualname":"::pwm::Polarity","value":"Polarity::{Normal, Inverse}","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1722}],"decl_id":null,"docs":" Output polarities.\n","sig":null,"attributes":[{"value":"/ Output polarities.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151506,"byte_end":151528,"line_start":141,"line_end":141,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1735},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152609,"byte_end":152612,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"Pwm","qualname":"::pwm::Pwm","value":"Pwm {  }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's PWM peripheral.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's PWM peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151867,"byte_end":151924,"line_start":157,"line_end":157,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151925,"byte_end":151928,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Before using `Pwm`, make sure the selected PWM channel has been configured","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151929,"byte_end":152007,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ and activated. More information can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152008,"byte_end":152064,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152065,"byte_end":152068,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`PwmPin`] trait implementation for `Pwm` can be enabled","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152069,"byte_end":152148,"line_start":162,"line_end":162,"column_start":1,"column_end":80}},{"value":"/ by specifying the optional `hal` feature in the dependency declaration for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152149,"byte_end":152227,"line_start":163,"line_end":163,"column_start":1,"column_end":79}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152228,"byte_end":152250,"line_start":164,"line_end":164,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152251,"byte_end":152254,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`Pwm`] trait implementation for `Pwm` can be enabled","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152255,"byte_end":152342,"line_start":166,"line_end":166,"column_start":1,"column_end":88}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152343,"byte_end":152430,"line_start":167,"line_end":167,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152431,"byte_end":152453,"line_start":168,"line_end":168,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152454,"byte_end":152457,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152458,"byte_end":152480,"line_start":170,"line_end":170,"column_start":1,"column_end":23}},{"value":"/ [`PwmPin`]: ../../embedded_hal/trait.PwmPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152481,"byte_end":152533,"line_start":171,"line_end":171,"column_start":1,"column_end":53}},{"value":"/ [`Pwm`]: ../../embedded_hal/trait.Pwm.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152534,"byte_end":152580,"line_start":172,"line_end":172,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152915,"byte_end":152918,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"new","qualname":"<Pwm>::new","value":"fn (channel: Channel) -> Result<Pwm>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Pwm`.","sig":null,"attributes":[{"value":"/ Constructs a new `Pwm`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152680,"byte_end":152707,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152712,"byte_end":152715,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ `new` doesn't change the channel's period, pulse width or polarity. The channel","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152720,"byte_end":152803,"line_start":182,"line_end":182,"column_start":5,"column_end":88}},{"value":"/ will remain disabled until [`enable`] is called.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152808,"byte_end":152860,"line_start":183,"line_end":183,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152865,"byte_end":152868,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`enable`]: #method.enable","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152873,"byte_end":152903,"line_start":185,"line_end":185,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":154190,"byte_end":154201,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"with_period","qualname":"<Pwm>::with_period","value":"fn (channel: Channel, period: Duration, pulse_width: Duration, polarity: Polarity, enabled: bool) -> Result<Pwm>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Pwm` using the specified settings.","sig":null,"attributes":[{"value":"/ Constructs a new `Pwm` using the specified settings.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153392,"byte_end":153448,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153453,"byte_end":153456,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ `period` indicates the time it takes for the PWM channel to complete one cycle.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153461,"byte_end":153544,"line_start":204,"line_end":204,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153549,"byte_end":153552,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ `pulse_width` indicates the amount of time the PWM channel is active during a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153557,"byte_end":153638,"line_start":206,"line_end":206,"column_start":5,"column_end":86}},{"value":"/ single period.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153643,"byte_end":153661,"line_start":207,"line_end":207,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153666,"byte_end":153669,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ `polarity` configures the active logic level as either high ([`Normal`])","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153674,"byte_end":153750,"line_start":209,"line_end":209,"column_start":5,"column_end":81}},{"value":"/ or low ([`Inverse`]).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153755,"byte_end":153780,"line_start":210,"line_end":210,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153785,"byte_end":153788,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ `enabled` enables PWM on the selected channel. If `enabled` is set to `false`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153793,"byte_end":153875,"line_start":212,"line_end":212,"column_start":5,"column_end":87}},{"value":"/ the channel will remain disabled until [`enable`] is called.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153880,"byte_end":153944,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153949,"byte_end":153952,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This method will fail if `period` is shorter than `pulse_width`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":153957,"byte_end":154025,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":154030,"byte_end":154033,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`Normal`]: enum.Polarity.html#variant.Normal","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":154038,"byte_end":154087,"line_start":217,"line_end":217,"column_start":5,"column_end":54}},{"value":"/ [`Inverse`]: enum.Polarity.html#variant.Inverse","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":154092,"byte_end":154143,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"/ [`enable`]: #method.enable","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":154148,"byte_end":154178,"line_start":219,"line_end":219,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155967,"byte_end":155981,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"with_frequency","qualname":"<Pwm>::with_frequency","value":"fn (channel: Channel, frequency: f64, duty_cycle: f64, polarity: Polarity, enabled: bool) -> Result<Pwm>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Pwm` using the specified settings.","sig":null,"attributes":[{"value":"/ Constructs a new `Pwm` using the specified settings.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155134,"byte_end":155190,"line_start":252,"line_end":252,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155195,"byte_end":155198,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ `with_frequency` is a convenience method that converts `frequency` to a period,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155203,"byte_end":155286,"line_start":254,"line_end":254,"column_start":5,"column_end":88}},{"value":"/ and calculates the duty cycle as a percentage of the frequency.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155291,"byte_end":155358,"line_start":255,"line_end":255,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155363,"byte_end":155366,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ `frequency` is specified in hertz (Hz).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155371,"byte_end":155414,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155419,"byte_end":155422,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is specified as a floating point value between `0.0` (0%) and `1.0` (100%).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155427,"byte_end":155519,"line_start":259,"line_end":259,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155524,"byte_end":155527,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ `polarity` configures the active logic level as either high ([`Normal`])","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155532,"byte_end":155608,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ or low ([`Inverse`]).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155613,"byte_end":155638,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155643,"byte_end":155646,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ `enabled` enables PWM on the selected channel. If `enabled` is set to `false`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155651,"byte_end":155733,"line_start":264,"line_end":264,"column_start":5,"column_end":87}},{"value":"/ the channel will remain disabled until [`enable`] is called.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155738,"byte_end":155802,"line_start":265,"line_end":265,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155807,"byte_end":155810,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`Normal`]: enum.Polarity.html#variant.Normal","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155815,"byte_end":155864,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/ [`Inverse`]: enum.Polarity.html#variant.Inverse","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155869,"byte_end":155920,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/ [`enable`]: #method.enable","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":155925,"byte_end":155955,"line_start":269,"line_end":269,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157226,"byte_end":157232,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"period","qualname":"<Pwm>::period","value":"fn (&self) -> Result<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the period.\n","sig":null,"attributes":[{"value":"/ Returns the period.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157191,"byte_end":157214,"line_start":310,"line_end":310,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157561,"byte_end":157571,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"set_period","qualname":"<Pwm>::set_period","value":"fn (&self, period: Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the period.","sig":null,"attributes":[{"value":"/ Sets the period.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157342,"byte_end":157362,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157367,"byte_end":157370,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ `period` indicates the time it takes for the PWM channel to complete one cycle.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157375,"byte_end":157458,"line_start":317,"line_end":317,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157463,"byte_end":157466,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method will fail if `period` is shorter than the current pulse width.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157471,"byte_end":157549,"line_start":319,"line_end":319,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157877,"byte_end":157888,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"pulse_width","qualname":"<Pwm>::pulse_width","value":"fn (&self) -> Result<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the pulse width.\n","sig":null,"attributes":[{"value":"/ Returns the pulse width.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":157837,"byte_end":157865,"line_start":330,"line_end":330,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158270,"byte_end":158285,"line_start":343,"line_end":343,"column_start":12,"column_end":27},"name":"set_pulse_width","qualname":"<Pwm>::set_pulse_width","value":"fn (&self, pulse_width: Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the pulse width.","sig":null,"attributes":[{"value":"/ Sets the pulse width.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158026,"byte_end":158051,"line_start":337,"line_end":337,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158056,"byte_end":158059,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ `pulse_width` indicates the amount of time the PWM channel is active during a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158064,"byte_end":158145,"line_start":339,"line_end":339,"column_start":5,"column_end":86}},{"value":"/ single period.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158150,"byte_end":158168,"line_start":340,"line_end":340,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158173,"byte_end":158176,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This method will fail if `pulse_width` is longer than the current period.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158181,"byte_end":158258,"line_start":342,"line_end":342,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158745,"byte_end":158754,"line_start":357,"line_end":357,"column_start":12,"column_end":21},"name":"frequency","qualname":"<Pwm>::frequency","value":"fn (&self) -> Result<f64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency.","sig":null,"attributes":[{"value":"/ Returns the frequency.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158571,"byte_end":158597,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158602,"byte_end":158605,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ `frequency` is a convenience method that calculates the frequency in hertz (Hz)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158610,"byte_end":158693,"line_start":355,"line_end":355,"column_start":5,"column_end":88}},{"value":"/ based on the configured period.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158698,"byte_end":158733,"line_start":356,"line_end":356,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159352,"byte_end":159365,"line_start":375,"line_end":375,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Pwm>::set_frequency","value":"fn (&self, frequency: f64, duty_cycle: f64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the frequency and duty cycle.","sig":null,"attributes":[{"value":"/ Sets the frequency and duty cycle.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":158974,"byte_end":159012,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159017,"byte_end":159020,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `set_frequency` is a convenience method that converts `frequency` to a period,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159025,"byte_end":159107,"line_start":369,"line_end":369,"column_start":5,"column_end":87}},{"value":"/ and calculates the duty cycle as a percentage of the frequency.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159112,"byte_end":159179,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159184,"byte_end":159187,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ `frequency` is specified in hertz (Hz).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159192,"byte_end":159235,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159240,"byte_end":159243,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is specified as a floating point value between `0.0` (0%) and `1.0` (100%).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159248,"byte_end":159340,"line_start":374,"line_end":374,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160232,"byte_end":160242,"line_start":398,"line_end":398,"column_start":12,"column_end":22},"name":"duty_cycle","qualname":"<Pwm>::duty_cycle","value":"fn (&self) -> Result<f64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the duty cycle.","sig":null,"attributes":[{"value":"/ Returns the duty cycle.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":159983,"byte_end":160010,"line_start":393,"line_end":393,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160015,"byte_end":160018,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is a convenience method that calculates the duty cycle as a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160023,"byte_end":160099,"line_start":395,"line_end":395,"column_start":5,"column_end":81}},{"value":"/ floating point value between `0.0` (0%) and `1.0` (100%) based on the configured","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160104,"byte_end":160188,"line_start":396,"line_end":396,"column_start":5,"column_end":89}},{"value":"/ period and pulse width.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160193,"byte_end":160220,"line_start":397,"line_end":397,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160826,"byte_end":160840,"line_start":415,"line_end":415,"column_start":12,"column_end":26},"name":"set_duty_cycle","qualname":"<Pwm>::set_duty_cycle","value":"fn (&self, duty_cycle: f64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the duty cycle.","sig":null,"attributes":[{"value":"/ Sets the duty cycle.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160544,"byte_end":160568,"line_start":409,"line_end":409,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160573,"byte_end":160576,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `set_duty_cycle` is a convenience method that converts `duty_cycle` to a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160581,"byte_end":160657,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ pulse width based on the configured period.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160662,"byte_end":160709,"line_start":412,"line_end":412,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160714,"byte_end":160717,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is specified as a floating point value between `0.0` (0%) and `1.0` (100%).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":160722,"byte_end":160814,"line_start":414,"line_end":414,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161148,"byte_end":161156,"line_start":425,"line_end":425,"column_start":12,"column_end":20},"name":"polarity","qualname":"<Pwm>::polarity","value":"fn (&self) -> Result<Polarity>","parent":null,"children":[],"decl_id":null,"docs":" Returns the polarity.\n","sig":null,"attributes":[{"value":"/ Returns the polarity.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161111,"byte_end":161136,"line_start":424,"line_end":424,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161517,"byte_end":161529,"line_start":436,"line_end":436,"column_start":12,"column_end":24},"name":"set_polarity","qualname":"<Pwm>::set_polarity","value":"fn (&self, polarity: Polarity) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the polarity.","sig":null,"attributes":[{"value":"/ Sets the polarity.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161246,"byte_end":161268,"line_start":429,"line_end":429,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161273,"byte_end":161276,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ `polarity` configures the active logic level as either high","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161281,"byte_end":161344,"line_start":431,"line_end":431,"column_start":5,"column_end":68}},{"value":"/ ([`Normal`]) or low ([`Inverse`]).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161349,"byte_end":161387,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161392,"byte_end":161395,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`Normal`]: enum.Polarity.html#variant.Normal","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161400,"byte_end":161449,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/ [`Inverse`]: enum.Polarity.html#variant.Inverse","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161454,"byte_end":161505,"line_start":435,"line_end":435,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161721,"byte_end":161731,"line_start":443,"line_end":443,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<Pwm>::is_enabled","value":"fn (&self) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the PWM channel is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the PWM channel is enabled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161660,"byte_end":161709,"line_start":442,"line_end":442,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161856,"byte_end":161862,"line_start":448,"line_end":448,"column_start":12,"column_end":18},"name":"enable","qualname":"<Pwm>::enable","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables the PWM channel.\n","sig":null,"attributes":[{"value":"/ Enables the PWM channel.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161816,"byte_end":161844,"line_start":447,"line_end":447,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162009,"byte_end":162016,"line_start":455,"line_end":455,"column_start":12,"column_end":19},"name":"disable","qualname":"<Pwm>::disable","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Disables the PWM channel.\n","sig":null,"attributes":[{"value":"/ Disables the PWM channel.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":161968,"byte_end":161997,"line_start":454,"line_end":454,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162176,"byte_end":162189,"line_start":462,"line_end":462,"column_start":12,"column_end":25},"name":"reset_on_drop","qualname":"<Pwm>::reset_on_drop","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of `reset_on_drop`.\n","sig":null,"attributes":[{"value":"/ Returns the value of `reset_on_drop`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162123,"byte_end":162164,"line_start":461,"line_end":461,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162746,"byte_end":162763,"line_start":476,"line_end":476,"column_start":12,"column_end":29},"name":"set_reset_on_drop","qualname":"<Pwm>::set_reset_on_drop","value":"fn (&mut self, reset_on_drop: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" When enabled, disables the PWM channel when the `Pwm` instance\n goes out of scope. By default, this is set to `true`.","sig":null,"attributes":[{"value":"/ When enabled, disables the PWM channel when the `Pwm` instance","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162245,"byte_end":162311,"line_start":466,"line_end":466,"column_start":5,"column_end":71}},{"value":"/ goes out of scope. By default, this is set to `true`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162316,"byte_end":162373,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162378,"byte_end":162381,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162386,"byte_end":162397,"line_start":469,"line_end":469,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162402,"byte_end":162405,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Drop methods aren't called when a process is abnormally terminated, for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162410,"byte_end":162485,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ instance when a user presses <kbd>Ctrl</kbd> + <kbd>C</kbd>, and the `SIGINT` signal","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162490,"byte_end":162578,"line_start":472,"line_end":472,"column_start":5,"column_end":93}},{"value":"/ isn't caught. You can catch those using crates such as [`simple_signal`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162583,"byte_end":162660,"line_start":473,"line_end":473,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162665,"byte_end":162668,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ [`simple_signal`]: https://crates.io/crates/simple-signal","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162673,"byte_end":162734,"line_start":475,"line_end":475,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":770},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":805},{"krate":0,"index":875},{"krate":0,"index":899},{"krate":0,"index":1777},{"krate":0,"index":1796},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":1798},{"krate":0,"index":1817},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1810},{"krate":0,"index":1808},{"krate":0,"index":910},{"krate":0,"index":1819},{"krate":0,"index":1838},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1831},{"krate":0,"index":1829},{"krate":0,"index":912},{"krate":0,"index":1840},{"krate":0,"index":1856},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1849},{"krate":0,"index":1847},{"krate":0,"index":914},{"krate":0,"index":1858},{"krate":0,"index":1880},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1873},{"krate":0,"index":1871},{"krate":0,"index":916},{"krate":0,"index":1882},{"krate":0,"index":1898},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1891},{"krate":0,"index":1889},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":924},{"krate":0,"index":940},{"krate":0,"index":941}],"decl_id":null,"docs":" Interface for the main and auxiliary SPI peripherals.","sig":null,"attributes":[{"value":"! Interface for the main and auxiliary SPI peripherals.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":173806,"byte_end":173863,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":173864,"byte_end":173867,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! RPPAL provides access to the available SPI buses by using the `spidev` device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":173868,"byte_end":173949,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"! interface through `/dev/spidevB.S`, where B points to an SPI bus (0, 1, 2), and S to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":173950,"byte_end":174038,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"! a Slave Select pin (0, 1, 2). Which of these buses and pins is available depends on","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174039,"byte_end":174126,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"! your Raspberry Pi model and configuration, as explained below.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174127,"byte_end":174193,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174194,"byte_end":174197,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ## SPI buses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174198,"byte_end":174214,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174215,"byte_end":174218,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! The Raspberry Pi's GPIO header exposes several SPI buses. SPI0 is available","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174219,"byte_end":174298,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"! on all Raspberry Pi models. SPI1 is available on models with a 40-pin","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174299,"byte_end":174372,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"! header. SPI2 is only available on the Compute and Compute 3.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174373,"byte_end":174437,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174438,"byte_end":174441,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! SPI0 is disabled by default. You can enable it by running","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174442,"byte_end":174503,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"! `sudo raspi-config`, or by manually adding `dtparam=spi=on` to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174504,"byte_end":174570,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"! `/boot/config.txt`. The associated pins are listed below.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174571,"byte_end":174632,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174633,"byte_end":174636,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! * MISO: BCM GPIO 9 (physical pin 21)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174637,"byte_end":174677,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! * MOSI: BCM GPIO 10 (physical pin 19)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174678,"byte_end":174719,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"! * SCLK: BCM GPIO 11 (physical pin 23)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174720,"byte_end":174761,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"! * SS: [`Ss0`] BCM GPIO 8 (physical pin 24), [`Ss1`] BCM GPIO 7 (physical pin 26)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174762,"byte_end":174846,"line_start":41,"line_end":41,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174847,"byte_end":174850,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! SPI1 is an auxiliary peripheral that's referred to as mini SPI. According","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174851,"byte_end":174928,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"! to the BCM2835 documentation, using higher clock speeds on SPI1 requires","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":174929,"byte_end":175005,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"! additional CPU time compared to SPI0, caused by smaller FIFOs and no DMA","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175006,"byte_end":175082,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"! support. It doesn't support [`Mode1`] or [`Mode3`]. SPI1 can be enabled by","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175083,"byte_end":175161,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"! adding `dtoverlay=spi1-3cs` to `/boot/config.txt`. Replace `3cs` with","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175162,"byte_end":175235,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"! either `2cs` or `1cs` if you only require 2 or 1 Slave Select pins.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175236,"byte_end":175307,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"! The associated pins are listed below.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175308,"byte_end":175349,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175350,"byte_end":175353,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! * MISO: BCM GPIO 19 (physical pin 35)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175354,"byte_end":175395,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"! * MOSI: BCM GPIO 20 (physical pin 38)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175396,"byte_end":175437,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"! * SCLK: BCM GPIO 21 (physical pin 40)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175438,"byte_end":175479,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"! * SS: [`Ss0`] BCM GPIO 18 (physical pin 12), [`Ss1`] BCM GPIO 17 (physical pin 11), [`Ss2`] BCM GPIO 16 (physical pin 36)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175480,"byte_end":175605,"line_start":54,"line_end":54,"column_start":1,"column_end":126}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175606,"byte_end":175609,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! SPI2 shares the same characteristics and limitations as SPI1. It can be","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175610,"byte_end":175685,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"! enabled by adding `dtoverlay=spi2-3cs` to `/boot/config.txt`. Replace","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175686,"byte_end":175759,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"! `3cs` with either `2cs` or `1cs` if you only require 2 or 1 Slave Select","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175760,"byte_end":175836,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"! pins. The associated pins are listed below.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175837,"byte_end":175884,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175885,"byte_end":175888,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! * MISO: BCM GPIO 40","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175889,"byte_end":175912,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"! * MOSI: BCM GPIO 41","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175913,"byte_end":175936,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"! * SCLK: BCM GPIO 42","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175937,"byte_end":175960,"line_start":63,"line_end":63,"column_start":1,"column_end":24}},{"value":"! * SS: [`Ss0`] BCM GPIO 43, [`Ss1`] BCM GPIO 44, [`Ss2`] BCM GPIO 45","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":175961,"byte_end":176032,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176033,"byte_end":176036,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! The GPIO pin numbers mentioned above are part of the default configuration.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176037,"byte_end":176116,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! Some of their functionality can be moved to different pins. Read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176117,"byte_end":176185,"line_start":67,"line_end":67,"column_start":1,"column_end":69}},{"value":"! `/boot/overlays/README` for more information.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176186,"byte_end":176235,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176236,"byte_end":176239,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ## Buffer size limits","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176240,"byte_end":176265,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176266,"byte_end":176269,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! By default, `spidev` can handle up to 4096 bytes in a single transfer. You","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176270,"byte_end":176348,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"! can increase this limit to a maximum of 65536 bytes by appending","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176349,"byte_end":176417,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"! `spidev.bufsiz=65536` to the single line of parameters in `/boot/cmdline.txt`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176418,"byte_end":176500,"line_start":74,"line_end":74,"column_start":1,"column_end":83}},{"value":"! Remember to reboot the Raspberry Pi afterwards. The current value of bufsiz","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176501,"byte_end":176580,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"! can be checked with `cat /sys/module/spidev/parameters/bufsiz`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176581,"byte_end":176648,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176649,"byte_end":176652,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! ## Not supported","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176653,"byte_end":176673,"line_start":78,"line_end":78,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176674,"byte_end":176677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! Some features exposed by the generic `spidev` interface aren't fully","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176678,"byte_end":176750,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"! supported by the underlying driver or the BCM283x SoC: `SPI_LSB_FIRST` (LSB","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176751,"byte_end":176830,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"! first bit order), `SPI_3WIRE` (bidirectional mode), `SPI_LOOP` (loopback mode),","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176831,"byte_end":176914,"line_start":82,"line_end":82,"column_start":1,"column_end":84}},{"value":"! `SPI_NO_CS` (no Slave Select), `SPI_READY` (slave ready signal),","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176915,"byte_end":176983,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"! `SPI_TX_DUAL`/`SPI_RX_DUAL` (dual SPI), `SPI_TX_QUAD`/`SPI_RX_QUAD` (quad SPI),","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":176984,"byte_end":177067,"line_start":84,"line_end":84,"column_start":1,"column_end":84}},{"value":"! and any number of bits per word other than 8.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177068,"byte_end":177117,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177118,"byte_end":177121,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! If your slave device requires `SPI_LSB_FIRST`, you can use the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177122,"byte_end":177188,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"! [`reverse_bits`] function instead to reverse the bit order in software.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177189,"byte_end":177264,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177265,"byte_end":177268,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! `SPI_LOOP` mode can be achieved by connecting the MOSI and MISO pins","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177269,"byte_end":177341,"line_start":90,"line_end":90,"column_start":1,"column_end":73}},{"value":"! together.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177342,"byte_end":177355,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177356,"byte_end":177359,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! `SPI_NO_CS` can be implemented by connecting the Slave Select pin on your","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177360,"byte_end":177437,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"! slave device to any other available GPIO pin on the Pi, and manually","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177438,"byte_end":177510,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"! changing it to high and low as needed.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177511,"byte_end":177553,"line_start":95,"line_end":95,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177554,"byte_end":177557,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! [`Ss0`]: enum.SlaveSelect.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177558,"byte_end":177592,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"! [`Ss1`]: enum.SlaveSelect.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177593,"byte_end":177627,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"! [`Ss2`]: enum.SlaveSelect.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177628,"byte_end":177662,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"! [`Mode1`]: enum.Mode.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177663,"byte_end":177692,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"! [`Mode3`]: enum.Mode.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177693,"byte_end":177722,"line_start":101,"line_end":101,"column_start":1,"column_end":30}},{"value":"! [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":177723,"byte_end":177765,"line_start":102,"line_end":102,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207345,"byte_end":207352,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Segment","qualname":"::spi::segment::Segment","value":"Segment {  }","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"decl_id":null,"docs":" Part of a multi-segment transfer.","sig":null,"attributes":[{"value":"/ Part of a multi-segment transfer.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":206723,"byte_end":206760,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":206761,"byte_end":206764,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `Segment`s are transferred using the [`Spi::transfer_segments`] method.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":206765,"byte_end":206840,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":206841,"byte_end":206844,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Construct a new `Segment` for a simultaneous (full-duplex) read/write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":206845,"byte_end":206918,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ transfer using [`new`]. For read operations without any outgoing data,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":206919,"byte_end":206993,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ use [`with_read`]. For write operations where any incoming data","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":206994,"byte_end":207061,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ should be discarded, use [`with_write`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207062,"byte_end":207106,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207107,"byte_end":207110,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207111,"byte_end":207183,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ [`with_read`]: #method.with_read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207184,"byte_end":207220,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/ [`with_write`]: #method.with_write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207221,"byte_end":207259,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207260,"byte_end":207284,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"repr(C)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":207323,"byte_end":207333,"line_start":38,"line_end":38,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209378,"byte_end":209381,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Segment>::new","value":"fn (read_buffer: &'a mut [u8], write_buffer: &'b [u8]) -> Segment<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the default settings, and configures it\n for a simultaneous (full-duplex) read/write transfer.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the default settings, and configures it","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208620,"byte_end":208695,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ for a simultaneous (full-duplex) read/write transfer.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208700,"byte_end":208757,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208762,"byte_end":208765,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ For `Segment`s that only require either a read or write operation, call","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208770,"byte_end":208845,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ [`with_read`] or [`with_write`] instead of `new`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208850,"byte_end":208903,"line_start":71,"line_end":71,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208908,"byte_end":208911,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`] will only transfer as many bytes as the shortest of","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208916,"byte_end":208998,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ the two buffers contains.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209003,"byte_end":209032,"line_start":74,"line_end":74,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209037,"byte_end":209040,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ By default, all customizable settings are set to 0, which means it uses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209045,"byte_end":209120,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ the same values as set for [`Spi`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209125,"byte_end":209164,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209169,"byte_end":209172,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209177,"byte_end":209249,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209254,"byte_end":209282,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/ [`with_read`]: #method.with_read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209287,"byte_end":209323,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/ [`with_write`]: #method.with_write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209328,"byte_end":209366,"line_start":82,"line_end":82,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210046,"byte_end":210055,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"with_read","qualname":"<Segment>::with_read","value":"fn (buffer: &mut [u8]) -> Segment<'_, '_>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the default settings, and configures it\n for a read operation.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the default settings, and configures it","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209551,"byte_end":209626,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ for a read operation.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209631,"byte_end":209656,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209661,"byte_end":209664,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Incoming data from the slave device is written to `buffer`. The total","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209669,"byte_end":209742,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ number of bytes read depends on the length of `buffer`. A zero-value","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209747,"byte_end":209819,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ byte is sent for every byte read.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209824,"byte_end":209861,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209866,"byte_end":209869,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ By default, all customizable settings are set to 0, which means it uses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209874,"byte_end":209949,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ the same values as set for [`Spi`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209954,"byte_end":209993,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":209998,"byte_end":210001,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210006,"byte_end":210034,"line_start":97,"line_end":97,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210578,"byte_end":210588,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"with_write","qualname":"<Segment>::with_write","value":"fn (buffer: &[u8]) -> Segment<'_, '_>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the default settings, and configures it\n for a write operation.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the default settings, and configures it","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210174,"byte_end":210249,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ for a write operation.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210254,"byte_end":210280,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210285,"byte_end":210288,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Outgoing data from `buffer` is sent to the slave device. Any","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210293,"byte_end":210357,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/ incoming data is discarded.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210362,"byte_end":210393,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210398,"byte_end":210401,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ By default, all customizable settings are set to 0, which means it uses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210406,"byte_end":210481,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ the same values as set for [`Spi`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210486,"byte_end":210525,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210530,"byte_end":210533,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210538,"byte_end":210566,"line_start":111,"line_end":111,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211786,"byte_end":211799,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"with_settings","qualname":"<Segment>::with_settings","value":"fn (read_buffer: Option<&'a mut [u8]>, write_buffer: Option<&'b [u8]>, clock_speed: u32, delay: u16, bits_per_word: u8, ss_change: bool) -> Segment<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the specified settings.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the specified settings.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210703,"byte_end":210762,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210767,"byte_end":210770,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ These settings override the values set for [`Spi`], and are only used","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210775,"byte_end":210848,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ for this specific segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210853,"byte_end":210883,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210888,"byte_end":210891,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ If `read_buffer` is set to `None`, any incoming data is discarded.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210896,"byte_end":210966,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210971,"byte_end":210974,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If `write_buffer` is set to `None`, a zero-value byte is sent for every","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":210979,"byte_end":211054,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ byte read.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211059,"byte_end":211073,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211078,"byte_end":211081,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If both `read_buffer` and `write_buffer` are specified, [`Spi::transfer_segments`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211086,"byte_end":211172,"line_start":126,"line_end":126,"column_start":5,"column_end":91}},{"value":"/ will only transfer as many bytes as the shortest of the two buffers contains.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211177,"byte_end":211258,"line_start":127,"line_end":127,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211263,"byte_end":211266,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ `clock_speed` sets a custom clock speed in hertz (Hz).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211271,"byte_end":211329,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211334,"byte_end":211337,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ `delay` sets a delay in microseconds (µs).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211342,"byte_end":211389,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211394,"byte_end":211397,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ `bits_per_word` sets the number of bits per word. The Raspberry Pi currently only supports 8 bits per word.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211402,"byte_end":211513,"line_start":133,"line_end":133,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211518,"byte_end":211521,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ `ss_change` changes how Slave Select behaves in between two segments (toggle SS), or after the final segment (keep SS active).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211526,"byte_end":211656,"line_start":135,"line_end":135,"column_start":5,"column_end":135}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211661,"byte_end":211664,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211669,"byte_end":211741,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":211746,"byte_end":211774,"line_start":138,"line_end":138,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213297,"byte_end":213300,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"len","qualname":"<Segment>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that will be transferred.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that will be transferred.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":212957,"byte_end":213014,"line_start":182,"line_end":182,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213019,"byte_end":213022,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If both a read buffer and write buffer are supplied,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213027,"byte_end":213083,"line_start":184,"line_end":184,"column_start":5,"column_end":61}},{"value":"/ [`Spi::transfer_segments`] only transfers as many bytes as the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213088,"byte_end":213154,"line_start":185,"line_end":185,"column_start":5,"column_end":71}},{"value":"/ shortest of the two buffers contains.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213159,"byte_end":213200,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213205,"byte_end":213208,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213213,"byte_end":213285,"line_start":188,"line_end":188,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213428,"byte_end":213436,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Segment>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this segment won't transfer any bytes.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this segment won't transfer any bytes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213356,"byte_end":213416,"line_start":193,"line_end":193,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213562,"byte_end":213573,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"clock_speed","qualname":"<Segment>::clock_speed","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets the custom clock speed in hertz (Hz) for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the custom clock speed in hertz (Hz) for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213487,"byte_end":213550,"line_start":198,"line_end":198,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213954,"byte_end":213969,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"set_clock_speed","qualname":"<Segment>::set_clock_speed","value":"fn (&mut self, clock_speed: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom clock speed in hertz (Hz) for this segment.","sig":null,"attributes":[{"value":"/ Sets a custom clock speed in hertz (Hz) for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213623,"byte_end":213684,"line_start":203,"line_end":203,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213689,"byte_end":213692,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The SPI driver will automatically select the closest valid frequency.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213697,"byte_end":213770,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213775,"byte_end":213778,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ By default, `clock_speed` is set to `0`, which means","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213783,"byte_end":213839,"line_start":207,"line_end":207,"column_start":5,"column_end":61}},{"value":"/ it will use the same value as configured for [`Spi`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213844,"byte_end":213901,"line_start":208,"line_end":208,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213906,"byte_end":213909,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":213914,"byte_end":213942,"line_start":210,"line_end":210,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214119,"byte_end":214124,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"delay","qualname":"<Segment>::delay","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the delay in microseconds (µs) for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the delay in microseconds (µs) for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214049,"byte_end":214107,"line_start":215,"line_end":215,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214416,"byte_end":214425,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"set_delay","qualname":"<Segment>::set_delay","value":"fn (&mut self, delay: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a delay in microseconds (µs) for this segment.","sig":null,"attributes":[{"value":"/ Sets a delay in microseconds (µs) for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214177,"byte_end":214233,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214238,"byte_end":214241,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ `set_delay` adds a delay at the end of this segment,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214246,"byte_end":214302,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ before the (optional) Slave Select change.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214307,"byte_end":214353,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214358,"byte_end":214361,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ By default, `delay` is set to `0`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214366,"byte_end":214404,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214562,"byte_end":214575,"line_start":231,"line_end":231,"column_start":12,"column_end":25},"name":"bits_per_word","qualname":"<Segment>::bits_per_word","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of bits per word for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the number of bits per word for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214496,"byte_end":214550,"line_start":230,"line_end":230,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214939,"byte_end":214956,"line_start":243,"line_end":243,"column_start":12,"column_end":29},"name":"set_bits_per_word","qualname":"<Segment>::set_bits_per_word","value":"fn (&mut self, bits_per_word: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits per word for this segment.","sig":null,"attributes":[{"value":"/ Sets the number of bits per word for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214629,"byte_end":214683,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214688,"byte_end":214691,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports 8 bit words.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214696,"byte_end":214753,"line_start":237,"line_end":237,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214758,"byte_end":214761,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ By default, `bits_per_word` is set to `0`, which means","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214766,"byte_end":214824,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/ it will use the same value as configured for [`Spi`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214829,"byte_end":214886,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214891,"byte_end":214894,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":214899,"byte_end":214927,"line_start":242,"line_end":242,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215115,"byte_end":215124,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"ss_change","qualname":"<Segment>::ss_change","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the state of Slave Select change for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the state of Slave Select change for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215044,"byte_end":215103,"line_start":247,"line_end":247,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215637,"byte_end":215650,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"set_ss_change","qualname":"<Segment>::set_ss_change","value":"fn (&mut self, ss_change: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes Slave Select's behavior for this segment.","sig":null,"attributes":[{"value":"/ Changes Slave Select's behavior for this segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215181,"byte_end":215234,"line_start":252,"line_end":252,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215239,"byte_end":215242,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If `ss_change` is set to `true`, and this is not the last","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215247,"byte_end":215308,"line_start":254,"line_end":254,"column_start":5,"column_end":66}},{"value":"/ segment of the transfer, the Slave Select line will briefly","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215313,"byte_end":215376,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ change to inactive between this segment and the next.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215381,"byte_end":215438,"line_start":256,"line_end":256,"column_start":5,"column_end":62}},{"value":"/ If this is the last segment, setting `ss_change` to true will","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215443,"byte_end":215508,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ keep Slave Select active after the transfer ends.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215513,"byte_end":215566,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215571,"byte_end":215574,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ By default, `ss_change` is set to `false`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215579,"byte_end":215625,"line_start":260,"line_end":260,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1778},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178161,"byte_end":178163,"line_start":124,"line_end":124,"column_start":5,"column_end":7},"name":"Io","qualname":"::spi::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178142,"byte_end":178156,"line_start":123,"line_end":123,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1781},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178363,"byte_end":178386,"line_start":129,"line_end":129,"column_start":5,"column_end":28},"name":"BitsPerWordNotSupported","qualname":"::spi::Error::BitsPerWordNotSupported","value":"Error::BitsPerWordNotSupported(u8)","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" The specified number of bits per word is not supported.","sig":null,"attributes":[{"value":"/ The specified number of bits per word is not supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178180,"byte_end":178239,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178244,"byte_end":178247,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports 8 bit words. Any other value","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178252,"byte_end":178325,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ will trigger this error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178330,"byte_end":178358,"line_start":128,"line_end":128,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1784},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178952,"byte_end":178972,"line_start":141,"line_end":141,"column_start":5,"column_end":25},"name":"BitOrderNotSupported","qualname":"::spi::Error::BitOrderNotSupported","value":"Error::BitOrderNotSupported(BitOrder)","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" The specified bit order is not supported.","sig":null,"attributes":[{"value":"/ The specified bit order is not supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178396,"byte_end":178441,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178446,"byte_end":178449,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports the [`MsbFirst`] bit order. If you","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178454,"byte_end":178533,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ need the [`LsbFirst`] bit order, you can use the [`reverse_bits`] function","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178538,"byte_end":178616,"line_start":133,"line_end":133,"column_start":5,"column_end":83}},{"value":"/ instead to reverse the bit order in software by converting your write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178621,"byte_end":178694,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ buffer before sending it to the slave device, and your read buffer after","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178699,"byte_end":178775,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ reading any incoming data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178780,"byte_end":178810,"line_start":136,"line_end":136,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178815,"byte_end":178818,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`MsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178823,"byte_end":178859,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/ [`LsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178864,"byte_end":178900,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178905,"byte_end":178947,"line_start":140,"line_end":140,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1787},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":179040,"byte_end":179062,"line_start":143,"line_end":143,"column_start":5,"column_end":27},"name":"ClockSpeedNotSupported","qualname":"::spi::Error::ClockSpeedNotSupported","value":"Error::ClockSpeedNotSupported(u32)","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" The specified clock speed is not supported.\n","sig":null,"attributes":[{"value":"/ The specified clock speed is not supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178988,"byte_end":179035,"line_start":142,"line_end":142,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1790},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":179118,"byte_end":179134,"line_start":145,"line_end":145,"column_start":5,"column_end":21},"name":"ModeNotSupported","qualname":"::spi::Error::ModeNotSupported","value":"Error::ModeNotSupported(Mode)","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" The specified mode is not supported.\n","sig":null,"attributes":[{"value":"/ The specified mode is not supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":179073,"byte_end":179113,"line_start":144,"line_end":144,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1793},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":179208,"byte_end":179228,"line_start":147,"line_end":147,"column_start":5,"column_end":25},"name":"PolarityNotSupported","qualname":"::spi::Error::PolarityNotSupported","value":"Error::PolarityNotSupported(Polarity)","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" The specified Slave Select polarity is not supported.\n","sig":null,"attributes":[{"value":"/ The specified Slave Select polarity is not supported.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":179146,"byte_end":179203,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":1777},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178130,"byte_end":178135,"line_start":122,"line_end":122,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::Error","value":"Error::{Io, BitsPerWordNotSupported, BitOrderNotSupported, ClockSpeedNotSupported, ModeNotSupported, PolarityNotSupported}","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1793}],"decl_id":null,"docs":" Errors that can occur when accessing the SPI peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the SPI peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":178043,"byte_end":178103,"line_start":120,"line_end":120,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":905},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":180352,"byte_end":180358,"line_start":180,"line_end":180,"column_start":10,"column_end":16},"name":"Result","qualname":"::spi::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `spi::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `spi::Error`s.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":180276,"byte_end":180342,"line_start":179,"line_end":179,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":909},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182231,"byte_end":182243,"line_start":206,"line_end":206,"column_start":8,"column_end":20},"name":"reverse_bits","qualname":"::spi::reverse_bits","value":"fn (buffer: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reverses the bits of each byte in `buffer`.","sig":null,"attributes":[{"value":"/ Reverses the bits of each byte in `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182036,"byte_end":182083,"line_start":201,"line_end":201,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182084,"byte_end":182087,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Use this function to switch the bit order between most-significant bit first","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182088,"byte_end":182168,"line_start":203,"line_end":203,"column_start":1,"column_end":81}},{"value":"/ and least-significant bit first.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182169,"byte_end":182205,"line_start":204,"line_end":204,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182206,"byte_end":182223,"line_start":205,"line_end":205,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1799},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182623,"byte_end":182627,"line_start":220,"line_end":220,"column_start":5,"column_end":9},"name":"Spi0","qualname":"::spi::Bus::Spi0","value":"Bus::Spi0","parent":{"krate":0,"index":1798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1802},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182637,"byte_end":182641,"line_start":221,"line_end":221,"column_start":5,"column_end":9},"name":"Spi1","qualname":"::spi::Bus::Spi1","value":"Bus::Spi1","parent":{"krate":0,"index":1798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1805},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182651,"byte_end":182655,"line_start":222,"line_end":222,"column_start":5,"column_end":9},"name":"Spi2","qualname":"::spi::Bus::Spi2","value":"Bus::Spi2","parent":{"krate":0,"index":1798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1798},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182613,"byte_end":182616,"line_start":219,"line_end":219,"column_start":10,"column_end":13},"name":"Bus","qualname":"::spi::Bus","value":"Bus::{Spi0, Spi1, Spi2}","parent":null,"children":[{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805}],"decl_id":null,"docs":" SPI buses.","sig":null,"attributes":[{"value":"/ SPI buses.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182352,"byte_end":182366,"line_start":212,"line_end":212,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182367,"byte_end":182370,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi supports up to three SPI buses, depending on the model and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182371,"byte_end":182450,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"/ your `/boot/config.txt` configuration. More information can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182451,"byte_end":182531,"line_start":215,"line_end":215,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182532,"byte_end":182535,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182536,"byte_end":182558,"line_start":217,"line_end":217,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1820},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183669,"byte_end":183672,"line_start":251,"line_end":251,"column_start":5,"column_end":8},"name":"Ss0","qualname":"::spi::SlaveSelect::Ss0","value":"SlaveSelect::Ss0","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183682,"byte_end":183685,"line_start":252,"line_end":252,"column_start":5,"column_end":8},"name":"Ss1","qualname":"::spi::SlaveSelect::Ss1","value":"SlaveSelect::Ss1","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1826},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183695,"byte_end":183698,"line_start":253,"line_end":253,"column_start":5,"column_end":8},"name":"Ss2","qualname":"::spi::SlaveSelect::Ss2","value":"SlaveSelect::Ss2","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1819},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183651,"byte_end":183662,"line_start":250,"line_end":250,"column_start":10,"column_end":21},"name":"SlaveSelect","qualname":"::spi::SlaveSelect","value":"SlaveSelect::{Ss0, Ss1, Ss2}","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826}],"decl_id":null,"docs":" Slave Select pins.","sig":null,"attributes":[{"value":"/ Slave Select pins.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182928,"byte_end":182950,"line_start":235,"line_end":235,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182951,"byte_end":182954,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Slave Select is used to signal which slave device should pay attention to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182955,"byte_end":183032,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/ the SPI bus. Slave Select (SS) is the more commonly used name, but","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183033,"byte_end":183103,"line_start":238,"line_end":238,"column_start":1,"column_end":71}},{"value":"/ it's also known as Chip Select (CS) or Chip Enable (CE). Throughout the Raspberry","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183104,"byte_end":183189,"line_start":239,"line_end":239,"column_start":1,"column_end":86}},{"value":"/ Pi's documentation, config files and BCM2835 datasheet, multiple different names","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183190,"byte_end":183274,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ are used. Any pins referred to as CE0, CE1, and CE2 or CS0, CS1, and CS2 are equivalent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183275,"byte_end":183366,"line_start":241,"line_end":241,"column_start":1,"column_end":92}},{"value":"/ to `Ss0`, `Ss1`, and `Ss2`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183367,"byte_end":183398,"line_start":242,"line_end":242,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183399,"byte_end":183402,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ The number of available Slave Select pins for the selected SPI bus depends","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183403,"byte_end":183481,"line_start":244,"line_end":244,"column_start":1,"column_end":79}},{"value":"/ on your `/boot/config.txt` configuration. More information can be found","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183482,"byte_end":183557,"line_start":245,"line_end":245,"column_start":1,"column_end":76}},{"value":"/ [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183558,"byte_end":183569,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183570,"byte_end":183573,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183574,"byte_end":183596,"line_start":248,"line_end":248,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1841},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184095,"byte_end":184104,"line_start":269,"line_end":269,"column_start":5,"column_end":14},"name":"ActiveLow","qualname":"::spi::Polarity::ActiveLow","value":"Polarity::ActiveLow","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184114,"byte_end":184124,"line_start":270,"line_end":270,"column_start":5,"column_end":15},"name":"ActiveHigh","qualname":"::spi::Polarity::ActiveHigh","value":"Polarity::ActiveHigh","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1840},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184080,"byte_end":184088,"line_start":268,"line_end":268,"column_start":10,"column_end":18},"name":"Polarity","qualname":"::spi::Polarity","value":"Polarity::{ActiveLow, ActiveHigh}","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1844}],"decl_id":null,"docs":" Slave Select polarities.\n","sig":null,"attributes":[{"value":"/ Slave Select polarities.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183997,"byte_end":184025,"line_start":266,"line_end":266,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1859},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185154,"byte_end":185159,"line_start":303,"line_end":303,"column_start":5,"column_end":10},"name":"Mode0","qualname":"::spi::Mode::Mode0","value":"Mode::Mode0","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1862},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185169,"byte_end":185174,"line_start":304,"line_end":304,"column_start":5,"column_end":10},"name":"Mode1","qualname":"::spi::Mode::Mode1","value":"Mode::Mode1","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1865},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185184,"byte_end":185189,"line_start":305,"line_end":305,"column_start":5,"column_end":10},"name":"Mode2","qualname":"::spi::Mode::Mode2","value":"Mode::Mode2","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1868},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185199,"byte_end":185204,"line_start":306,"line_end":306,"column_start":5,"column_end":10},"name":"Mode3","qualname":"::spi::Mode::Mode3","value":"Mode::Mode3","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1858},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185143,"byte_end":185147,"line_start":302,"line_end":302,"column_start":10,"column_end":14},"name":"Mode","qualname":"::spi::Mode","value":"Mode::{Mode0, Mode1, Mode2, Mode3}","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868}],"decl_id":null,"docs":" SPI modes indicating the clock polarity and phase.","sig":null,"attributes":[{"value":"/ SPI modes indicating the clock polarity and phase.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184390,"byte_end":184444,"line_start":282,"line_end":282,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184445,"byte_end":184448,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ Select the appropriate SPI mode for your device. Each mode configures the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184449,"byte_end":184526,"line_start":284,"line_end":284,"column_start":1,"column_end":78}},{"value":"/ clock polarity (CPOL) and clock phase (CPHA) as shown below:","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184527,"byte_end":184591,"line_start":285,"line_end":285,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184592,"byte_end":184595,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ * Mode0: CPOL 0, CPHA 0","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184596,"byte_end":184623,"line_start":287,"line_end":287,"column_start":1,"column_end":28}},{"value":"/ * Mode1: CPOL 0, CPHA 1","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184624,"byte_end":184651,"line_start":288,"line_end":288,"column_start":1,"column_end":28}},{"value":"/ * Mode2: CPOL 1, CPHA 0","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184652,"byte_end":184679,"line_start":289,"line_end":289,"column_start":1,"column_end":28}},{"value":"/ * Mode3: CPOL 1, CPHA 1","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184680,"byte_end":184707,"line_start":290,"line_end":290,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184708,"byte_end":184711,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ The [`Spi0`] bus supports all 4 modes. [`Spi1`] and [`Spi2`] only support","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184712,"byte_end":184789,"line_start":292,"line_end":292,"column_start":1,"column_end":78}},{"value":"/ `Mode0` and `Mode2`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184790,"byte_end":184814,"line_start":293,"line_end":293,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184815,"byte_end":184818,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ More information on clock polarity and phase can be found on [Wikipedia].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184819,"byte_end":184896,"line_start":295,"line_end":295,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184897,"byte_end":184900,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ [`Spi0`]: enum.Bus.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184901,"byte_end":184928,"line_start":297,"line_end":297,"column_start":1,"column_end":28}},{"value":"/ [`Spi1`]: enum.Bus.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184929,"byte_end":184956,"line_start":298,"line_end":298,"column_start":1,"column_end":28}},{"value":"/ [`Spi2`]: enum.Bus.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184957,"byte_end":184984,"line_start":299,"line_end":299,"column_start":1,"column_end":28}},{"value":"/ [Wikipedia]: https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus#Clock_polarity_and_phase","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184985,"byte_end":185088,"line_start":300,"line_end":300,"column_start":1,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1883},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186307,"byte_end":186315,"line_start":338,"line_end":338,"column_start":5,"column_end":13},"name":"MsbFirst","qualname":"::spi::BitOrder::MsbFirst","value":"BitOrder::MsbFirst","parent":{"krate":0,"index":1882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1886},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186325,"byte_end":186333,"line_start":339,"line_end":339,"column_start":5,"column_end":13},"name":"LsbFirst","qualname":"::spi::BitOrder::LsbFirst","value":"BitOrder::LsbFirst","parent":{"krate":0,"index":1882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1882},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186292,"byte_end":186300,"line_start":337,"line_end":337,"column_start":10,"column_end":18},"name":"BitOrder","qualname":"::spi::BitOrder","value":"BitOrder::{MsbFirst, LsbFirst}","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1886}],"decl_id":null,"docs":" Bit orders.","sig":null,"attributes":[{"value":"/ Bit orders.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185534,"byte_end":185549,"line_start":320,"line_end":320,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185550,"byte_end":185553,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ The bit order determines in what order data is shifted out and shifted in.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185554,"byte_end":185632,"line_start":322,"line_end":322,"column_start":1,"column_end":79}},{"value":"/ Select the bit order that's appropriate for the device you're","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185633,"byte_end":185698,"line_start":323,"line_end":323,"column_start":1,"column_end":66}},{"value":"/ communicating with.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185699,"byte_end":185722,"line_start":324,"line_end":324,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185723,"byte_end":185726,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ `MsbFirst` will transfer the most-significant bit first. `LsbFirst` will","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185727,"byte_end":185803,"line_start":326,"line_end":326,"column_start":1,"column_end":77}},{"value":"/ transfer the least-significant bit first.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185804,"byte_end":185849,"line_start":327,"line_end":327,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185850,"byte_end":185853,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi currently only supports the `MsbFirst` bit order. If you","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185854,"byte_end":185931,"line_start":329,"line_end":329,"column_start":1,"column_end":78}},{"value":"/ need the `LsbFirst` bit order, you can use the [`reverse_bits`] function","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185932,"byte_end":186008,"line_start":330,"line_end":330,"column_start":1,"column_end":77}},{"value":"/ instead to reverse the bit order in software by converting your write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186009,"byte_end":186082,"line_start":331,"line_end":331,"column_start":1,"column_end":74}},{"value":"/ buffer before sending it to the slave device, and your read buffer after","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186083,"byte_end":186159,"line_start":332,"line_end":332,"column_start":1,"column_end":77}},{"value":"/ reading any incoming data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186160,"byte_end":186190,"line_start":333,"line_end":333,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186191,"byte_end":186194,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186195,"byte_end":186237,"line_start":335,"line_end":335,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":920},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187363,"byte_end":187366,"line_start":365,"line_end":365,"column_start":12,"column_end":15},"name":"Spi","qualname":"::spi::Spi","value":"Spi {  }","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's SPI peripherals.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's SPI peripherals.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186593,"byte_end":186651,"line_start":351,"line_end":351,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186652,"byte_end":186655,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ Before using `Spi`, make sure your Raspberry Pi has the necessary SPI buses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186656,"byte_end":186735,"line_start":353,"line_end":353,"column_start":1,"column_end":80}},{"value":"/ and Slave Select pins enabled. More information can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186736,"byte_end":186808,"line_start":354,"line_end":354,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186809,"byte_end":186812,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`blocking::spi::Transfer<u8>`], [`blocking::spi::Write<u8>`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186813,"byte_end":186897,"line_start":356,"line_end":356,"column_start":1,"column_end":85}},{"value":"/ and [`spi::FullDuplex<u8>`] trait","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186898,"byte_end":186935,"line_start":357,"line_end":357,"column_start":1,"column_end":38}},{"value":"/ implementations for `Spi` can be enabled by specifying the optional `hal`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186936,"byte_end":187013,"line_start":358,"line_end":358,"column_start":1,"column_end":78}},{"value":"/ feature in the dependency declaration for the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187014,"byte_end":187078,"line_start":359,"line_end":359,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187079,"byte_end":187082,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187083,"byte_end":187105,"line_start":361,"line_end":361,"column_start":1,"column_end":23}},{"value":"/ [`blocking::spi::Transfer<u8>`]: ../../embedded_hal/blocking/spi/trait.Transfer.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187106,"byte_end":187194,"line_start":362,"line_end":362,"column_start":1,"column_end":89}},{"value":"/ [`blocking::spi::Write<u8>`]: ../../embedded_hal/blocking/spi/trait.Write.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187195,"byte_end":187277,"line_start":363,"line_end":363,"column_start":1,"column_end":83}},{"value":"/ [`spi::FullDuplex<u8>`]: ../../embedded_hal/spi/trait.FullDuplex.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187278,"byte_end":187351,"line_start":364,"line_end":364,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":188187,"byte_end":188190,"line_start":386,"line_end":386,"column_start":12,"column_end":15},"name":"new","qualname":"<Spi>::new","value":"fn (bus: Bus, slave_select: SlaveSelect, clock_speed: u32, mode: Mode) -> Result<Spi>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Spi`.","sig":null,"attributes":[{"value":"/ Constructs a new `Spi`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187798,"byte_end":187825,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187830,"byte_end":187833,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ `bus` and `slave_select` specify the selected SPI bus and one of its","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187838,"byte_end":187910,"line_start":379,"line_end":379,"column_start":5,"column_end":77}},{"value":"/ associated Slave Select pins.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187915,"byte_end":187948,"line_start":380,"line_end":380,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187953,"byte_end":187956,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ `clock_speed` defines the maximum clock frequency in hertz (Hz). The SPI driver","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187961,"byte_end":188044,"line_start":382,"line_end":382,"column_start":5,"column_end":88}},{"value":"/ will automatically round down to the closest valid frequency.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":188049,"byte_end":188114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":188119,"byte_end":188122,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ `mode` selects the clock polarity and phase.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":188127,"byte_end":188175,"line_start":385,"line_end":385,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":189689,"byte_end":189698,"line_start":426,"line_end":426,"column_start":12,"column_end":21},"name":"bit_order","qualname":"<Spi>::bit_order","value":"fn (&self) -> Result<BitOrder>","parent":null,"children":[],"decl_id":null,"docs":" Gets the bit order.\n","sig":null,"attributes":[{"value":"/ Gets the bit order.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":189654,"byte_end":189677,"line_start":425,"line_end":425,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190593,"byte_end":190606,"line_start":449,"line_end":449,"column_start":12,"column_end":25},"name":"set_bit_order","qualname":"<Spi>::set_bit_order","value":"fn (&self, bit_order: BitOrder) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the order in which bits are shifted out and in.","sig":null,"attributes":[{"value":"/ Sets the order in which bits are shifted out and in.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":189957,"byte_end":190013,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190018,"byte_end":190021,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports the [`MsbFirst`] bit order. If you","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190026,"byte_end":190105,"line_start":438,"line_end":438,"column_start":5,"column_end":84}},{"value":"/ need the [`LsbFirst`] bit order, you can use the [`reverse_bits`] function","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190110,"byte_end":190188,"line_start":439,"line_end":439,"column_start":5,"column_end":83}},{"value":"/ instead to reverse the bit order in software by converting your write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190193,"byte_end":190266,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ buffer before sending it to the slave device, and your read buffer after","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190271,"byte_end":190347,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ reading any incoming data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190352,"byte_end":190382,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190387,"byte_end":190390,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ By default, `bit_order` is set to `MsbFirst`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190395,"byte_end":190444,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190449,"byte_end":190452,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`MsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190457,"byte_end":190493,"line_start":446,"line_end":446,"column_start":5,"column_end":41}},{"value":"/ [`LsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190498,"byte_end":190534,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/ [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190539,"byte_end":190581,"line_start":448,"line_end":448,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191015,"byte_end":191028,"line_start":460,"line_end":460,"column_start":12,"column_end":25},"name":"bits_per_word","qualname":"<Spi>::bits_per_word","value":"fn (&self) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of bits per word.\n","sig":null,"attributes":[{"value":"/ Gets the number of bits per word.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":190966,"byte_end":191003,"line_start":459,"line_end":459,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191381,"byte_end":191398,"line_start":472,"line_end":472,"column_start":12,"column_end":29},"name":"set_bits_per_word","qualname":"<Spi>::set_bits_per_word","value":"fn (&self, bits_per_word: u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits per word.","sig":null,"attributes":[{"value":"/ Sets the number of bits per word.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191205,"byte_end":191242,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191247,"byte_end":191250,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports 8 bit words.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191255,"byte_end":191312,"line_start":469,"line_end":469,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191317,"byte_end":191320,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ By default, `bits_per_word` is set to 8.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191325,"byte_end":191369,"line_start":471,"line_end":471,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191820,"byte_end":191831,"line_start":483,"line_end":483,"column_start":12,"column_end":23},"name":"clock_speed","qualname":"<Spi>::clock_speed","value":"fn (&self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the clock frequency in hertz (Hz).\n","sig":null,"attributes":[{"value":"/ Gets the clock frequency in hertz (Hz).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":191765,"byte_end":191808,"line_start":482,"line_end":482,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192150,"byte_end":192165,"line_start":493,"line_end":493,"column_start":12,"column_end":27},"name":"set_clock_speed","qualname":"<Spi>::set_clock_speed","value":"fn (&self, clock_speed: u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the clock frequency in hertz (Hz).","sig":null,"attributes":[{"value":"/ Sets the clock frequency in hertz (Hz).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192002,"byte_end":192045,"line_start":490,"line_end":490,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192050,"byte_end":192053,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ The SPI driver will automatically round down to the closest valid frequency.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192058,"byte_end":192138,"line_start":492,"line_end":492,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192558,"byte_end":192562,"line_start":504,"line_end":504,"column_start":12,"column_end":16},"name":"mode","qualname":"<Spi>::mode","value":"fn (&self) -> Result<Mode>","parent":null,"children":[],"decl_id":null,"docs":" Gets the SPI mode.\n","sig":null,"attributes":[{"value":"/ Gets the SPI mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192524,"byte_end":192546,"line_start":503,"line_end":503,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":193047,"byte_end":193055,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"name":"set_mode","qualname":"<Spi>::set_mode","value":"fn (&self, mode: Mode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the SPI mode.","sig":null,"attributes":[{"value":"/ Sets the SPI mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192859,"byte_end":192881,"line_start":516,"line_end":516,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192886,"byte_end":192889,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ The SPI mode indicates the serial clock polarity and phase. Some modes","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192894,"byte_end":192968,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ may not be available depending on the SPI bus that's used.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":192973,"byte_end":193035,"line_start":519,"line_end":519,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":193640,"byte_end":193651,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"name":"ss_polarity","qualname":"<Spi>::ss_polarity","value":"fn (&self) -> Result<Polarity>","parent":null,"children":[],"decl_id":null,"docs":" Gets the Slave Select polarity.\n","sig":null,"attributes":[{"value":"/ Gets the Slave Select polarity.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":193593,"byte_end":193628,"line_start":536,"line_end":536,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194048,"byte_end":194063,"line_start":551,"line_end":551,"column_start":12,"column_end":27},"name":"set_ss_polarity","qualname":"<Spi>::set_ss_polarity","value":"fn (&self, polarity: Polarity) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets Slave Select polarity.","sig":null,"attributes":[{"value":"/ Sets Slave Select polarity.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":193928,"byte_end":193959,"line_start":548,"line_end":548,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":193964,"byte_end":193967,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ By default, the Slave Select polarity is set to `ActiveLow`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":193972,"byte_end":194036,"line_start":550,"line_end":550,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195265,"byte_end":195269,"line_start":583,"line_end":583,"column_start":12,"column_end":16},"name":"read","qualname":"<Spi>::read","value":"fn (&mut self, buffer: &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives incoming data from the slave device and writes it to `buffer`.","sig":null,"attributes":[{"value":"/ Receives incoming data from the slave device and writes it to `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194671,"byte_end":194746,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194751,"byte_end":194754,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ The SPI protocol doesn't indicate how much incoming data is waiting,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194759,"byte_end":194831,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"/ so the total number of bytes read depends on the length of `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194836,"byte_end":194908,"line_start":573,"line_end":573,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194913,"byte_end":194916,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ During the read, the MOSI line is kept in a state that results in a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194921,"byte_end":194992,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/ zero value byte shifted out for every byte `read` receives on the MISO","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":194997,"byte_end":195071,"line_start":576,"line_end":576,"column_start":5,"column_end":79}},{"value":"/ line.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195076,"byte_end":195085,"line_start":577,"line_end":577,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195090,"byte_end":195093,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Slave Select is set to active at the start of the read, and inactive","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195098,"byte_end":195170,"line_start":579,"line_end":579,"column_start":5,"column_end":77}},{"value":"/ when the read completes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195175,"byte_end":195203,"line_start":580,"line_end":580,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195208,"byte_end":195211,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195216,"byte_end":195253,"line_start":582,"line_end":582,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195701,"byte_end":195706,"line_start":595,"line_end":595,"column_start":12,"column_end":17},"name":"write","qualname":"<Spi>::write","value":"fn (&mut self, buffer: &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends the outgoing data contained in `buffer` to the slave device.","sig":null,"attributes":[{"value":"/ Sends the outgoing data contained in `buffer` to the slave device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195368,"byte_end":195438,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195443,"byte_end":195446,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Any data received on the MISO line from the slave is ignored.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195451,"byte_end":195516,"line_start":589,"line_end":589,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195521,"byte_end":195524,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Slave Select is set to active at the start of the write, and inactive","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195529,"byte_end":195602,"line_start":591,"line_end":591,"column_start":5,"column_end":78}},{"value":"/ when the write completes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195607,"byte_end":195636,"line_start":592,"line_end":592,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195641,"byte_end":195644,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were written.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195649,"byte_end":195689,"line_start":594,"line_end":594,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196512,"byte_end":196520,"line_start":613,"line_end":613,"column_start":12,"column_end":20},"name":"transfer","qualname":"<Spi>::transfer","value":"fn (&self, read_buffer: &mut [u8], write_buffer: &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends and receives data at the same time.","sig":null,"attributes":[{"value":"/ Sends and receives data at the same time.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195802,"byte_end":195847,"line_start":599,"line_end":599,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195852,"byte_end":195855,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ SPI is a full-duplex protocol that shifts out bits to the slave device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195860,"byte_end":195934,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ on the MOSI line while simultaneously shifting in bits it receives on","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":195939,"byte_end":196012,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ the MISO line. `transfer` stores the incoming data in `read_buffer`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196017,"byte_end":196089,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ and sends the outgoing data contained in `write_buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196094,"byte_end":196154,"line_start":604,"line_end":604,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196159,"byte_end":196162,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Because data is sent and received simultaneously, `transfer` will only","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196167,"byte_end":196241,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ transfer as many bytes as the shortest of the two buffers contains.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196246,"byte_end":196317,"line_start":607,"line_end":607,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196322,"byte_end":196325,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Slave Select is set to active at the start of the transfer, and inactive","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196330,"byte_end":196406,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/ when the transfer completes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196411,"byte_end":196443,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196448,"byte_end":196451,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were transferred.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196456,"byte_end":196500,"line_start":612,"line_end":612,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197415,"byte_end":197432,"line_start":633,"line_end":633,"column_start":12,"column_end":29},"name":"transfer_segments","qualname":"<Spi>::transfer_segments","value":"fn (&self, segments: &[Segment<'_, '_>]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Transfers multiple half-duplex or full-duplex segments.","sig":null,"attributes":[{"value":"/ Transfers multiple half-duplex or full-duplex segments.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196757,"byte_end":196816,"line_start":621,"line_end":621,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196821,"byte_end":196824,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ `transfer_segments` transfers multiple segments in a single call. Each","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196829,"byte_end":196903,"line_start":623,"line_end":623,"column_start":5,"column_end":79}},{"value":"/ [`Segment`] contains a reference to either a read buffer or a write buffer,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196908,"byte_end":196987,"line_start":624,"line_end":624,"column_start":5,"column_end":84}},{"value":"/ or both. Optional settings can be configured that override the SPI bus","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":196992,"byte_end":197066,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ settings for that specific segment.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197071,"byte_end":197110,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197115,"byte_end":197118,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ By default, Slave Select stays active until all segments have been","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197123,"byte_end":197193,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/ transferred. You can change this behavior using [`Segment::set_ss_change`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197198,"byte_end":197277,"line_start":629,"line_end":629,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197282,"byte_end":197285,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ [`Segment`]: struct.Segment.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197290,"byte_end":197326,"line_start":631,"line_end":631,"column_start":5,"column_end":41}},{"value":"/ [`Segment::set_ss_change`]: struct.Segment.html#method.set_ss_change","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197331,"byte_end":197403,"line_start":632,"line_end":632,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":943},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"system","qualname":"::system","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":1905},{"krate":0,"index":1947},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1940},{"krate":0,"index":1938},{"krate":0,"index":960},{"krate":0,"index":1949},{"krate":0,"index":1971},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1964},{"krate":0,"index":1962},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":1973},{"krate":0,"index":1988},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1980},{"krate":0,"index":1978},{"krate":0,"index":967}],"decl_id":null,"docs":" Raspberry Pi system-related tools.","sig":null,"attributes":[{"value":"! Raspberry Pi system-related tools.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":217487,"byte_end":217525,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":217526,"byte_end":217529,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! Use [`DeviceInfo`] to identify the Raspberry Pi's model and SoC.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":217530,"byte_end":217598,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":217599,"byte_end":217602,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [`DeviceInfo`]: struct.DeviceInfo.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":217603,"byte_end":217645,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1901},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218647,"byte_end":218659,"line_start":54,"line_end":54,"column_start":5,"column_end":17},"name":"UnknownModel","qualname":"::system::Error::UnknownModel","value":"Error::UnknownModel","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" Unknown model.","sig":null,"attributes":[{"value":"/ Unknown model.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218007,"byte_end":218025,"line_start":41,"line_end":41,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218030,"byte_end":218033,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ `DeviceInfo` was unable to identify the Raspberry Pi model based on the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218038,"byte_end":218113,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ contents of `/proc/cpuinfo`, `/sys/firmware/devicetree/base/compatible`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218118,"byte_end":218193,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ and `/sys/firmware/devicetree/base/model`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218198,"byte_end":218244,"line_start":45,"line_end":45,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218249,"byte_end":218252,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Support for new models is usually added shortly after they are officially","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218257,"byte_end":218334,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ announced and available to the public. Make sure you're using the latest","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218339,"byte_end":218415,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ release of RPPAL.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218420,"byte_end":218441,"line_start":49,"line_end":49,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218446,"byte_end":218449,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ You may also encounter this error if your Linux distribution","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218454,"byte_end":218518,"line_start":51,"line_end":51,"column_start":5,"column_end":69}},{"value":"/ doesn't provide any of the common user-accessible system files","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218523,"byte_end":218589,"line_start":52,"line_end":52,"column_start":5,"column_end":71}},{"value":"/ that are used to identify the model and SoC.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218594,"byte_end":218642,"line_start":53,"line_end":53,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1900},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":217995,"byte_end":218000,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::system::Error","value":"Error::{UnknownModel}","parent":null,"children":[{"krate":0,"index":1901}],"decl_id":null,"docs":" Errors that can occur when trying to identify the Raspberry Pi hardware.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when trying to identify the Raspberry Pi hardware.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":217892,"byte_end":217968,"line_start":38,"line_end":38,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":958},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218985,"byte_end":218991,"line_start":68,"line_end":68,"column_start":10,"column_end":16},"name":"Result","qualname":"::system::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `system::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `system::Error`s.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218906,"byte_end":218975,"line_start":67,"line_end":67,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1906},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219330,"byte_end":219342,"line_start":77,"line_end":77,"column_start":5,"column_end":17},"name":"RaspberryPiA","qualname":"::system::Model::RaspberryPiA","value":"Model::RaspberryPiA","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1908},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219348,"byte_end":219364,"line_start":78,"line_end":78,"column_start":5,"column_end":21},"name":"RaspberryPiAPlus","qualname":"::system::Model::RaspberryPiAPlus","value":"Model::RaspberryPiAPlus","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1910},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219370,"byte_end":219386,"line_start":79,"line_end":79,"column_start":5,"column_end":21},"name":"RaspberryPiBRev1","qualname":"::system::Model::RaspberryPiBRev1","value":"Model::RaspberryPiBRev1","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1912},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219392,"byte_end":219408,"line_start":80,"line_end":80,"column_start":5,"column_end":21},"name":"RaspberryPiBRev2","qualname":"::system::Model::RaspberryPiBRev2","value":"Model::RaspberryPiBRev2","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1914},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219414,"byte_end":219430,"line_start":81,"line_end":81,"column_start":5,"column_end":21},"name":"RaspberryPiBPlus","qualname":"::system::Model::RaspberryPiBPlus","value":"Model::RaspberryPiBPlus","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1916},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219436,"byte_end":219449,"line_start":82,"line_end":82,"column_start":5,"column_end":18},"name":"RaspberryPi2B","qualname":"::system::Model::RaspberryPi2B","value":"Model::RaspberryPi2B","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1918},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219455,"byte_end":219472,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"name":"RaspberryPi3APlus","qualname":"::system::Model::RaspberryPi3APlus","value":"Model::RaspberryPi3APlus","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1920},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219478,"byte_end":219491,"line_start":84,"line_end":84,"column_start":5,"column_end":18},"name":"RaspberryPi3B","qualname":"::system::Model::RaspberryPi3B","value":"Model::RaspberryPi3B","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1922},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219497,"byte_end":219514,"line_start":85,"line_end":85,"column_start":5,"column_end":22},"name":"RaspberryPi3BPlus","qualname":"::system::Model::RaspberryPi3BPlus","value":"Model::RaspberryPi3BPlus","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1924},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219520,"byte_end":219533,"line_start":86,"line_end":86,"column_start":5,"column_end":18},"name":"RaspberryPi4B","qualname":"::system::Model::RaspberryPi4B","value":"Model::RaspberryPi4B","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1926},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219539,"byte_end":219563,"line_start":87,"line_end":87,"column_start":5,"column_end":29},"name":"RaspberryPiComputeModule","qualname":"::system::Model::RaspberryPiComputeModule","value":"Model::RaspberryPiComputeModule","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1928},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219569,"byte_end":219594,"line_start":88,"line_end":88,"column_start":5,"column_end":30},"name":"RaspberryPiComputeModule3","qualname":"::system::Model::RaspberryPiComputeModule3","value":"Model::RaspberryPiComputeModule3","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1930},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219600,"byte_end":219629,"line_start":89,"line_end":89,"column_start":5,"column_end":34},"name":"RaspberryPiComputeModule3Plus","qualname":"::system::Model::RaspberryPiComputeModule3Plus","value":"Model::RaspberryPiComputeModule3Plus","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1932},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219635,"byte_end":219650,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"RaspberryPiZero","qualname":"::system::Model::RaspberryPiZero","value":"Model::RaspberryPiZero","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1934},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219656,"byte_end":219672,"line_start":91,"line_end":91,"column_start":5,"column_end":21},"name":"RaspberryPiZeroW","qualname":"::system::Model::RaspberryPiZeroW","value":"Model::RaspberryPiZeroW","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1936},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219907,"byte_end":219922,"line_start":96,"line_end":96,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::system::Model::__Nonexhaustive","value":"Model::__Nonexhaustive","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":" `Model` might be extended with additional variants in a minor or\n patch revision, and must not be exhaustively matched against.\n Instead, add a `_` catch-all arm to match future variants.\n","sig":null,"attributes":[{"value":"/ `Model` might be extended with additional variants in a minor or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219678,"byte_end":219746,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ patch revision, and must not be exhaustively matched against.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219751,"byte_end":219816,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/ Instead, add a `_` catch-all arm to match future variants.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219821,"byte_end":219883,"line_start":94,"line_end":94,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":1905},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219318,"byte_end":219323,"line_start":76,"line_end":76,"column_start":10,"column_end":15},"name":"Model","qualname":"::system::Model","value":"Model::{RaspberryPiA, RaspberryPiAPlus, RaspberryPiBRev1, RaspberryPiBRev2, RaspberryPiBPlus, RaspberryPi2B, RaspberryPi3APlus, RaspberryPi3B, RaspberryPi3BPlus, RaspberryPi4B, RaspberryPiComputeModule, RaspberryPiComputeModule3, RaspberryPiComputeModule3Plus, RaspberryPiZero, RaspberryPiZeroW, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1936}],"decl_id":null,"docs":" Identifiable Raspberry Pi models.","sig":null,"attributes":[{"value":"/ Identifiable Raspberry Pi models.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219024,"byte_end":219061,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219062,"byte_end":219065,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ `Model` might be extended with additional variants in a minor or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219066,"byte_end":219134,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/ patch revision, and must not be exhaustively matched against.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219135,"byte_end":219200,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/ Instead, add a `_` catch-all arm to match future variants.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219201,"byte_end":219263,"line_start":74,"line_end":74,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1950},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221545,"byte_end":221552,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"Bcm2835","qualname":"::system::SoC::Bcm2835","value":"SoC::Bcm2835","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1952},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221558,"byte_end":221565,"line_start":130,"line_end":130,"column_start":5,"column_end":12},"name":"Bcm2836","qualname":"::system::SoC::Bcm2836","value":"SoC::Bcm2836","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1954},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221571,"byte_end":221580,"line_start":131,"line_end":131,"column_start":5,"column_end":14},"name":"Bcm2837A1","qualname":"::system::SoC::Bcm2837A1","value":"SoC::Bcm2837A1","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1956},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221586,"byte_end":221595,"line_start":132,"line_end":132,"column_start":5,"column_end":14},"name":"Bcm2837B0","qualname":"::system::SoC::Bcm2837B0","value":"SoC::Bcm2837B0","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1958},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221601,"byte_end":221608,"line_start":133,"line_end":133,"column_start":5,"column_end":12},"name":"Bcm2711","qualname":"::system::SoC::Bcm2711","value":"SoC::Bcm2711","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1960},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221841,"byte_end":221856,"line_start":138,"line_end":138,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::system::SoC::__Nonexhaustive","value":"SoC::__Nonexhaustive","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":" `SoC` might be extended with additional variants in a minor or\n patch revision, and must not be exhaustively matched against.\n Instead, add a `_` catch-all arm to match future variants.\n","sig":null,"attributes":[{"value":"/ `SoC` might be extended with additional variants in a minor or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221614,"byte_end":221680,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ patch revision, and must not be exhaustively matched against.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221685,"byte_end":221750,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ Instead, add a `_` catch-all arm to match future variants.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221755,"byte_end":221817,"line_start":136,"line_end":136,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":1949},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221535,"byte_end":221538,"line_start":128,"line_end":128,"column_start":10,"column_end":13},"name":"SoC","qualname":"::system::SoC","value":"SoC::{Bcm2835, Bcm2836, Bcm2837A1, Bcm2837B0, Bcm2711, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1960}],"decl_id":null,"docs":" Identifiable Raspberry Pi SoCs.","sig":null,"attributes":[{"value":"/ Identifiable Raspberry Pi SoCs.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221245,"byte_end":221280,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221281,"byte_end":221284,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ `SoC` might be extended with additional variants in a minor or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221285,"byte_end":221351,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/ patch revision, and must not be exhaustively matched against.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221352,"byte_end":221417,"line_start":125,"line_end":125,"column_start":1,"column_end":66}},{"value":"/ Instead, add a `_` catch-all arm to match future variants.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221418,"byte_end":221480,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1973},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229183,"byte_end":229193,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"DeviceInfo","qualname":"::system::DeviceInfo","value":"DeviceInfo {  }","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977}],"decl_id":null,"docs":" Retrieves Raspberry Pi device information.\n","sig":null,"attributes":[{"value":"/ Retrieves Raspberry Pi device information.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229080,"byte_end":229126,"line_start":305,"line_end":305,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229567,"byte_end":229570,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"new","qualname":"<DeviceInfo>::new","value":"fn () -> Result<DeviceInfo>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `DeviceInfo`.","sig":null,"attributes":[{"value":"/ Constructs a new `DeviceInfo`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229301,"byte_end":229335,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229340,"byte_end":229343,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ `new` attempts to identify the Raspberry Pi's model and SoC based on","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229348,"byte_end":229420,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ the contents of `/proc/cpuinfo`, `/sys/firmware/devicetree/base/compatible`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229425,"byte_end":229504,"line_start":318,"line_end":318,"column_start":5,"column_end":84}},{"value":"/ and `/sys/firmware/devicetree/base/model`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229509,"byte_end":229555,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":231506,"byte_end":231511,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"model","qualname":"<DeviceInfo>::model","value":"fn (&self) -> Model","parent":null,"children":[],"decl_id":null,"docs":" Returns the Raspberry Pi's model.\n","sig":null,"attributes":[{"value":"/ Returns the Raspberry Pi's model.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":231457,"byte_end":231494,"line_start":370,"line_end":370,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":231607,"byte_end":231610,"line_start":376,"line_end":376,"column_start":12,"column_end":15},"name":"soc","qualname":"<DeviceInfo>::soc","value":"fn (&self) -> SoC","parent":null,"children":[],"decl_id":null,"docs":" Returns the Raspberry Pi's SoC.\n","sig":null,"attributes":[{"value":"/ Returns the Raspberry Pi's SoC.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":231560,"byte_end":231595,"line_start":375,"line_end":375,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":975},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uart","qualname":"::uart","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1004},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1032},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1990},{"krate":0,"index":1999},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":2001},{"krate":0,"index":2021},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2014},{"krate":0,"index":2012},{"krate":0,"index":1184},{"krate":0,"index":2023},{"krate":0,"index":2041},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2034},{"krate":0,"index":2032},{"krate":0,"index":1186},{"krate":0,"index":2043},{"krate":0,"index":2059},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2052},{"krate":0,"index":2050},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1199},{"krate":0,"index":2061},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":1201}],"decl_id":null,"docs":" Interface for the UART peripherals and any USB to serial adapters.","sig":null,"attributes":[{"value":"! Interface for the UART peripherals and any USB to serial adapters.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233085,"byte_end":233155,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233156,"byte_end":233159,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! RPPAL controls the Raspberry Pi's UART peripherals through the `ttyAMA0`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233160,"byte_end":233236,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! (PL011) and `ttyS0` (mini UART) character devices. USB to serial adapters","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233237,"byte_end":233314,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"! are controlled using the `ttyUSBx` and `ttyACMx` character devices.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233315,"byte_end":233386,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233387,"byte_end":233390,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ## UART peripherals","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233391,"byte_end":233414,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233415,"byte_end":233418,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The Raspberry Pi's BCM283x SoC features two UART peripherals.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233419,"byte_end":233484,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"! `/dev/ttyAMA0` represents the PL011 UART, which offers a full set of","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233485,"byte_end":233557,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"! features. `/dev/ttyS0` represents an auxiliary peripheral that's referred","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233558,"byte_end":233635,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"! to as mini UART, with limited capabilities. More details on the differences","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233636,"byte_end":233715,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"! between the PL011 and mini UART can be found in the official Raspberry Pi","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233716,"byte_end":233793,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"! [documentation].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233794,"byte_end":233814,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233815,"byte_end":233818,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! On earlier Raspberry Pi models without Bluetooth, `/dev/ttyAMA0` is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233819,"byte_end":233890,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"! configured as a Linux serial console. On more recent models with Bluetooth","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233891,"byte_end":233969,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"! (3A+, 3B, 3B+, Zero W), `/dev/ttyAMA0` is connected to the Bluetooth","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":233970,"byte_end":234042,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"! module, and `/dev/ttyS0` is used as a serial console instead. Due to the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234043,"byte_end":234119,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"! limitations of `/dev/ttyS0` and the requirement for a fixed core frequency,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234120,"byte_end":234199,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"! in most cases you'll want to use `/dev/ttyAMA0` for serial communication.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234200,"byte_end":234277,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234278,"byte_end":234281,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! By default, TX (outgoing data) is tied to BCM GPIO 14 (physical pin 8) and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234282,"byte_end":234360,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! RX (incoming data) is tied to BCM GPIO 15 (physical pin 10). You can move","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234361,"byte_end":234438,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"! these lines to different GPIO pins using the `uart0` and `uart1` overlays,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234439,"byte_end":234517,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"! but the alternative pin options aren't exposed through the GPIO header on","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234518,"byte_end":234595,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"! any of the current Raspberry Pi models. They are only available on the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234596,"byte_end":234670,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"! Compute Module's SO-DIMM pads.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234671,"byte_end":234705,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234706,"byte_end":234709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! ## Configure `/dev/ttyAMA0` for serial communication (recommended)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234710,"byte_end":234780,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234781,"byte_end":234784,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Disable the Linux serial console by either deactivating it through","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234785,"byte_end":234855,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"! `sudo raspi-config`, or manually removing the parameter","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234856,"byte_end":234915,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"! `console=serial0,115200` from `/boot/cmdline.txt`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234916,"byte_end":234970,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234971,"byte_end":234974,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! Remove any lines containing `enable_uart=0` or `enable_uart=1` from","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":234975,"byte_end":235046,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"! `/boot/config.txt`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235047,"byte_end":235070,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235071,"byte_end":235074,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! On Raspberry Pi models with a Bluetooth module, an extra step is required","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235075,"byte_end":235152,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"! to either disable Bluetooth or move it to `/dev/ttyS0`, so `/dev/ttyAMA0`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235153,"byte_end":235230,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"! becomes available for serial communication.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235231,"byte_end":235278,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235279,"byte_end":235282,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! To disable Bluetooth, add `dtoverlay=pi3-disable-bt` to `/boot/config.txt`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235283,"byte_end":235362,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"! You'll also need to disable the service that initializes Bluetooth with","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235363,"byte_end":235438,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"! `sudo systemctl disable hciuart`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235439,"byte_end":235476,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235477,"byte_end":235480,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! To move the Bluetooth module to `/dev/ttyS0`, instead of disabling it with","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235481,"byte_end":235559,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the above-mentioned steps, add `dtoverlay=pi3-miniuart-bt` and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235560,"byte_end":235626,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"! `core_freq=250` to `/boot/config.txt`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235627,"byte_end":235669,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235670,"byte_end":235673,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! Remember to reboot the Raspberry Pi after making any changes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235674,"byte_end":235739,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235740,"byte_end":235743,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## Configure `/dev/ttyS0` for serial communication","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235744,"byte_end":235798,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235799,"byte_end":235802,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! If you prefer to leave the Bluetooth module connected to `/dev/ttyAMA0`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235803,"byte_end":235879,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"! you can configure `/dev/ttyS0` for serial communication instead.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235880,"byte_end":235948,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235949,"byte_end":235952,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Disable the Linux serial console by either deactivating it through","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":235953,"byte_end":236023,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"! `sudo raspi-config`, or manually removing the parameter","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236024,"byte_end":236083,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"! `console=serial0,115200` from `/boot/cmdline.txt`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236084,"byte_end":236138,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236139,"byte_end":236142,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! Add the line `enable_uart=1` to `/boot/config.txt` to enable serial","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236143,"byte_end":236214,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"! communication on `/dev/ttyS0`, which also sets a fixed core frequency.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236215,"byte_end":236289,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236290,"byte_end":236293,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! Remember to reboot the Raspberry Pi after making any changes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236294,"byte_end":236359,"line_start":85,"line_end":85,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236360,"byte_end":236363,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! ## USB to serial adapters","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236364,"byte_end":236393,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236394,"byte_end":236397,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! In addition to controlling the hardware UART peripherals, [`Uart`] can","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236398,"byte_end":236472,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"! also be used for USB to serial adapters. Depending on the type of","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236473,"byte_end":236542,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"! device, these can be accessed either through `/dev/ttyUSBx` or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236543,"byte_end":236609,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"! `/dev/ttyACMx`, where `x` is an index starting at `0`. The numbering is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236610,"byte_end":236685,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"! based on the order in which the devices are discovered by the kernel.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236686,"byte_end":236759,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236760,"byte_end":236763,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! When you have multiple USB to serial adapters connected at the same time,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236764,"byte_end":236841,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"! you can uniquely identify a specific device by searching for the relevant","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236842,"byte_end":236919,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"! symlink in the `/dev/serial/by-id` directory, or by adding your own","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236920,"byte_end":236991,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"! `udev` rules.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":236992,"byte_end":237009,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237010,"byte_end":237013,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! Support for automatic software (XON/XOFF) and hardware (RTS/CTS) flow","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237014,"byte_end":237087,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"! control for USB to serial adapters depends on the USB interface IC on the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237088,"byte_end":237165,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"! device, and the relevant Linux driver. Some ICs use an older,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237166,"byte_end":237231,"line_start":102,"line_end":102,"column_start":1,"column_end":66}},{"value":"! incompatible RTS/CTS implementation, sometimes referred to as legacy or","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237232,"byte_end":237307,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"! simplex mode, where RTS is used to indicate data is about to be","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237308,"byte_end":237375,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"! transmitted, rather than to request the external device to resume its","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237376,"byte_end":237449,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! transmission.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237450,"byte_end":237467,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237468,"byte_end":237471,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Hardware flow control","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237472,"byte_end":237500,"line_start":108,"line_end":108,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237501,"byte_end":237504,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! The RTS/CTS hardware flow control implementation supported by [`Uart`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237505,"byte_end":237579,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"! and used by the Raspberry Pi's UART peripherals requires RTS on one","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237580,"byte_end":237651,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"! device to be connected to CTS on the other device. The RTS signal is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237652,"byte_end":237724,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"! used to request the other device to pause or resume its transmission.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237725,"byte_end":237798,"line_start":113,"line_end":113,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237799,"byte_end":237802,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! Some devices use an older, incompatible RTS/CTS implementation, sometimes","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237803,"byte_end":237880,"line_start":115,"line_end":115,"column_start":1,"column_end":78}},{"value":"! referred to as legacy or simplex mode, where RTS is connected to RTS, and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237881,"byte_end":237958,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"! CTS to CTS. The RTS signal is used to indicate data is about to be","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":237959,"byte_end":238029,"line_start":117,"line_end":117,"column_start":1,"column_end":71}},{"value":"! transmitted. [`Uart`] is not compatible with this implementation.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238030,"byte_end":238099,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"! Connecting the Raspberry Pi's RTS and CTS pins incorrectly could damage","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238100,"byte_end":238175,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"! the Pi or the external device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238176,"byte_end":238210,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238211,"byte_end":238214,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! When [`Uart`] is controlling a UART peripheral, enabling hardware flow","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238215,"byte_end":238289,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! control will also configure the RTS and CTS pins. On Raspberry Pi models","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238290,"byte_end":238366,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"! with a 40-pin GPIO header, RTS is tied to BCM GPIO 17 (physical pin 11)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238367,"byte_end":238442,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"! and CTS is tied to BCM GPIO 16 (physical pin 36). RTS and CTS aren't","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238443,"byte_end":238515,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"! available on models with a 26-pin header, except for the Raspberry Pi B","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238516,"byte_end":238591,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"! Rev 2, which exposes RTS and CTS through its unpopulated P5 header with","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238592,"byte_end":238667,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"! RTS on BCM GPIO 31 (physical pin 6) and CTS on BCM GPIO 30 (physical pin","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238668,"byte_end":238744,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"! 5).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238745,"byte_end":238752,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238753,"byte_end":238756,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! The RTS and CTS pins are reset to their original state when [`Uart`] goes","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238757,"byte_end":238834,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"! out of scope. Note that `drop` methods aren't called when a process is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238835,"byte_end":238909,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"! abnormally terminated, for instance when a user presses <kbd>Ctrl</kbd> +","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238910,"byte_end":238987,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"! <kbd>C</kbd> and the `SIGINT` signal isn't caught, which prevents [`Uart`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":238988,"byte_end":239066,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"! from resetting the pins. You can catch those using crates such as","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239067,"byte_end":239136,"line_start":135,"line_end":135,"column_start":1,"column_end":70}},{"value":"! [`simple_signal`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239137,"byte_end":239159,"line_start":136,"line_end":136,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239160,"byte_end":239163,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! ## Troubleshooting","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239164,"byte_end":239186,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239187,"byte_end":239190,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! ### Permission denied","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239191,"byte_end":239216,"line_start":140,"line_end":140,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239217,"byte_end":239220,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! If [`new`] or [`with_path`] returns an `io::ErrorKind::PermissionDenied`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239221,"byte_end":239297,"line_start":142,"line_end":142,"column_start":1,"column_end":77}},{"value":"! error, make sure the file permissions for the specified device are correct,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239298,"byte_end":239377,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"! and the current user is a member of the group that owns the device, which is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239378,"byte_end":239458,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"! usually either `dialout` or `tty`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239459,"byte_end":239497,"line_start":145,"line_end":145,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239498,"byte_end":239501,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [documentation]: https://www.raspberrypi.org/documentation/configuration/uart.md","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239502,"byte_end":239586,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"! [`simple_signal`]: https://crates.io/crates/simple-signal","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239587,"byte_end":239648,"line_start":148,"line_end":148,"column_start":1,"column_end":62}},{"value":"! [`Uart`]: struct.Uart.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239649,"byte_end":239679,"line_start":149,"line_end":149,"column_start":1,"column_end":31}},{"value":"! [`new`]: struct.Uart.html#method.new","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239680,"byte_end":239720,"line_start":150,"line_end":150,"column_start":1,"column_end":41}},{"value":"! [`with_path`]: struct.Uart.html#method.with_path","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":239721,"byte_end":239773,"line_start":151,"line_end":151,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1991},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240707,"byte_end":240709,"line_start":190,"line_end":190,"column_start":5,"column_end":7},"name":"Io","qualname":"::uart::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240688,"byte_end":240702,"line_start":189,"line_end":189,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1994},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240746,"byte_end":240750,"line_start":192,"line_end":192,"column_start":5,"column_end":9},"name":"Gpio","qualname":"::uart::Error::Gpio","value":"Error::Gpio(gpio::Error)","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":" GPIO error.\n","sig":null,"attributes":[{"value":"/ GPIO error.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240726,"byte_end":240741,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1997},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240807,"byte_end":240819,"line_start":194,"line_end":194,"column_start":5,"column_end":17},"name":"InvalidValue","qualname":"::uart::Error::InvalidValue","value":"Error::InvalidValue","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":" Invalid or unsupported value.\n","sig":null,"attributes":[{"value":"/ Invalid or unsupported value.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240769,"byte_end":240802,"line_start":193,"line_end":193,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1990},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240676,"byte_end":240681,"line_start":188,"line_end":188,"column_start":10,"column_end":15},"name":"Error","qualname":"::uart::Error","value":"Error::{Io, Gpio, InvalidValue}","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1994},{"krate":0,"index":1997}],"decl_id":null,"docs":" Errors that can occur when accessing the UART peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the UART peripheral.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240588,"byte_end":240649,"line_start":186,"line_end":186,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":1182},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241633,"byte_end":241639,"line_start":228,"line_end":228,"column_start":10,"column_end":16},"name":"Result","qualname":"::uart::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `uart::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `uart::Error`s.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241556,"byte_end":241623,"line_start":227,"line_end":227,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2002},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242043,"byte_end":242047,"line_start":240,"line_end":240,"column_start":5,"column_end":9},"name":"None","qualname":"::uart::Parity::None","value":"Parity::None","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" No parity bit.\n","sig":null,"attributes":[{"value":"/ No parity bit.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242020,"byte_end":242038,"line_start":239,"line_end":239,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2004},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242074,"byte_end":242078,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"Even","qualname":"::uart::Parity::Even","value":"Parity::Even","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" Even parity.\n","sig":null,"attributes":[{"value":"/ Even parity.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242053,"byte_end":242069,"line_start":241,"line_end":241,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2006},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242104,"byte_end":242107,"line_start":244,"line_end":244,"column_start":5,"column_end":8},"name":"Odd","qualname":"::uart::Parity::Odd","value":"Parity::Odd","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" Odd parity.\n","sig":null,"attributes":[{"value":"/ Odd parity.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242084,"byte_end":242099,"line_start":243,"line_end":243,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2008},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242145,"byte_end":242149,"line_start":246,"line_end":246,"column_start":5,"column_end":9},"name":"Mark","qualname":"::uart::Parity::Mark","value":"Parity::Mark","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" Sets parity bit to `1`.\n","sig":null,"attributes":[{"value":"/ Sets parity bit to `1`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242113,"byte_end":242140,"line_start":245,"line_end":245,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2010},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242187,"byte_end":242192,"line_start":248,"line_end":248,"column_start":5,"column_end":10},"name":"Space","qualname":"::uart::Parity::Space","value":"Parity::Space","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" Sets parity bit to `0`.\n","sig":null,"attributes":[{"value":"/ Sets parity bit to `0`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242155,"byte_end":242182,"line_start":247,"line_end":247,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2001},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242007,"byte_end":242013,"line_start":238,"line_end":238,"column_start":10,"column_end":16},"name":"Parity","qualname":"::uart::Parity","value":"Parity::{None, Even, Odd, Mark, Space}","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010}],"decl_id":null,"docs":" Parity bit modes.","sig":null,"attributes":[{"value":"/ Parity bit modes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241672,"byte_end":241693,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241694,"byte_end":241697,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The parity bit mode determines how the parity bit is calculated.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241698,"byte_end":241766,"line_start":232,"line_end":232,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241767,"byte_end":241770,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ `None` omits the parity bit. `Even` and `Odd` count the total number of","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241771,"byte_end":241846,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/ 1-bits in the data bits. `Mark` and `Space` always set the parity","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241847,"byte_end":241916,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ bit to `1` or `0` respectively.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241917,"byte_end":241952,"line_start":236,"line_end":236,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242766,"byte_end":242770,"line_start":269,"line_end":269,"column_start":5,"column_end":9},"name":"None","qualname":"::uart::ParityCheck::None","value":"ParityCheck::None","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Ignores parity errors.\n","sig":null,"attributes":[{"value":"/ Ignores parity errors.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242735,"byte_end":242761,"line_start":268,"line_end":268,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242839,"byte_end":242844,"line_start":271,"line_end":271,"column_start":5,"column_end":10},"name":"Strip","qualname":"::uart::ParityCheck::Strip","value":"ParityCheck::Strip","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Removes bytes with parity errors from the input queue.\n","sig":null,"attributes":[{"value":"/ Removes bytes with parity errors from the input queue.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242776,"byte_end":242834,"line_start":270,"line_end":270,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2028},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242909,"byte_end":242916,"line_start":273,"line_end":273,"column_start":5,"column_end":12},"name":"Replace","qualname":"::uart::ParityCheck::Replace","value":"ParityCheck::Replace","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Replaces bytes with parity errors with a `0` byte.\n","sig":null,"attributes":[{"value":"/ Replaces bytes with parity errors with a `0` byte.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242850,"byte_end":242904,"line_start":272,"line_end":272,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243114,"byte_end":243118,"line_start":278,"line_end":278,"column_start":5,"column_end":9},"name":"Mark","qualname":"::uart::ParityCheck::Mark","value":"ParityCheck::Mark","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Marks bytes with parity errors with a preceding `255` and `0` byte.","sig":null,"attributes":[{"value":"/ Marks bytes with parity errors with a preceding `255` and `0` byte.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242922,"byte_end":242993,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242998,"byte_end":243001,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Actual `255` bytes are replaced with two `255` bytes to avoid confusion","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243006,"byte_end":243081,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ with parity errors.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243086,"byte_end":243109,"line_start":277,"line_end":277,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":2023},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242717,"byte_end":242728,"line_start":267,"line_end":267,"column_start":10,"column_end":21},"name":"ParityCheck","qualname":"::uart::ParityCheck","value":"ParityCheck::{None, Strip, Replace, Mark}","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030}],"decl_id":null,"docs":" Parity check modes.","sig":null,"attributes":[{"value":"/ Parity check modes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242567,"byte_end":242590,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242591,"byte_end":242594,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The parity check mode determines how parity errors are handled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242595,"byte_end":242662,"line_start":265,"line_end":265,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2044},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243583,"byte_end":243588,"line_start":296,"line_end":296,"column_start":5,"column_end":10},"name":"Input","qualname":"::uart::Queue::Input","value":"Queue::Input","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Input queue.\n","sig":null,"attributes":[{"value":"/ Input queue.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243562,"byte_end":243578,"line_start":295,"line_end":295,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2046},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243616,"byte_end":243622,"line_start":298,"line_end":298,"column_start":5,"column_end":11},"name":"Output","qualname":"::uart::Queue::Output","value":"Queue::Output","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Output queue.\n","sig":null,"attributes":[{"value":"/ Output queue.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243594,"byte_end":243611,"line_start":297,"line_end":297,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2048},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243649,"byte_end":243653,"line_start":300,"line_end":300,"column_start":5,"column_end":9},"name":"Both","qualname":"::uart::Queue::Both","value":"Queue::Both","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Both queues.\n","sig":null,"attributes":[{"value":"/ Both queues.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243628,"byte_end":243644,"line_start":299,"line_end":299,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":2043},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243550,"byte_end":243555,"line_start":294,"line_end":294,"column_start":10,"column_end":15},"name":"Queue","qualname":"::uart::Queue","value":"Queue::{Input, Output, Both}","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2048}],"decl_id":null,"docs":" Queue types.\n","sig":null,"attributes":[{"value":"/ Queue types.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243479,"byte_end":243495,"line_start":292,"line_end":292,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243974,"byte_end":243980,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"Status","qualname":"::uart::Status","value":"Status {  }","parent":null,"children":[{"krate":0,"index":1191}],"decl_id":null,"docs":" Control signal status.\n","sig":null,"attributes":[{"value":"/ Control signal status.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243936,"byte_end":243962,"line_start":313,"line_end":313,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244248,"byte_end":244251,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"rts","qualname":"<Status>::rts","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if RTS is active.","sig":null,"attributes":[{"value":"/ Returns `true` if RTS is active.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244022,"byte_end":244058,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244063,"byte_end":244066,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ RTS (active low) is controlled by [`Uart`]. An active signal indicates","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244071,"byte_end":244145,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ [`Uart`] is ready to receive more data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244150,"byte_end":244193,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244198,"byte_end":244201,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`Uart`]: struct.Uart.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244206,"byte_end":244236,"line_start":324,"line_end":324,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244520,"byte_end":244523,"line_start":333,"line_end":333,"column_start":12,"column_end":15},"name":"cts","qualname":"<Status>::cts","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if CTS is active.","sig":null,"attributes":[{"value":"/ Returns `true` if CTS is active.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244315,"byte_end":244351,"line_start":329,"line_end":329,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244356,"byte_end":244359,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ CTS (active low) is controlled by the external device. An active signal","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244364,"byte_end":244439,"line_start":331,"line_end":331,"column_start":5,"column_end":80}},{"value":"/ indicates the external device is ready to receive more data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244444,"byte_end":244508,"line_start":332,"line_end":332,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245085,"byte_end":245088,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"dtr","qualname":"<Status>::dtr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if DTR is active.","sig":null,"attributes":[{"value":"/ Returns `true` if DTR is active.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244587,"byte_end":244623,"line_start":337,"line_end":337,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244628,"byte_end":244631,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ DTR (active low) is controlled by [`Uart`]. When communicating with a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244636,"byte_end":244709,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ modem, an active signal is used to place or accept a call. An inactive","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244714,"byte_end":244788,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/ signal causes the modem to hang up. Other devices may use DTR and DSR","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244793,"byte_end":244866,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/ for flow control.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244871,"byte_end":244892,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244897,"byte_end":244900,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ DTR is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244905,"byte_end":244969,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244974,"byte_end":245030,"line_start":345,"line_end":345,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245035,"byte_end":245038,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`Uart`]: struct.Uart.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245043,"byte_end":245073,"line_start":347,"line_end":347,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245587,"byte_end":245590,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"dsr","qualname":"<Status>::dsr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if DSR is active.","sig":null,"attributes":[{"value":"/ Returns `true` if DSR is active.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245152,"byte_end":245188,"line_start":352,"line_end":352,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245193,"byte_end":245196,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ DSR (active low) is controlled by the external device. When","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245201,"byte_end":245264,"line_start":354,"line_end":354,"column_start":5,"column_end":68}},{"value":"/ communicating with a modem, an active signal indicates the modem is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245269,"byte_end":245340,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ ready for data transmission. Other devices may use DTR and DSR for flow","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245345,"byte_end":245420,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ control.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245425,"byte_end":245437,"line_start":357,"line_end":357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245442,"byte_end":245445,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ DSR is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245450,"byte_end":245514,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245519,"byte_end":245575,"line_start":360,"line_end":360,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246016,"byte_end":246019,"line_start":373,"line_end":373,"column_start":12,"column_end":15},"name":"dcd","qualname":"<Status>::dcd","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if DCD is active.","sig":null,"attributes":[{"value":"/ Returns `true` if DCD is active.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245654,"byte_end":245690,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245695,"byte_end":245698,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ DCD (active low) is controlled by the external device. When","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245703,"byte_end":245766,"line_start":367,"line_end":367,"column_start":5,"column_end":68}},{"value":"/ communicating with a modem, an active signal indicates a connection is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245771,"byte_end":245845,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ established.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245850,"byte_end":245866,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245871,"byte_end":245874,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ DCD is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245879,"byte_end":245943,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":245948,"byte_end":246004,"line_start":372,"line_end":372,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246431,"byte_end":246433,"line_start":385,"line_end":385,"column_start":12,"column_end":14},"name":"ri","qualname":"<Status>::ri","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if RI is active.","sig":null,"attributes":[{"value":"/ Returns `true` if RI is active.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246083,"byte_end":246118,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246123,"byte_end":246126,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ RI (active low) is controlled by the external device. When","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246131,"byte_end":246193,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"/ communicating with a modem, an active signal indicates an incoming","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246198,"byte_end":246268,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ call.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246273,"byte_end":246282,"line_start":381,"line_end":381,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246287,"byte_end":246290,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ RI is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246295,"byte_end":246358,"line_start":383,"line_end":383,"column_start":5,"column_end":68}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246363,"byte_end":246419,"line_start":384,"line_end":384,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2077},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247848,"byte_end":247852,"line_start":431,"line_end":431,"column_start":12,"column_end":16},"name":"Uart","qualname":"::uart::Uart","value":"Uart {  }","parent":null,"children":[{"krate":0,"index":2078}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's UART peripherals and any USB to\n serial adapters.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's UART peripherals and any USB to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247261,"byte_end":247334,"line_start":420,"line_end":420,"column_start":1,"column_end":74}},{"value":"/ serial adapters.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247335,"byte_end":247355,"line_start":421,"line_end":421,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247356,"byte_end":247359,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`serial::Read`], [`serial::Write`] and [`blocking::serial::Write`] trait","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247360,"byte_end":247456,"line_start":423,"line_end":423,"column_start":1,"column_end":97}},{"value":"/ implementations for `Uart` can be enabled by specifying the optional `hal` feature in the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247457,"byte_end":247550,"line_start":424,"line_end":424,"column_start":1,"column_end":94}},{"value":"/ dependency declaration for the `rppal` crate.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247551,"byte_end":247600,"line_start":425,"line_end":425,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247601,"byte_end":247604,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ [`serial::Read`]: ../../embedded_hal/serial/trait.Read.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247605,"byte_end":247668,"line_start":427,"line_end":427,"column_start":1,"column_end":64}},{"value":"/ [`serial::Write`]: ../../embedded_hal/serial/trait.Write.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247669,"byte_end":247734,"line_start":428,"line_end":428,"column_start":1,"column_end":66}},{"value":"/ [`blocking::serial::Write`]: ../../embedded_hal/blocking/serial/trait.Write.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247735,"byte_end":247819,"line_start":429,"line_end":429,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248147,"byte_end":248150,"line_start":442,"line_end":442,"column_start":12,"column_end":15},"name":"new","qualname":"<Uart>::new","value":"fn (baud_rate: u32, parity: Parity, data_bits: u8, stop_bits: u8) -> Result<Uart>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Uart`.","sig":null,"attributes":[{"value":"/ Constructs a new `Uart`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247896,"byte_end":247924,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247929,"byte_end":247932,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ `new` attempts to identify the UART peripheral tied to BCM GPIO 14 and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247937,"byte_end":248011,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ 15, and then calls [`with_path`] with the appropriate device path.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248016,"byte_end":248086,"line_start":439,"line_end":439,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248091,"byte_end":248094,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`with_path`]: #method.with_path","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248099,"byte_end":248135,"line_start":441,"line_end":441,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248896,"byte_end":248905,"line_start":457,"line_end":457,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Uart>::with_path","value":"fn <P> (path: P, baud_rate: u32, parity: Parity, data_bits: u8, stop_bits: u8) -> Result<Uart>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Uart` connected to the serial character device\n specified by `path`.","sig":null,"attributes":[{"value":"/ Constructs a new `Uart` connected to the serial character device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248323,"byte_end":248391,"line_start":446,"line_end":446,"column_start":5,"column_end":73}},{"value":"/ specified by `path`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248396,"byte_end":248420,"line_start":447,"line_end":447,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248425,"byte_end":248428,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ `with_path` can be used to connect to either a UART peripheral or a USB","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248433,"byte_end":248508,"line_start":449,"line_end":449,"column_start":5,"column_end":80}},{"value":"/ to serial adapter.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248513,"byte_end":248535,"line_start":450,"line_end":450,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248540,"byte_end":248543,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ When a new `Uart` is constructed, the specified device is configured","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248548,"byte_end":248620,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ for non-canonical mode which processes input per character, ignores any","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248625,"byte_end":248700,"line_start":453,"line_end":453,"column_start":5,"column_end":80}},{"value":"/ special terminal input or output characters and disables local echo. DCD","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248705,"byte_end":248781,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/ is ignored, all flow control is disabled, and the input and output queues","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248786,"byte_end":248863,"line_start":455,"line_end":455,"column_start":5,"column_end":82}},{"value":"/ are flushed.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":248868,"byte_end":248884,"line_start":456,"line_end":456,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251380,"byte_end":251389,"line_start":537,"line_end":537,"column_start":12,"column_end":21},"name":"baud_rate","qualname":"<Uart>::baud_rate","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the line speed in baud (Bd).\n","sig":null,"attributes":[{"value":"/ Returns the line speed in baud (Bd).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251328,"byte_end":251368,"line_start":536,"line_end":536,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252046,"byte_end":252059,"line_start":554,"line_end":554,"column_start":12,"column_end":25},"name":"set_baud_rate","qualname":"<Uart>::set_baud_rate","value":"fn (&mut self, baud_rate: u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the line speed in baud (Bd).","sig":null,"attributes":[{"value":"/ Sets the line speed in baud (Bd).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251446,"byte_end":251483,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251488,"byte_end":251491,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ On the Raspberry Pi, baud rate is equivalent to bit rate in bits per","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251496,"byte_end":251568,"line_start":543,"line_end":543,"column_start":5,"column_end":77}},{"value":"/ second (bit/s).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251573,"byte_end":251592,"line_start":544,"line_end":544,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251597,"byte_end":251600,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Accepted values:","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251605,"byte_end":251625,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/ `0`, `50`, `75`, `110`, `134`, `150`, `200`, `300`, `600`, `1_200`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251630,"byte_end":251701,"line_start":547,"line_end":547,"column_start":5,"column_end":76}},{"value":"/ `1_800`, `2_400`, `4_800`, `9_600`, `19_200`, `38_400`, `57_600`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251706,"byte_end":251775,"line_start":548,"line_end":548,"column_start":5,"column_end":74}},{"value":"/ `115_200`, `230_400`, `460_800`, `500_000`, `576_000`, `921_600`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251780,"byte_end":251849,"line_start":549,"line_end":549,"column_start":5,"column_end":74}},{"value":"/ `1_000_000`, `1_152_000`, `1_500_000`, `2_000_000`, `2_500_000`,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251854,"byte_end":251922,"line_start":550,"line_end":550,"column_start":5,"column_end":73}},{"value":"/ `3_000_000`, `3_500_000`, `4_000_000`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251927,"byte_end":251969,"line_start":551,"line_end":551,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251974,"byte_end":251977,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Support for some values may be device-dependent.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":251982,"byte_end":252034,"line_start":553,"line_end":553,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252277,"byte_end":252283,"line_start":563,"line_end":563,"column_start":12,"column_end":18},"name":"parity","qualname":"<Uart>::parity","value":"fn (&self) -> Parity","parent":null,"children":[],"decl_id":null,"docs":" Returns the parity bit mode.\n","sig":null,"attributes":[{"value":"/ Returns the parity bit mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252233,"byte_end":252265,"line_start":562,"line_end":562,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252526,"byte_end":252536,"line_start":572,"line_end":572,"column_start":12,"column_end":22},"name":"set_parity","qualname":"<Uart>::set_parity","value":"fn (&mut self, parity: Parity) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the parity bit mode.","sig":null,"attributes":[{"value":"/ Sets the parity bit mode.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252340,"byte_end":252369,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252374,"byte_end":252377,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The parity bit mode determines how the parity bit is calculated.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252382,"byte_end":252450,"line_start":569,"line_end":569,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252455,"byte_end":252458,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Support for some modes may be device-dependent.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252463,"byte_end":252514,"line_start":571,"line_end":571,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252761,"byte_end":252773,"line_start":581,"line_end":581,"column_start":12,"column_end":24},"name":"parity_check","qualname":"<Uart>::parity_check","value":"fn (&self) -> ParityCheck","parent":null,"children":[],"decl_id":null,"docs":" Returns the parity check mode for incoming data.\n","sig":null,"attributes":[{"value":"/ Returns the parity check mode for incoming data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252697,"byte_end":252749,"line_start":580,"line_end":580,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253170,"byte_end":253186,"line_start":594,"line_end":594,"column_start":12,"column_end":28},"name":"set_parity_check","qualname":"<Uart>::set_parity_check","value":"fn (&mut self, parity_check: ParityCheck) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configures parity checking for incoming data.","sig":null,"attributes":[{"value":"/ Configures parity checking for incoming data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252841,"byte_end":252890,"line_start":585,"line_end":585,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252895,"byte_end":252898,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The parity check mode determines how parity errors are handled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252903,"byte_end":252970,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252975,"byte_end":252978,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ By default, `parity_check` is set to [`None`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":252983,"byte_end":253033,"line_start":589,"line_end":589,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253038,"byte_end":253041,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Support for some modes may be device-dependent.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253046,"byte_end":253097,"line_start":591,"line_end":591,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253102,"byte_end":253105,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ [`None`]: enum.ParityCheck.html#variant.None","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253110,"byte_end":253158,"line_start":593,"line_end":593,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253430,"byte_end":253439,"line_start":603,"line_end":603,"column_start":12,"column_end":21},"name":"data_bits","qualname":"<Uart>::data_bits","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of data bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of data bits.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253382,"byte_end":253418,"line_start":602,"line_end":602,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253658,"byte_end":253671,"line_start":612,"line_end":612,"column_start":12,"column_end":25},"name":"set_data_bits","qualname":"<Uart>::set_data_bits","value":"fn (&mut self, data_bits: u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of data bits.","sig":null,"attributes":[{"value":"/ Sets the number of data bits.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253495,"byte_end":253528,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253533,"byte_end":253536,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Accepted values: `5`, `6`, `7`, `8`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253541,"byte_end":253581,"line_start":609,"line_end":609,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253586,"byte_end":253589,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Support for some values may be device-dependent.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253594,"byte_end":253646,"line_start":611,"line_end":611,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253891,"byte_end":253900,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"stop_bits","qualname":"<Uart>::stop_bits","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of stop bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of stop bits.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253843,"byte_end":253879,"line_start":620,"line_end":620,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254109,"byte_end":254122,"line_start":630,"line_end":630,"column_start":12,"column_end":25},"name":"set_stop_bits","qualname":"<Uart>::set_stop_bits","value":"fn (&mut self, stop_bits: u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of stop bits.","sig":null,"attributes":[{"value":"/ Sets the number of stop bits.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253956,"byte_end":253989,"line_start":625,"line_end":625,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":253994,"byte_end":253997,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Accepted values: `1`, `2`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254002,"byte_end":254032,"line_start":627,"line_end":627,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254037,"byte_end":254040,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Support for some values may be device-dependent.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254045,"byte_end":254097,"line_start":629,"line_end":629,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254352,"byte_end":254358,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"name":"status","qualname":"<Uart>::status","value":"fn (&self) -> Result<Status>","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of the control signals.\n","sig":null,"attributes":[{"value":"/ Returns the status of the control signals.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254294,"byte_end":254340,"line_start":638,"line_end":638,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254684,"byte_end":254691,"line_start":649,"line_end":649,"column_start":12,"column_end":19},"name":"set_dtr","qualname":"<Uart>::set_dtr","value":"fn (&mut self, dtr: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets DTR to active (`true`) or inactive (`false`).","sig":null,"attributes":[{"value":"/ Sets DTR to active (`true`) or inactive (`false`).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254480,"byte_end":254534,"line_start":645,"line_end":645,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254539,"byte_end":254542,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ DTR is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254547,"byte_end":254611,"line_start":647,"line_end":647,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254616,"byte_end":254672,"line_start":648,"line_end":648,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254852,"byte_end":254859,"line_start":654,"line_end":654,"column_start":12,"column_end":19},"name":"set_rts","qualname":"<Uart>::set_rts","value":"fn (&mut self, rts: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets RTS to active (`true`) or inactive (`false`).\n","sig":null,"attributes":[{"value":"/ Sets RTS to active (`true`) or inactive (`false`).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254786,"byte_end":254840,"line_start":653,"line_end":653,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255030,"byte_end":255051,"line_start":659,"line_end":659,"column_start":12,"column_end":33},"name":"software_flow_control","qualname":"<Uart>::software_flow_control","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if XON/XOFF software flow control is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if XON/XOFF software flow control is enabled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":254954,"byte_end":255018,"line_start":658,"line_end":658,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256287,"byte_end":256312,"line_start":686,"line_end":686,"column_start":12,"column_end":37},"name":"set_software_flow_control","qualname":"<Uart>::set_software_flow_control","value":"fn (&mut self, software_flow_control: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables XON/XOFF software flow control.","sig":null,"attributes":[{"value":"/ Enables or disables XON/XOFF software flow control.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255121,"byte_end":255176,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255181,"byte_end":255184,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ When software flow control is enabled, incoming XON (decimal 17) and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255189,"byte_end":255261,"line_start":665,"line_end":665,"column_start":5,"column_end":77}},{"value":"/ XOFF (decimal 19) control characters are filtered from the input queue.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255266,"byte_end":255341,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ When XOFF is received, the transmission of data in the output queue is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255346,"byte_end":255420,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/ paused until the external device sends XON. XOFF is automatically sent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255425,"byte_end":255499,"line_start":668,"line_end":668,"column_start":5,"column_end":79}},{"value":"/ to the external device to prevent the input queue from overflowing.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255504,"byte_end":255575,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/ XON is sent when the input queue is ready for more data. You can also","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255580,"byte_end":255653,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/ manually send these control characters by calling [`send_stop`] and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255658,"byte_end":255729,"line_start":671,"line_end":671,"column_start":5,"column_end":76}},{"value":"/ [`send_start`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255734,"byte_end":255753,"line_start":672,"line_end":672,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255758,"byte_end":255761,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ By default, software flow control is disabled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255766,"byte_end":255816,"line_start":674,"line_end":674,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255821,"byte_end":255824,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Support for XON/XOFF software flow control is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255829,"byte_end":255878,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/ device-dependent. You can manually implement XON/XOFF by disabling","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255883,"byte_end":255953,"line_start":677,"line_end":677,"column_start":5,"column_end":75}},{"value":"/ software flow control, parsing incoming XON/XOFF control characters","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":255958,"byte_end":256029,"line_start":678,"line_end":678,"column_start":5,"column_end":76}},{"value":"/ received with [`read`], and sending XON/XOFF when needed using","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256034,"byte_end":256100,"line_start":679,"line_end":679,"column_start":5,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256105,"byte_end":256119,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256124,"byte_end":256127,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`send_start`]: #method.send_start","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256132,"byte_end":256170,"line_start":682,"line_end":682,"column_start":5,"column_end":43}},{"value":"/ [`send_stop`]: #method.send_stop","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256175,"byte_end":256211,"line_start":683,"line_end":683,"column_start":5,"column_end":41}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256216,"byte_end":256242,"line_start":684,"line_end":684,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256247,"byte_end":256275,"line_start":685,"line_end":685,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256691,"byte_end":256712,"line_start":699,"line_end":699,"column_start":12,"column_end":33},"name":"hardware_flow_control","qualname":"<Uart>::hardware_flow_control","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if RTS/CTS hardware flow control is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if RTS/CTS hardware flow control is enabled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256616,"byte_end":256679,"line_start":698,"line_end":698,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":258213,"byte_end":258238,"line_start":731,"line_end":731,"column_start":12,"column_end":37},"name":"set_hardware_flow_control","qualname":"<Uart>::set_hardware_flow_control","value":"fn (&mut self, hardware_flow_control: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables RTS/CTS hardware flow control.","sig":null,"attributes":[{"value":"/ Enables or disables RTS/CTS hardware flow control.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256782,"byte_end":256836,"line_start":703,"line_end":703,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256841,"byte_end":256844,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ When hardware flow control is enabled, the RTS line (active low) is","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256849,"byte_end":256920,"line_start":705,"line_end":705,"column_start":5,"column_end":76}},{"value":"/ automatically driven high to prevent the input queue from overflowing,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":256925,"byte_end":256999,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ and driven low when the input queue is ready for more data. When the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257004,"byte_end":257076,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/ CTS line (active low) is driven high by the external device, all data","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257081,"byte_end":257154,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ in the output queue is held until CTS is driven low. You can also","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257159,"byte_end":257228,"line_start":709,"line_end":709,"column_start":5,"column_end":74}},{"value":"/ manually change the active state of RTS by calling [`send_stop`] and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257233,"byte_end":257305,"line_start":710,"line_end":710,"column_start":5,"column_end":77}},{"value":"/ [`send_start`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257310,"byte_end":257329,"line_start":711,"line_end":711,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257334,"byte_end":257337,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ When `Uart` is controlling a UART peripheral, enabling hardware flow","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257342,"byte_end":257414,"line_start":713,"line_end":713,"column_start":5,"column_end":77}},{"value":"/ control will also configure the RTS and CTS pins.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257419,"byte_end":257472,"line_start":714,"line_end":714,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257477,"byte_end":257480,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ More information on hardware flow control can be found [here].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257485,"byte_end":257551,"line_start":716,"line_end":716,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257556,"byte_end":257559,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ By default, hardware flow control is disabled.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257564,"byte_end":257614,"line_start":718,"line_end":718,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257619,"byte_end":257622,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ Support for RTS/CTS hardware flow control is device-dependent. You can","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257627,"byte_end":257701,"line_start":720,"line_end":720,"column_start":5,"column_end":79}},{"value":"/ manually implement RTS/CTS using [`cts`], [`send_stop`] and","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257706,"byte_end":257769,"line_start":721,"line_end":721,"column_start":5,"column_end":68}},{"value":"/ [`send_start`], or by disabling hardware flow control and configuring","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257774,"byte_end":257847,"line_start":722,"line_end":722,"column_start":5,"column_end":78}},{"value":"/ an [`OutputPin`] for RTS and an [`InputPin`] for CTS.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257852,"byte_end":257909,"line_start":723,"line_end":723,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257914,"byte_end":257917,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#hardware-flow-control","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257922,"byte_end":257966,"line_start":725,"line_end":725,"column_start":5,"column_end":49}},{"value":"/ [`cts`]: struct.Status.html#method.cts","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":257971,"byte_end":258013,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/ [`send_start`]: #method.send_start","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":258018,"byte_end":258056,"line_start":727,"line_end":727,"column_start":5,"column_end":43}},{"value":"/ [`send_stop`]: #method.send_stop","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":258061,"byte_end":258097,"line_start":728,"line_end":728,"column_start":5,"column_end":41}},{"value":"/ [`OutputPin`]: ../gpio/struct.OutputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":258102,"byte_end":258150,"line_start":729,"line_end":729,"column_start":5,"column_end":53}},{"value":"/ [`InputPin`]: ../gpio/struct.InputPin.html","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":258155,"byte_end":258201,"line_start":730,"line_end":730,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259856,"byte_end":259865,"line_start":770,"line_end":770,"column_start":12,"column_end":21},"name":"send_stop","qualname":"<Uart>::send_stop","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Requests the external device to pause its transmission using flow control.","sig":null,"attributes":[{"value":"/ Requests the external device to pause its transmission using flow control.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259554,"byte_end":259632,"line_start":763,"line_end":763,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259637,"byte_end":259640,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If software flow control is enabled, `send_stop`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259645,"byte_end":259697,"line_start":765,"line_end":765,"column_start":5,"column_end":57}},{"value":"/ sends the XOFF control character.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259702,"byte_end":259739,"line_start":766,"line_end":766,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259744,"byte_end":259747,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ If hardware flow control is enabled, `send_stop` sets RTS to its","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259752,"byte_end":259820,"line_start":768,"line_end":768,"column_start":5,"column_end":73}},{"value":"/ inactive state.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":259825,"byte_end":259844,"line_start":769,"line_end":769,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260432,"byte_end":260442,"line_start":789,"line_end":789,"column_start":12,"column_end":22},"name":"send_start","qualname":"<Uart>::send_start","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Requests the external device to resume its transmission using flow control.","sig":null,"attributes":[{"value":"/ Requests the external device to resume its transmission using flow control.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260130,"byte_end":260209,"line_start":782,"line_end":782,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260214,"byte_end":260217,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ If software flow control is enabled, `send_start`","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260222,"byte_end":260275,"line_start":784,"line_end":784,"column_start":5,"column_end":58}},{"value":"/ sends the XON control character.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260280,"byte_end":260316,"line_start":785,"line_end":785,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260321,"byte_end":260324,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ If hardware flow control is enabled, `send_start` sets RTS to its","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260329,"byte_end":260398,"line_start":787,"line_end":787,"column_start":5,"column_end":74}},{"value":"/ active state.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260403,"byte_end":260420,"line_start":788,"line_end":788,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260825,"byte_end":260841,"line_start":804,"line_end":804,"column_start":12,"column_end":28},"name":"is_read_blocking","qualname":"<Uart>::is_read_blocking","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [`read`] is configured to block when needed.","sig":null,"attributes":[{"value":"/ Returns `true` if [`read`] is configured to block when needed.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260707,"byte_end":260773,"line_start":801,"line_end":801,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260778,"byte_end":260781,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260786,"byte_end":260813,"line_start":803,"line_end":803,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261023,"byte_end":261040,"line_start":811,"line_end":811,"column_start":12,"column_end":29},"name":"is_write_blocking","qualname":"<Uart>::is_write_blocking","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [`write`] is configured to block when needed.","sig":null,"attributes":[{"value":"/ Returns `true` if [`write`] is configured to block when needed.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260903,"byte_end":260970,"line_start":808,"line_end":808,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260975,"byte_end":260978,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":260983,"byte_end":261011,"line_start":810,"line_end":810,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262737,"byte_end":262750,"line_start":847,"line_end":847,"column_start":12,"column_end":25},"name":"set_read_mode","qualname":"<Uart>::set_read_mode","value":"fn (&mut self, min_length: u8, timeout: Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blocking mode for subsequent calls to [`read`].","sig":null,"attributes":[{"value":"/ Sets the blocking mode for subsequent calls to [`read`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261103,"byte_end":261163,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261168,"byte_end":261171,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `min_length` indicates the minimum number of requested bytes. This","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261176,"byte_end":261246,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ value may differ from the actual buffer length. Maximum value: 255","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261251,"byte_end":261321,"line_start":818,"line_end":818,"column_start":5,"column_end":75}},{"value":"/ bytes.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261326,"byte_end":261336,"line_start":819,"line_end":819,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261341,"byte_end":261344,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ `timeout` indicates how long [`read`] blocks while waiting for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261349,"byte_end":261415,"line_start":821,"line_end":821,"column_start":5,"column_end":71}},{"value":"/ incoming data. `timeout` uses a 0.1 second resolution. Maximum","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261420,"byte_end":261486,"line_start":822,"line_end":822,"column_start":5,"column_end":71}},{"value":"/ value: 25.5 seconds.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261491,"byte_end":261515,"line_start":823,"line_end":823,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261520,"byte_end":261523,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ [`read`] operates in one of four modes, depending on the specified","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261528,"byte_end":261598,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/ `min_length` and `timeout` values:","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261603,"byte_end":261641,"line_start":826,"line_end":826,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261646,"byte_end":261649,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ * **Non-blocking read** (`min_length` = 0, `timeout` = 0). [`read`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261654,"byte_end":261725,"line_start":828,"line_end":828,"column_start":5,"column_end":76}},{"value":"/ retrieves any available data and returns immediately.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261730,"byte_end":261787,"line_start":829,"line_end":829,"column_start":5,"column_end":62}},{"value":"/ * **Blocking read** (`min_length` > 0, `timeout` = 0). [`read`] blocks","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261792,"byte_end":261866,"line_start":830,"line_end":830,"column_start":5,"column_end":79}},{"value":"/ until at least `min_length` bytes are available, or the provided buffer","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261871,"byte_end":261946,"line_start":831,"line_end":831,"column_start":5,"column_end":80}},{"value":"/ is full.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261951,"byte_end":261963,"line_start":832,"line_end":832,"column_start":5,"column_end":17}},{"value":"/ * **Read with timeout** (`min_length` = 0, `timeout` > 0). [`read`]","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":261968,"byte_end":262039,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"/ blocks until at least one byte is available, or the `timeout` duration","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262044,"byte_end":262118,"line_start":834,"line_end":834,"column_start":5,"column_end":79}},{"value":"/ elapses.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262123,"byte_end":262135,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/ * **Read with inter-byte timeout** (`min_length` > 0, `timeout` > 0).","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262140,"byte_end":262213,"line_start":836,"line_end":836,"column_start":5,"column_end":78}},{"value":"/ [`read`] blocks until at least `min_length` bytes are available, the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262218,"byte_end":262290,"line_start":837,"line_end":837,"column_start":5,"column_end":77}},{"value":"/ provided buffer is full, or the `timeout` duration elapses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262295,"byte_end":262357,"line_start":838,"line_end":838,"column_start":5,"column_end":67}},{"value":"/ after receiving one or more bytes. The timer is started after an","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262362,"byte_end":262430,"line_start":839,"line_end":839,"column_start":5,"column_end":73}},{"value":"/ initial byte becomes available, and is restarted after each additional","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262435,"byte_end":262509,"line_start":840,"line_end":840,"column_start":5,"column_end":79}},{"value":"/ byte. That means [`read`] will block indefinitely until at least one","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262514,"byte_end":262586,"line_start":841,"line_end":841,"column_start":5,"column_end":77}},{"value":"/ byte has been received.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262591,"byte_end":262618,"line_start":842,"line_end":842,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262623,"byte_end":262626,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ By default, [`read`] is configured as non-blocking.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262631,"byte_end":262686,"line_start":844,"line_end":844,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262691,"byte_end":262694,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":262699,"byte_end":262725,"line_start":846,"line_end":846,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264372,"byte_end":264386,"line_start":885,"line_end":885,"column_start":12,"column_end":26},"name":"set_write_mode","qualname":"<Uart>::set_write_mode","value":"fn (&mut self, blocking: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blocking mode for subsequent calls to [`write`].","sig":null,"attributes":[{"value":"/ Sets the blocking mode for subsequent calls to [`write`].","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263551,"byte_end":263612,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263617,"byte_end":263620,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ [`write`] operates in one of two modes, depending on the specified","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263625,"byte_end":263695,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ `blocking` value:","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263700,"byte_end":263721,"line_start":872,"line_end":872,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263726,"byte_end":263729,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ * **Non-blocking write**. [`write`] returns immediately after","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263734,"byte_end":263799,"line_start":874,"line_end":874,"column_start":5,"column_end":70}},{"value":"/ copying as much of the contents of the provided buffer to the output queue","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263804,"byte_end":263882,"line_start":875,"line_end":875,"column_start":5,"column_end":83}},{"value":"/ as it's able to fit.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263887,"byte_end":263911,"line_start":876,"line_end":876,"column_start":5,"column_end":29}},{"value":"/ * **Blocking write**. [`write`] blocks until the entire contents of the provided buffer","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":263916,"byte_end":264007,"line_start":877,"line_end":877,"column_start":5,"column_end":96}},{"value":"/ can be copied to the output queue. If flow control is enabled and the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264012,"byte_end":264085,"line_start":878,"line_end":878,"column_start":5,"column_end":78}},{"value":"/ external device has sent a stop request, the transmission of any waiting data","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264090,"byte_end":264171,"line_start":879,"line_end":879,"column_start":5,"column_end":86}},{"value":"/ in the output queue is paused until a start request has been received.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264176,"byte_end":264250,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264255,"byte_end":264258,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ By default, [`write`] is configured as non-blocking.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264263,"byte_end":264319,"line_start":882,"line_end":882,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264324,"byte_end":264327,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":264332,"byte_end":264360,"line_start":884,"line_end":884,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265137,"byte_end":265146,"line_start":906,"line_end":906,"column_start":12,"column_end":21},"name":"input_len","qualname":"<Uart>::input_len","value":"fn (&self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes waiting in the input queue.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes waiting in the input queue.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265066,"byte_end":265125,"line_start":905,"line_end":905,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265298,"byte_end":265308,"line_start":911,"line_end":911,"column_start":12,"column_end":22},"name":"output_len","qualname":"<Uart>::output_len","value":"fn (&self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes waiting in the output queue.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes waiting in the output queue.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265226,"byte_end":265286,"line_start":910,"line_end":910,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265787,"byte_end":265791,"line_start":925,"line_end":925,"column_start":12,"column_end":16},"name":"read","qualname":"<Uart>::read","value":"fn (&mut self, buffer: &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives incoming data from the external device and stores it in\n `buffer`.","sig":null,"attributes":[{"value":"/ Receives incoming data from the external device and stores it in","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265389,"byte_end":265457,"line_start":915,"line_end":915,"column_start":5,"column_end":73}},{"value":"/ `buffer`.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265462,"byte_end":265475,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265480,"byte_end":265483,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ `read` operates in one of four (non)blocking modes, depending on the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265488,"byte_end":265560,"line_start":918,"line_end":918,"column_start":5,"column_end":77}},{"value":"/ settings configured by [`set_read_mode`]. By default, `read` is configured","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265565,"byte_end":265643,"line_start":919,"line_end":919,"column_start":5,"column_end":83}},{"value":"/ as non-blocking.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265648,"byte_end":265668,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265673,"byte_end":265676,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265681,"byte_end":265718,"line_start":922,"line_end":922,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265723,"byte_end":265726,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ [`set_read_mode`]: #method.set_read_mode","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":265731,"byte_end":265775,"line_start":924,"line_end":924,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266445,"byte_end":266450,"line_start":944,"line_end":944,"column_start":12,"column_end":17},"name":"write","qualname":"<Uart>::write","value":"fn (&mut self, buffer: &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends the contents of `buffer` to the external device.","sig":null,"attributes":[{"value":"/ Sends the contents of `buffer` to the external device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266062,"byte_end":266120,"line_start":935,"line_end":935,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266125,"byte_end":266128,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ `write` operates in either blocking or non-blocking mode, depending on the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266133,"byte_end":266211,"line_start":937,"line_end":937,"column_start":5,"column_end":83}},{"value":"/ settings configured by [`set_write_mode`]. By default, `write` is configured","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266216,"byte_end":266296,"line_start":938,"line_end":938,"column_start":5,"column_end":85}},{"value":"/ as non-blocking.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266301,"byte_end":266321,"line_start":939,"line_end":939,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266326,"byte_end":266329,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were written.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266334,"byte_end":266374,"line_start":941,"line_end":941,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266379,"byte_end":266382,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ [`set_write_mode`]: #method.set_write_mode","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":266387,"byte_end":266433,"line_start":943,"line_end":943,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":267403,"byte_end":267408,"line_start":972,"line_end":972,"column_start":12,"column_end":17},"name":"drain","qualname":"<Uart>::drain","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Blocks until all data in the output queue has been transmitted.\n","sig":null,"attributes":[{"value":"/ Blocks until all data in the output queue has been transmitted.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":267324,"byte_end":267391,"line_start":971,"line_end":971,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":267548,"byte_end":267553,"line_start":977,"line_end":977,"column_start":12,"column_end":17},"name":"flush","qualname":"<Uart>::flush","value":"fn (&self, queue_type: Queue) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Discards all data in the input and/or output queue.\n","sig":null,"attributes":[{"value":"/ Discards all data in the input and/or output queue.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":267481,"byte_end":267536,"line_start":976,"line_end":976,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":23151,"byte_end":23158,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":23592,"byte_end":23599,"line_start":62,"line_end":62,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":23756,"byte_end":23761,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":25265,"byte_end":25270,"line_start":129,"line_end":129,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":26603,"byte_end":26612,"line_start":26,"line_end":26,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":26785,"byte_end":26790,"line_start":36,"line_end":36,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":26943,"byte_end":26952,"line_start":46,"line_end":46,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":27532,"byte_end":27537,"line_start":74,"line_end":74,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":29649,"byte_end":29658,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":30899,"byte_end":30908,"line_start":96,"line_end":96,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":31250,"byte_end":31259,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":36410,"byte_end":36424,"line_start":260,"line_end":260,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":38302,"byte_end":38316,"line_start":318,"line_end":318,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":42460,"byte_end":42468,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":42821,"byte_end":42829,"line_start":109,"line_end":109,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":43495,"byte_end":43503,"line_start":134,"line_end":134,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":43728,"byte_end":43736,"line_start":145,"line_end":145,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":44553,"byte_end":44566,"line_start":173,"line_end":173,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":46723,"byte_end":46736,"line_start":246,"line_end":246,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":46815,"byte_end":46828,"line_start":252,"line_end":252,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":47560,"byte_end":47570,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":47706,"byte_end":47716,"line_start":285,"line_end":285,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":48260,"byte_end":48272,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":49327,"byte_end":49339,"line_start":341,"line_end":341,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":49418,"byte_end":49430,"line_start":347,"line_end":347,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":50035,"byte_end":50044,"line_start":369,"line_end":369,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":50841,"byte_end":50846,"line_start":402,"line_end":402,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":54985,"byte_end":54992,"line_start":55,"line_end":55,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":55228,"byte_end":55235,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":61826,"byte_end":61833,"line_start":257,"line_end":257,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":62063,"byte_end":62070,"line_start":266,"line_end":266,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":62095,"byte_end":62102,"line_start":267,"line_end":267,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72120,"byte_end":72123,"line_start":288,"line_end":288,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75486,"byte_end":75489,"line_start":399,"line_end":399,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76797,"byte_end":76805,"line_start":436,"line_end":436,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":1337},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83058,"byte_end":83067,"line_start":599,"line_end":599,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":1360},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86214,"byte_end":86219,"line_start":692,"line_end":692,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":1392},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/soft_pwm.rs","byte_start":89747,"byte_end":89754,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/soft_pwm.rs","byte_start":94796,"byte_end":94803,"line_start":193,"line_end":193,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/soft_pwm.rs","byte_start":95321,"byte_end":95328,"line_start":206,"line_end":206,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12774,"byte_end":12779,"line_start":201,"line_end":201,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13292,"byte_end":13297,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13327,"byte_end":13332,"line_start":215,"line_end":215,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13435,"byte_end":13440,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13907,"byte_end":13911,"line_start":244,"line_end":244,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14526,"byte_end":14531,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14741,"byte_end":14746,"line_start":276,"line_end":276,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15117,"byte_end":15127,"line_start":295,"line_end":295,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15593,"byte_end":15600,"line_start":314,"line_end":314,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":16220,"byte_end":16229,"line_start":334,"line_end":334,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":17023,"byte_end":17027,"line_start":358,"line_end":358,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97566,"byte_end":97571,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97683,"byte_end":97688,"line_start":47,"line_end":47,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97820,"byte_end":97825,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97958,"byte_end":97963,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98096,"byte_end":98101,"line_start":65,"line_end":65,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98222,"byte_end":98227,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98359,"byte_end":98364,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98497,"byte_end":98502,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98635,"byte_end":98640,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98846,"byte_end":98854,"line_start":98,"line_end":98,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99233,"byte_end":99238,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99434,"byte_end":99439,"line_start":125,"line_end":125,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99518,"byte_end":99523,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/hal.rs","byte_start":127785,"byte_end":127788,"line_start":25,"line_end":25,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/hal.rs","byte_start":128009,"byte_end":128012,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/hal.rs","byte_start":128242,"byte_end":128245,"line_start":47,"line_end":47,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131195,"byte_end":131207,"line_start":66,"line_end":66,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134521,"byte_end":134533,"line_start":174,"line_end":174,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":137564,"byte_end":137575,"line_start":245,"line_end":245,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105877,"byte_end":105882,"line_start":138,"line_end":138,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106342,"byte_end":106347,"line_start":149,"line_end":149,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106377,"byte_end":106382,"line_start":151,"line_end":151,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106485,"byte_end":106490,"line_start":157,"line_end":157,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108244,"byte_end":108247,"line_start":200,"line_end":200,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126547,"byte_end":126550,"line_start":658,"line_end":658,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm/hal.rs","byte_start":164252,"byte_end":164255,"line_start":25,"line_end":25,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150609,"byte_end":150614,"line_start":101,"line_end":101,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150810,"byte_end":150815,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150845,"byte_end":150850,"line_start":111,"line_end":111,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151296,"byte_end":151303,"line_start":132,"line_end":132,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151644,"byte_end":151652,"line_start":148,"line_end":148,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152670,"byte_end":152673,"line_start":179,"line_end":179,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162865,"byte_end":162868,"line_start":481,"line_end":481,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/hal.rs","byte_start":199151,"byte_end":199154,"line_start":27,"line_end":27,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/hal.rs","byte_start":199402,"byte_end":199405,"line_start":38,"line_end":38,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/hal.rs","byte_start":199572,"byte_end":199575,"line_start":48,"line_end":48,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208598,"byte_end":208605,"line_start":66,"line_end":66,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215760,"byte_end":215767,"line_start":266,"line_end":266,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":179265,"byte_end":179270,"line_start":150,"line_end":150,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":180162,"byte_end":180167,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":180197,"byte_end":180202,"line_start":173,"line_end":173,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182686,"byte_end":182689,"line_start":225,"line_end":225,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183729,"byte_end":183740,"line_start":256,"line_end":256,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184155,"byte_end":184163,"line_start":273,"line_end":273,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185235,"byte_end":185239,"line_start":309,"line_end":309,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186364,"byte_end":186372,"line_start":342,"line_end":342,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187788,"byte_end":187791,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197703,"byte_end":197706,"line_start":642,"line_end":642,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197731,"byte_end":197734,"line_start":644,"line_end":644,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218686,"byte_end":218691,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218896,"byte_end":218901,"line_start":65,"line_end":65,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219949,"byte_end":219954,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221883,"byte_end":221886,"line_start":141,"line_end":141,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229284,"byte_end":229294,"line_start":314,"line_end":314,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart/hal.rs","byte_start":268930,"byte_end":268934,"line_start":27,"line_end":27,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart/hal.rs","byte_start":269222,"byte_end":269226,"line_start":40,"line_end":40,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart/hal.rs","byte_start":269605,"byte_end":269609,"line_start":58,"line_end":58,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240846,"byte_end":240851,"line_start":197,"line_end":197,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241195,"byte_end":241200,"line_start":207,"line_end":207,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241230,"byte_end":241235,"line_start":209,"line_end":209,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241336,"byte_end":241341,"line_start":215,"line_end":215,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241448,"byte_end":241453,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242219,"byte_end":242225,"line_start":251,"line_end":251,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243145,"byte_end":243156,"line_start":281,"line_end":281,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243680,"byte_end":243685,"line_start":303,"line_end":303,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244009,"byte_end":244015,"line_start":318,"line_end":318,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246515,"byte_end":246521,"line_start":390,"line_end":390,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247885,"byte_end":247889,"line_start":435,"line_end":435,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2008,"byte_end":2012,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2046,"byte_end":2049,"line_start":42,"line_end":42,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":462}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2059,"byte_end":2062,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":504}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2072,"byte_end":2075,"line_start":44,"line_end":44,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":686}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2085,"byte_end":2088,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":770}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2098,"byte_end":2104,"line_start":46,"line_end":46,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":943}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/lib.rs","byte_start":2114,"byte_end":2118,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":975}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":23151,"byte_end":23158,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":23592,"byte_end":23599,"line_start":62,"line_end":62,"column_start":15,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1236},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":23756,"byte_end":23761,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/epoll.rs","byte_start":25265,"byte_end":25270,"line_start":129,"line_end":129,"column_start":15,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":26603,"byte_end":26612,"line_start":26,"line_end":26,"column_start":29,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1350},"to":{"krate":17,"index":106}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":26785,"byte_end":26790,"line_start":36,"line_end":36,"column_start":29,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1381},"to":{"krate":17,"index":106}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":26943,"byte_end":26952,"line_start":46,"line_end":46,"column_start":17,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1350},"to":{"krate":17,"index":313}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/hal.rs","byte_start":27532,"byte_end":27537,"line_start":74,"line_end":74,"column_start":17,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1381},"to":{"krate":17,"index":313}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":29649,"byte_end":29658,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":30899,"byte_end":30908,"line_start":96,"line_end":96,"column_start":21,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":114},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":31250,"byte_end":31259,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":36410,"byte_end":36424,"line_start":260,"line_end":260,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/interrupt.rs","byte_start":38302,"byte_end":38316,"line_start":318,"line_end":318,"column_start":15,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":42460,"byte_end":42468,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":42821,"byte_end":42829,"line_start":109,"line_end":109,"column_start":21,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1262},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":43495,"byte_end":43503,"line_start":134,"line_end":134,"column_start":6,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":43728,"byte_end":43736,"line_start":145,"line_end":145,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":44553,"byte_end":44566,"line_start":173,"line_end":173,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":46723,"byte_end":46736,"line_start":246,"line_end":246,"column_start":15,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":46815,"byte_end":46828,"line_start":252,"line_end":252,"column_start":21,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":47560,"byte_end":47570,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":47706,"byte_end":47716,"line_start":285,"line_end":285,"column_start":21,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1285},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":48260,"byte_end":48272,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":49327,"byte_end":49339,"line_start":341,"line_end":341,"column_start":15,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":49418,"byte_end":49430,"line_start":347,"line_end":347,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":50035,"byte_end":50044,"line_start":369,"line_end":369,"column_start":6,"column_end":15},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/ioctl.rs","byte_start":50841,"byte_end":50846,"line_start":402,"line_end":402,"column_start":6,"column_end":11},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":54985,"byte_end":54992,"line_start":55,"line_end":55,"column_start":21,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":55228,"byte_end":55235,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":61826,"byte_end":61833,"line_start":257,"line_end":257,"column_start":15,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":62063,"byte_end":62070,"line_start":266,"line_end":266,"column_start":22,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/mem.rs","byte_start":62095,"byte_end":62102,"line_start":267,"line_end":267,"column_start":22,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":72120,"byte_end":72123,"line_start":288,"line_end":288,"column_start":6,"column_end":9},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":75486,"byte_end":75489,"line_start":399,"line_end":399,"column_start":15,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":76797,"byte_end":76805,"line_start":436,"line_end":436,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":83058,"byte_end":83067,"line_start":599,"line_end":599,"column_start":6,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/pin.rs","byte_start":86214,"byte_end":86219,"line_start":692,"line_end":692,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/soft_pwm.rs","byte_start":89747,"byte_end":89754,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/soft_pwm.rs","byte_start":94796,"byte_end":94803,"line_start":193,"line_end":193,"column_start":15,"column_end":22},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1435},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio/soft_pwm.rs","byte_start":95321,"byte_end":95328,"line_start":206,"line_end":206,"column_start":22,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1435},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":12774,"byte_end":12779,"line_start":201,"line_end":201,"column_start":23,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13292,"byte_end":13297,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1440},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13327,"byte_end":13332,"line_start":215,"line_end":215,"column_start":26,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13435,"byte_end":13440,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":13907,"byte_end":13911,"line_start":244,"line_end":244,"column_start":23,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14526,"byte_end":14531,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":14741,"byte_end":14746,"line_start":276,"line_end":276,"column_start":14,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2020}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15117,"byte_end":15127,"line_start":295,"line_end":295,"column_start":23,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":15593,"byte_end":15600,"line_start":314,"line_end":314,"column_start":23,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1531},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":16220,"byte_end":16229,"line_start":334,"line_end":334,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":449},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/gpio.rs","byte_start":17023,"byte_end":17027,"line_start":358,"line_end":358,"column_start":6,"column_end":10},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97566,"byte_end":97571,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97683,"byte_end":97688,"line_start":47,"line_end":47,"column_start":22,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":20}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97820,"byte_end":97825,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":20}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":97958,"byte_end":97963,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":20}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98096,"byte_end":98101,"line_start":65,"line_end":65,"column_start":23,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":20}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98222,"byte_end":98227,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":23}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98359,"byte_end":98364,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":23}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98497,"byte_end":98502,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":23}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98635,"byte_end":98640,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1573},"to":{"krate":17,"index":23}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":98846,"byte_end":98854,"line_start":98,"line_end":98,"column_start":22,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":2,"index":32309},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99233,"byte_end":99238,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99434,"byte_end":99439,"line_start":125,"line_end":125,"column_start":18,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1578},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/hal.rs","byte_start":99518,"byte_end":99523,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1578},"to":{"krate":17,"index":272}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/hal.rs","byte_start":127785,"byte_end":127788,"line_start":25,"line_end":25,"column_start":16,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1686},"to":{"krate":17,"index":30}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/hal.rs","byte_start":128009,"byte_end":128012,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1686},"to":{"krate":17,"index":27}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/hal.rs","byte_start":128242,"byte_end":128245,"line_start":47,"line_end":47,"column_start":20,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1686},"to":{"krate":17,"index":37}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":131195,"byte_end":131207,"line_start":66,"line_end":66,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":134521,"byte_end":134533,"line_start":174,"line_end":174,"column_start":21,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1586},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c/ioctl.rs","byte_start":137564,"byte_end":137575,"line_start":245,"line_end":245,"column_start":6,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":105877,"byte_end":105882,"line_start":138,"line_end":138,"column_start":23,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106342,"byte_end":106347,"line_start":149,"line_end":149,"column_start":23,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1673},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106377,"byte_end":106382,"line_start":151,"line_end":151,"column_start":26,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":106485,"byte_end":106490,"line_start":157,"line_end":157,"column_start":30,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":108244,"byte_end":108247,"line_start":200,"line_end":200,"column_start":6,"column_end":9},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/i2c.rs","byte_start":126547,"byte_end":126550,"line_start":658,"line_end":658,"column_start":22,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm/hal.rs","byte_start":164252,"byte_end":164255,"line_start":25,"line_end":25,"column_start":17,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1735},"to":{"krate":17,"index":313}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150609,"byte_end":150614,"line_start":101,"line_end":101,"column_start":23,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1695},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150810,"byte_end":150815,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1695},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":150845,"byte_end":150850,"line_start":111,"line_end":111,"column_start":26,"column_end":31},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1695},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151296,"byte_end":151303,"line_start":132,"line_end":132,"column_start":23,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1701},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":151644,"byte_end":151652,"line_start":148,"line_end":148,"column_start":23,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1719},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":152670,"byte_end":152673,"line_start":179,"line_end":179,"column_start":6,"column_end":9},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/pwm.rs","byte_start":162865,"byte_end":162868,"line_start":481,"line_end":481,"column_start":15,"column_end":18},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/hal.rs","byte_start":199151,"byte_end":199154,"line_start":27,"line_end":27,"column_start":23,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":920},"to":{"krate":17,"index":64}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/hal.rs","byte_start":199402,"byte_end":199405,"line_start":38,"line_end":38,"column_start":20,"column_end":23},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":920},"to":{"krate":17,"index":69}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/hal.rs","byte_start":199572,"byte_end":199575,"line_start":48,"line_end":48,"column_start":25,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":920},"to":{"krate":17,"index":260}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":208598,"byte_end":208605,"line_start":66,"line_end":66,"column_start":14,"column_end":21},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi/segment.rs","byte_start":215760,"byte_end":215767,"line_start":266,"line_end":266,"column_start":29,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":179265,"byte_end":179270,"line_start":150,"line_end":150,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":180162,"byte_end":180167,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1777},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":180197,"byte_end":180202,"line_start":173,"line_end":173,"column_start":26,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":182686,"byte_end":182689,"line_start":225,"line_end":225,"column_start":23,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1798},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":183729,"byte_end":183740,"line_start":256,"line_end":256,"column_start":23,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1819},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":184155,"byte_end":184163,"line_start":273,"line_end":273,"column_start":23,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1840},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":185235,"byte_end":185239,"line_start":309,"line_end":309,"column_start":23,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1858},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":186364,"byte_end":186372,"line_start":342,"line_end":342,"column_start":23,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1882},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":187788,"byte_end":187791,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197703,"byte_end":197706,"line_start":642,"line_end":642,"column_start":22,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":920},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/spi.rs","byte_start":197731,"byte_end":197734,"line_start":644,"line_end":644,"column_start":21,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":920},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218686,"byte_end":218691,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":218896,"byte_end":218901,"line_start":65,"line_end":65,"column_start":23,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1900},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":219949,"byte_end":219954,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1905},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":221883,"byte_end":221886,"line_start":141,"line_end":141,"column_start":23,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1949},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/system.rs","byte_start":229284,"byte_end":229294,"line_start":314,"line_end":314,"column_start":6,"column_end":16},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart/hal.rs","byte_start":268930,"byte_end":268934,"line_start":27,"line_end":27,"column_start":19,"column_end":23},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2077},"to":{"krate":17,"index":249}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart/hal.rs","byte_start":269222,"byte_end":269226,"line_start":40,"line_end":40,"column_start":20,"column_end":24},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2077},"to":{"krate":17,"index":253}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart/hal.rs","byte_start":269605,"byte_end":269609,"line_start":58,"line_end":58,"column_start":22,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2077},"to":{"krate":17,"index":55}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":240846,"byte_end":240851,"line_start":197,"line_end":197,"column_start":23,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241195,"byte_end":241200,"line_start":207,"line_end":207,"column_start":23,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1990},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241230,"byte_end":241235,"line_start":209,"line_end":209,"column_start":26,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241336,"byte_end":241341,"line_start":215,"line_end":215,"column_start":28,"column_end":33},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":241448,"byte_end":241453,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":242219,"byte_end":242225,"line_start":251,"line_end":251,"column_start":23,"column_end":29},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2001},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243145,"byte_end":243156,"line_start":281,"line_end":281,"column_start":23,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2023},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":243680,"byte_end":243685,"line_start":303,"line_end":303,"column_start":23,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":244009,"byte_end":244015,"line_start":318,"line_end":318,"column_start":6,"column_end":12},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":246515,"byte_end":246521,"line_start":390,"line_end":390,"column_start":21,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.11.3/src/uart.rs","byte_start":247885,"byte_end":247889,"line_start":435,"line_end":435,"column_start":6,"column_end":10},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2077},"to":{"krate":4294967295,"index":4294967295}}]}