{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4","program":"/home/scoob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","i2cdev","/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=66de7315bda183fd","-C","extra-filename=-66de7315bda183fd","--out-dir","/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps","-L","dependency=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps","--extern","bitflags=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/libbitflags-18a00050768c439a.rmeta","--extern","byteorder=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/libbyteorder-79c21dc4592e924d.rmeta","--extern","libc=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/liblibc-67f4cd3da887bbfb.rmeta","--extern","nix=/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/libnix-1db4356f246ff015.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/scoob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/scoob/Programming/Rust/soil-i2c/target/rls/debug/deps/libi2cdev-66de7315bda183fd.rmeta"},"prelude":{"crate_id":{"name":"i2cdev","disambiguator":[10165654817194182159,3734491731875692619]},"crate_root":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src","external_crates":[{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13842155912677385872,11660590378338683385]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1145230128757463294,15976268636418953592]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10006185802367012891,4937926339965588888]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18134491841186215314,8619879253945163470]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4357087487764653857,7816708319091665300]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10862771416828768076,14090399182622295334]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7832813774001485751,4465207999706185911]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14203079308812153325,7069038021421518271]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17468104730350570711,1510909898039763528]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11081656445949358564,12304596919514716713]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[4496289705150708668,14963538919535077439]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[12585038344938944291,11081610577875308163]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4866546307375520792,3681606541934731072]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[6903286030758146719,12939842262273902871]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":15,"id":{"name":"bitflags","disambiguator":[4007396839524562925,6495902264327152308]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[1135774122759446760,3749149709218969104]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[15855753054126972153,9913793128331978678]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":18,"id":{"name":"nix","disambiguator":[2329946987264974532,14764975937296809823]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[8399646777753009860,5233712646035546754]}},{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","num":20,"id":{"name":"void","disambiguator":[5788285445637732447,6799967196809038091]}}],"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":355,"byte_end":3172,"line_start":9,"line_end":114,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":22761,"byte_end":22771,"line_start":22,"line_end":22,"column_start":15,"column_end":25},"alias_span":null,"name":"I2CMessage","value":"","parent":{"krate":0,"index":142}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":355,"byte_end":3172,"line_start":9,"line_end":114,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":106},{"krate":0,"index":142},{"krate":0,"index":221}],"decl_id":null,"docs":" # i2cdev","sig":null,"attributes":[{"value":"! # i2cdev","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":355,"byte_end":367,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":368,"byte_end":371,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! The `i2cdev` crate provides a safe interface for interface","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":372,"byte_end":434,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"! with i2c devices under Linux.  The API wraps the Linux","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":435,"byte_end":493,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"! kernel interface for interacting with i2c in userspace:","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":494,"byte_end":553,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"! https://www.kernel.org/doc/Documentation/i2c/dev-interface","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":554,"byte_end":616,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"! ```rust,no_run","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":617,"byte_end":635,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! extern crate i2cdev;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":636,"byte_end":660,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":661,"byte_end":664,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! use std::thread;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":665,"byte_end":685,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":686,"byte_end":714,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":715,"byte_end":718,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! use i2cdev::core::*;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":719,"byte_end":743,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"! use i2cdev::linux::{LinuxI2CDevice, LinuxI2CError};","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":744,"byte_end":799,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":800,"byte_end":803,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! const NUNCHUCK_SLAVE_ADDR: u16 = 0x52;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":804,"byte_end":846,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":847,"byte_end":850,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! // real code should probably not use unwrap()","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":851,"byte_end":900,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"! fn i2cfun() -> Result<(), LinuxI2CError> {","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":901,"byte_end":947,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"!     let mut dev = LinuxI2CDevice::new(\"/dev/i2c-1\", NUNCHUCK_SLAVE_ADDR)?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":948,"byte_end":1026,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1027,"byte_end":1030,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     // init sequence","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1031,"byte_end":1055,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"!     dev.smbus_write_byte_data(0xF0, 0x55)?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1056,"byte_end":1103,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"!     dev.smbus_write_byte_data(0xFB, 0x00)?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1104,"byte_end":1151,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"!     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1152,"byte_end":1202,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1203,"byte_end":1206,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1207,"byte_end":1221,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"!         let mut buf: [u8; 6] = [0; 6];","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1222,"byte_end":1264,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"!         dev.smbus_write_byte(0x00).unwrap();","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1265,"byte_end":1313,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"!         thread::sleep(Duration::from_millis(10));","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1314,"byte_end":1367,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!         dev.read(&mut buf).unwrap();","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1368,"byte_end":1408,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!         println!(\"Reading: {:?}\", buf);","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1409,"byte_end":1452,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"!     }","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1453,"byte_end":1462,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1463,"byte_end":1468,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1469,"byte_end":1476,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1477,"byte_end":1480,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1481,"byte_end":1499,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"! extern crate i2cdev;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1500,"byte_end":1524,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1525,"byte_end":1528,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! use std::thread;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1529,"byte_end":1549,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1550,"byte_end":1578,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1579,"byte_end":1582,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! use i2cdev::core::*;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1583,"byte_end":1607,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"! use i2cdev::linux::{LinuxI2CDevice, LinuxI2CError, LinuxI2CMessage};","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1608,"byte_end":1680,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1681,"byte_end":1684,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! const SLAVE_ADDR: u16 = 0x57;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1685,"byte_end":1718,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1719,"byte_end":1722,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! fn write_read_transaction() -> Result<(), LinuxI2CError> {","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1723,"byte_end":1785,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"!     let mut dev = LinuxI2CDevice::new(\"/dev/i2c-1\", SLAVE_ADDR)?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1786,"byte_end":1855,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1856,"byte_end":1859,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"!     let mut read_data = [0; 2];","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1860,"byte_end":1895,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"!     let mut msgs = [","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1896,"byte_end":1920,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"!         LinuxI2CMessage::write(&[0x01]),","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1921,"byte_end":1965,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"!         LinuxI2CMessage::read(&mut read_data)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":1966,"byte_end":2015,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"!     ];","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2016,"byte_end":2026,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"!     dev.transfer(&mut msgs)?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2027,"byte_end":2060,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2061,"byte_end":2064,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"!     println!(\"Reading: {:?}\", read_data);","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2065,"byte_end":2110,"line_start":66,"line_end":66,"column_start":1,"column_end":46}},{"value":"!     Ok(())","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2111,"byte_end":2125,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2126,"byte_end":2131,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2132,"byte_end":2139,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2144,"byte_end":2162,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"! extern crate i2cdev;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2163,"byte_end":2187,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2188,"byte_end":2191,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! use std::thread;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2192,"byte_end":2212,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2213,"byte_end":2241,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! use i2cdev::core::*;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2246,"byte_end":2270,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"! use i2cdev::linux::{LinuxI2CBus, LinuxI2CError, LinuxI2CMessage};","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2271,"byte_end":2340,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2341,"byte_end":2344,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! const SLAVE_ADDR: u16 = 0x57;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2345,"byte_end":2378,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2379,"byte_end":2382,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! fn write_read_transaction_using_bus() -> Result<(), LinuxI2CError> {","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2383,"byte_end":2455,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"!     let mut dev = LinuxI2CBus::new(\"/dev/i2c-1\")?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2456,"byte_end":2510,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2511,"byte_end":2514,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"!     let mut read_data = [0; 2];","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2515,"byte_end":2550,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     let mut msgs = [","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2551,"byte_end":2575,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"!         LinuxI2CMessage::write(&[0x01]).with_address(SLAVE_ADDR),","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2576,"byte_end":2645,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"!         LinuxI2CMessage::read(&mut read_data).with_address(SLAVE_ADDR)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2646,"byte_end":2720,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"!     ];","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2721,"byte_end":2731,"line_start":89,"line_end":89,"column_start":1,"column_end":11}},{"value":"!     dev.transfer(&mut msgs)?;","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2732,"byte_end":2765,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2766,"byte_end":2769,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"!     println!(\"Reading: {:?}\", read_data);","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2770,"byte_end":2815,"line_start":92,"line_end":92,"column_start":1,"column_end":46}},{"value":"!     Ok(())","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2816,"byte_end":2830,"line_start":93,"line_end":93,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2831,"byte_end":2836,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2837,"byte_end":2844,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"crate_name = \"i2cdev\"","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2846,"byte_end":2871,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"crate_type = \"lib\"","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":2872,"byte_end":2894,"line_start":98,"line_end":98,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/ffi.rs","byte_start":3788,"byte_end":3795,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"i2c_msg","qualname":"::ffi::i2c_msg","value":"i2c_msg {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/ffi.rs","byte_start":3766,"byte_end":3776,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::core","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":133},{"krate":0,"index":138}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":111},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16854,"byte_end":16863,"line_start":17,"line_end":17,"column_start":11,"column_end":20},"name":"I2CDevice","qualname":"::core::I2CDevice","value":"I2CDevice","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" Interface to an I2C Slave Device from an I2C Master","sig":null,"attributes":[{"value":"/ Interface to an I2C Slave Device from an I2C Master","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16609,"byte_end":16664,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16665,"byte_end":16668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Typical implementations will store state with references to the bus","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16669,"byte_end":16740,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ in use and the address of the slave device.  The trait is based on the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16741,"byte_end":16815,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ Linux i2cdev interface.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16816,"byte_end":16843,"line_start":16,"line_end":16,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":112},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16875,"byte_end":16880,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Error","qualname":"::core::I2CDevice::Error","value":"type Error: Error;","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16958,"byte_end":16962,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"read","qualname":"::core::I2CDevice::read","value":"fn (&mut self, data: &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Read data from the device to fill the provided slice\n","sig":null,"attributes":[{"value":"/ Read data from the device to fill the provided slice","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":16894,"byte_end":16950,"line_start":20,"line_end":20,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17075,"byte_end":17080,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"write","qualname":"::core::I2CDevice::write","value":"fn (&mut self, data: &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Write the provided buffer to the device\n","sig":null,"attributes":[{"value":"/ Write the provided buffer to the device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17024,"byte_end":17067,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17218,"byte_end":17235,"line_start":27,"line_end":27,"column_start":8,"column_end":25},"name":"smbus_write_quick","qualname":"::core::I2CDevice::smbus_write_quick","value":"fn (&mut self, bit: bool) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" This sends a single bit to the device, at the place of the Rd/Wr bit\n","sig":null,"attributes":[{"value":"/ This sends a single bit to the device, at the place of the Rd/Wr bit","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17138,"byte_end":17210,"line_start":26,"line_end":26,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17565,"byte_end":17580,"line_start":34,"line_end":34,"column_start":8,"column_end":23},"name":"smbus_read_byte","qualname":"::core::I2CDevice::smbus_read_byte","value":"fn (&mut self) -> Result<u8, Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Read a single byte from a device, without specifying a device register","sig":null,"attributes":[{"value":"/ Read a single byte from a device, without specifying a device register","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17291,"byte_end":17365,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17370,"byte_end":17373,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Some devices are so simple that this interface is enough; for","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17378,"byte_end":17443,"line_start":31,"line_end":31,"column_start":5,"column_end":70}},{"value":"/ others, it is a shorthand if you want to read the same register as in","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17448,"byte_end":17521,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ the previous SMBus command.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17526,"byte_end":17557,"line_start":33,"line_end":33,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17913,"byte_end":17929,"line_start":44,"line_end":44,"column_start":8,"column_end":24},"name":"smbus_write_byte","qualname":"::core::I2CDevice::smbus_write_byte","value":"fn (&mut self, value: u8) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Write a single byte to a device, without specifying a device register","sig":null,"attributes":[{"value":"/ Write a single byte to a device, without specifying a device register","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17711,"byte_end":17784,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17789,"byte_end":17792,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This is the opposite operation as smbus_read_byte.  As with read_byte,","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17797,"byte_end":17871,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ no register is specified.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":17876,"byte_end":17905,"line_start":43,"line_end":43,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18158,"byte_end":18178,"line_start":51,"line_end":51,"column_start":8,"column_end":28},"name":"smbus_read_byte_data","qualname":"::core::I2CDevice::smbus_read_byte_data","value":"fn (&mut self, register: u8) -> Result<u8, Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Read a single byte from a device, from a designated register","sig":null,"attributes":[{"value":"/ Read a single byte from a device, from a designated register","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18021,"byte_end":18085,"line_start":48,"line_end":48,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18090,"byte_end":18093,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The register is specified through the Comm byte.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18098,"byte_end":18150,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18448,"byte_end":18469,"line_start":59,"line_end":59,"column_start":8,"column_end":29},"name":"smbus_write_byte_data","qualname":"::core::I2CDevice::smbus_write_byte_data","value":"fn (&mut self, register: u8, value: u8) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Write a single byte to a specific register on a device","sig":null,"attributes":[{"value":"/ Write a single byte to a specific register on a device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18317,"byte_end":18375,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18380,"byte_end":18383,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The register is specified through the Comm byte.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18388,"byte_end":18440,"line_start":58,"line_end":58,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18655,"byte_end":18675,"line_start":64,"line_end":64,"column_start":8,"column_end":28},"name":"smbus_read_word_data","qualname":"::core::I2CDevice::smbus_read_word_data","value":"fn (&mut self, register: u8) -> Result<u16, Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Read 2 bytes from a given register on a device (lsb first)\n","sig":null,"attributes":[{"value":"/ Read 2 bytes from a given register on a device (lsb first)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18585,"byte_end":18647,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18966,"byte_end":18987,"line_start":72,"line_end":72,"column_start":8,"column_end":29},"name":"smbus_write_word_data","qualname":"::core::I2CDevice::smbus_write_word_data","value":"fn (&mut self, register: u8, value: u16) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Write 2 bytes to a given register on a device (lsb first)\n","sig":null,"attributes":[{"value":"/ Write 2 bytes to a given register on a device (lsb first)","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":18897,"byte_end":18958,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19277,"byte_end":19295,"line_start":79,"line_end":79,"column_start":8,"column_end":26},"name":"smbus_process_word","qualname":"::core::I2CDevice::smbus_process_word","value":"fn (&mut self, register: u8, value: u16) -> Result<u16, Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Select a register, send 16 bits of data to it, and read 16 bits of data\n","sig":null,"attributes":[{"value":"/ Select a register, send 16 bits of data to it, and read 16 bits of data","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19194,"byte_end":19269,"line_start":78,"line_end":78,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19798,"byte_end":19819,"line_start":91,"line_end":91,"column_start":8,"column_end":29},"name":"smbus_read_block_data","qualname":"::core::I2CDevice::smbus_read_block_data","value":"fn (&mut self, register: u8) -> Result<Vec<u8>, Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Read a block of up to 32 bytes from a device","sig":null,"attributes":[{"value":"/ Read a block of up to 32 bytes from a device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19541,"byte_end":19589,"line_start":86,"line_end":86,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19594,"byte_end":19597,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The actual number of bytes available to read is returned in the count","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19602,"byte_end":19675,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ byte.  This code returns a correctly sized vector containing the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19680,"byte_end":19748,"line_start":89,"line_end":89,"column_start":5,"column_end":73}},{"value":"/ count bytes read from the device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19753,"byte_end":19790,"line_start":90,"line_end":90,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20005,"byte_end":20030,"line_start":96,"line_end":96,"column_start":8,"column_end":33},"name":"smbus_read_i2c_block_data","qualname":"::core::I2CDevice::smbus_read_i2c_block_data","value":"fn (&mut self, register: u8, len: u8) -> Result<Vec<u8>, Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Read a block of up to 32 bytes from a device","sig":null,"attributes":[{"value":"/ Read a block of up to 32 bytes from a device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19883,"byte_end":19931,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19936,"byte_end":19939,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Uses read_i2c_block_data instead read_block_data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":19944,"byte_end":19997,"line_start":95,"line_end":95,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20387,"byte_end":20409,"line_start":103,"line_end":103,"column_start":8,"column_end":30},"name":"smbus_write_block_data","qualname":"::core::I2CDevice::smbus_write_block_data","value":"fn (&mut self, register: u8, values: &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Write a block of up to 32 bytes to a device","sig":null,"attributes":[{"value":"/ Write a block of up to 32 bytes to a device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20103,"byte_end":20150,"line_start":98,"line_end":98,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20155,"byte_end":20158,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The opposite of the Block Read command, this writes up to 32 bytes to","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20163,"byte_end":20236,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ a device, to a designated register that is specified through the","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20241,"byte_end":20309,"line_start":101,"line_end":101,"column_start":5,"column_end":73}},{"value":"/ Comm byte. The amount of data is specified in the Count byte.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20314,"byte_end":20379,"line_start":102,"line_end":102,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20608,"byte_end":20634,"line_start":108,"line_end":108,"column_start":8,"column_end":34},"name":"smbus_write_i2c_block_data","qualname":"::core::I2CDevice::smbus_write_i2c_block_data","value":"fn (&mut self, register: u8, values: &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Write a block of up to 32 bytes from a device","sig":null,"attributes":[{"value":"/ Write a block of up to 32 bytes from a device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20483,"byte_end":20532,"line_start":105,"line_end":105,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20537,"byte_end":20540,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Uses write_i2c_block_data instead write_block_data.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20545,"byte_end":20600,"line_start":107,"line_end":107,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20852,"byte_end":20871,"line_start":116,"line_end":116,"column_start":8,"column_end":27},"name":"smbus_process_block","qualname":"::core::I2CDevice::smbus_process_block","value":"fn (&mut self, register: u8, values: &[u8]) -> Result<Vec<u8>, Self::Error>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Select a register, send 1 to 31 bytes of data to it, and reads\n 1 to 31 bytes of data from it.\n","sig":null,"attributes":[{"value":"/ Select a register, send 1 to 31 bytes of data to it, and reads","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20739,"byte_end":20805,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ 1 to 31 bytes of data from it.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20810,"byte_end":20844,"line_start":115,"line_end":115,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21592,"byte_end":21603,"line_start":130,"line_end":130,"column_start":11,"column_end":22},"name":"I2CTransfer","qualname":"::core::I2CTransfer","value":"I2CTransfer<'a>","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"decl_id":null,"docs":" Interface to an I2C Bus from an I2C Master","sig":null,"attributes":[{"value":"/ Interface to an I2C Bus from an I2C Master","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20948,"byte_end":20994,"line_start":119,"line_end":119,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20995,"byte_end":20998,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This is used when the client wants to interact directly with the bus","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":20999,"byte_end":21071,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/ without specifying an I2C slave address up-front, either because it needs","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21072,"byte_end":21149,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ to communicate with multiple addresses without creatings separate","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21150,"byte_end":21219,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/ I2CDevice objects, or because it wants to make used of the I2C_RDWR ioctl","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21220,"byte_end":21297,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ which allows the client to send and transmit multiple sets I2C data in a","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21298,"byte_end":21374,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/ single operation, potentially to different I2C slave addresses.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21375,"byte_end":21442,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21443,"byte_end":21446,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Typical implementations will store state with references to the bus","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21447,"byte_end":21518,"line_start":128,"line_end":128,"column_start":1,"column_end":72}},{"value":"/ in use.  The trait is based on the Linux i2cdev interface.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21519,"byte_end":21581,"line_start":129,"line_end":129,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21619,"byte_end":21624,"line_start":131,"line_end":131,"column_start":10,"column_end":15},"name":"Error","qualname":"::core::I2CTransfer::Error","value":"type Error: Error;","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":136},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21642,"byte_end":21649,"line_start":132,"line_end":132,"column_start":10,"column_end":17},"name":"Message","qualname":"::core::I2CTransfer::Message","value":"type Message: I2CMessage<'a>;","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21840,"byte_end":21848,"line_start":137,"line_end":137,"column_start":8,"column_end":16},"name":"transfer","qualname":"::core::I2CTransfer::transfer","value":"fn (&mut self, msgs: &'a mut [Self::Message]) -> Result<u32, Self::Error>","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21960,"byte_end":21970,"line_start":141,"line_end":141,"column_start":11,"column_end":21},"name":"I2CMessage","qualname":"::core::I2CMessage","value":"I2CMessage<'a>","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" Read/Write I2C message\n","sig":null,"attributes":[{"value":"/ Read/Write I2C message","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21923,"byte_end":21949,"line_start":140,"line_end":140,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":22014,"byte_end":22018,"line_start":143,"line_end":143,"column_start":8,"column_end":12},"name":"read","qualname":"::core::I2CMessage::read","value":"fn (data: &'a mut [u8]) -> Self","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Read data from device\n","sig":null,"attributes":[{"value":"/ Read data from device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":21981,"byte_end":22006,"line_start":142,"line_end":142,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":22085,"byte_end":22090,"line_start":146,"line_end":146,"column_start":8,"column_end":13},"name":"write","qualname":"::core::I2CMessage::write","value":"fn (data: &'a [u8]) -> Self","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Write data to device\n","sig":null,"attributes":[{"value":"/ Write data to device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/core.rs","byte_start":22053,"byte_end":22077,"line_start":145,"line_end":145,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":142},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linux","qualname":"::linux","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":470},{"krate":0,"index":477},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":198},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":479},{"krate":0,"index":501},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":492},{"krate":0,"index":486},{"krate":0,"index":484},{"krate":0,"index":481},{"krate":0,"index":502},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":213},{"krate":0,"index":217}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":3088,"byte_end":3143,"line_start":112,"line_end":112,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":22785,"byte_end":22799,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"LinuxI2CDevice","qualname":"::linux::LinuxI2CDevice","value":"LinuxI2CDevice {  }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":22859,"byte_end":22870,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"LinuxI2CBus","qualname":"::linux::LinuxI2CBus","value":"LinuxI2CBus {  }","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":471},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":22941,"byte_end":22944,"line_start":35,"line_end":35,"column_start":5,"column_end":8},"name":"Nix","qualname":"::linux::LinuxI2CError::Nix","value":"LinuxI2CError::Nix(nix::Error)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":22962,"byte_end":22964,"line_start":36,"line_end":36,"column_start":5,"column_end":7},"name":"Io","qualname":"::linux::LinuxI2CError::Io","value":"LinuxI2CError::Io(io::Error)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":470},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":22921,"byte_end":22934,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"name":"LinuxI2CError","qualname":"::linux::LinuxI2CError","value":"LinuxI2CError::{Nix, Io}","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":474}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24581,"byte_end":24584,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<LinuxI2CDevice>::new","value":"fn <P> (path: P, slave_address: u16) -> Result<LinuxI2CDevice, LinuxI2CError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new I2CDevice for the specified path\n","sig":null,"attributes":[{"value":"/ Create a new I2CDevice for the specified path","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24520,"byte_end":24569,"line_start":101,"line_end":101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25578,"byte_end":25595,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"set_slave_address","qualname":"<LinuxI2CDevice>::set_slave_address","value":"fn (&mut self, slave_address: u16) -> Result<(), LinuxI2CError>","parent":null,"children":[],"decl_id":null,"docs":" Set the slave address for this device","sig":null,"attributes":[{"value":"/ Set the slave address for this device","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24981,"byte_end":25022,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25027,"byte_end":25030,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Typically the address is expected to be 7-bits but 10-bit addresses","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25035,"byte_end":25106,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/ may be supported by the kernel driver in some cases.  Little validation","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25111,"byte_end":25186,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ is done in Rust as the kernel is good at making sure things are valid.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25191,"byte_end":25265,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25270,"byte_end":25273,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Note that if you have created a device using","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25278,"byte_end":25326,"line_start":121,"line_end":121,"column_start":5,"column_end":53}},{"value":"/ `I2Device::new(...)` it is not necesasry to call this method","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25331,"byte_end":25395,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ (it is done internally).  Calling this method is only","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25400,"byte_end":25457,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/ necessary if you need to change the slave device and you do","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25462,"byte_end":25525,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ not want to create a new device.","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25530,"byte_end":25566,"line_start":125,"line_end":125,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31124,"byte_end":31127,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"new","qualname":"<LinuxI2CBus>::new","value":"fn <P> (path: P) -> Result<LinuxI2CBus, LinuxI2CError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new LinuxI2CBus for the specified path\n","sig":null,"attributes":[{"value":"/ Create a new LinuxI2CBus for the specified path","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31061,"byte_end":31112,"line_start":258,"line_end":258,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":206},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31372,"byte_end":31387,"line_start":267,"line_end":267,"column_start":10,"column_end":25},"name":"LinuxI2CMessage","qualname":"::linux::LinuxI2CMessage","value":"ffi::i2c_msg","parent":null,"children":[],"decl_id":null,"docs":" Linux I2C message\n","sig":null,"attributes":[{"value":"/ Linux I2C message","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31341,"byte_end":31362,"line_start":266,"line_end":266,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31996,"byte_end":32011,"line_start":284,"line_end":284,"column_start":16,"column_end":31},"name":"I2CMessageFlags","qualname":"::linux::I2CMessageFlags","value":"I2CMessageFlags {  }","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" Various flags used by the i2c_rdwr ioctl on Linux. For details, see\n https://www.kernel.org/doc/Documentation/i2c/i2c-protocol","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":523},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32084,"byte_end":32099,"line_start":286,"line_end":286,"column_start":15,"column_end":30},"name":"TEN_BIT_ADDRESS","qualname":"::linux::I2CMessageFlags::TEN_BIT_ADDRESS","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Use ten bit addressing on this message\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":524},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32168,"byte_end":32172,"line_start":288,"line_end":288,"column_start":15,"column_end":19},"name":"READ","qualname":"::linux::I2CMessageFlags::READ","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Read data, from slave to master\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":525},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32253,"byte_end":32257,"line_start":290,"line_end":290,"column_start":15,"column_end":19},"name":"STOP","qualname":"::linux::I2CMessageFlags::STOP","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Force an I2C stop condition on this message\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":526},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32347,"byte_end":32355,"line_start":292,"line_end":292,"column_start":15,"column_end":23},"name":"NO_START","qualname":"::linux::I2CMessageFlags::NO_START","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Avoid sending an I2C start condition on this message\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":527},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32448,"byte_end":32462,"line_start":294,"line_end":294,"column_start":15,"column_end":29},"name":"INVERT_COMMAND","qualname":"::linux::I2CMessageFlags::INVERT_COMMAND","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" If you need to invert a 'read' command bit to a 'write'\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":528},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32557,"byte_end":32568,"line_start":296,"line_end":296,"column_start":15,"column_end":26},"name":"IGNORE_NACK","qualname":"::linux::I2CMessageFlags::IGNORE_NACK","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Force this message to ignore I2C negative acknowlegements\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":529},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32645,"byte_end":32655,"line_start":298,"line_end":298,"column_start":15,"column_end":25},"name":"IGNORE_ACK","qualname":"::linux::I2CMessageFlags::IGNORE_ACK","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Force message to ignore acknowledgement\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":530},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32748,"byte_end":32766,"line_start":300,"line_end":300,"column_start":15,"column_end":33},"name":"USE_RECEIVE_LENGTH","qualname":"::linux::I2CMessageFlags::USE_RECEIVE_LENGTH","value":"I2CMessageFlags","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Allow the client to specify how many bytes it will send\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":33374,"byte_end":33386,"line_start":325,"line_end":325,"column_start":12,"column_end":24},"name":"with_address","qualname":"<LinuxI2CMessage>::with_address","value":"fn (self, slave_address: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":33584,"byte_end":33594,"line_start":334,"line_end":334,"column_start":12,"column_end":22},"name":"with_flags","qualname":"<LinuxI2CMessage>::with_flags","value":"fn (self, flags: I2CMessageFlags) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":221},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock","qualname":"::mock","value":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":604},{"krate":0,"index":612},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":261}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":227},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34210,"byte_end":34219,"line_start":11,"line_end":11,"column_start":10,"column_end":19},"name":"I2CResult","qualname":"::mock::I2CResult","value":"io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":229},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34252,"byte_end":34266,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"I2CRegisterMap","qualname":"::mock::I2CRegisterMap","value":"I2CRegisterMap {  }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34441,"byte_end":34444,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<I2CRegisterMap>::new","value":"fn () -> I2CRegisterMap","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34580,"byte_end":34590,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"write_regs","qualname":"<I2CRegisterMap>::write_regs","value":"fn (&mut self, offset: usize, data: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":35566,"byte_end":35579,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"MockI2CDevice","qualname":"::mock::MockI2CDevice","value":"MockI2CDevice { regmap }","parent":null,"children":[{"krate":0,"index":601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":601},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":35590,"byte_end":35596,"line_start":61,"line_end":61,"column_start":9,"column_end":15},"name":"regmap","qualname":"::mock::MockI2CDevice::regmap","value":"mock::I2CRegisterMap","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":35649,"byte_end":35652,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<MockI2CDevice>::new","value":"fn () -> MockI2CDevice","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":36827,"byte_end":36841,"line_start":114,"line_end":114,"column_start":12,"column_end":26},"name":"MockI2CMessage","qualname":"::mock::MockI2CMessage","value":"MockI2CMessage {  }","parent":null,"children":[{"krate":0,"index":256}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/ffi.rs","byte_start":7331,"byte_end":7345,"line_start":93,"line_end":93,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23006,"byte_end":23019,"line_start":39,"line_end":39,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23123,"byte_end":23136,"line_start":45,"line_end":45,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23246,"byte_end":23251,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23623,"byte_end":23636,"line_start":63,"line_end":63,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23885,"byte_end":23898,"line_start":72,"line_end":72,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24292,"byte_end":24306,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24403,"byte_end":24414,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24499,"byte_end":24513,"line_start":100,"line_end":100,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25815,"byte_end":25829,"line_start":133,"line_end":133,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":30622,"byte_end":30636,"line_start":244,"line_end":244,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31043,"byte_end":31054,"line_start":257,"line_end":257,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31438,"byte_end":31449,"line_start":269,"line_end":269,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32814,"byte_end":32829,"line_start":304,"line_end":304,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":33341,"byte_end":33356,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34335,"byte_end":34349,"line_start":18,"line_end":18,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34413,"byte_end":34427,"line_start":24,"line_end":24,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34782,"byte_end":34796,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":35622,"byte_end":35635,"line_start":64,"line_end":64,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":35779,"byte_end":35792,"line_start":72,"line_end":72,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":36910,"byte_end":36924,"line_start":118,"line_end":118,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":37231,"byte_end":37244,"line_start":133,"line_end":133,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":3081,"byte_end":3085,"line_start":110,"line_end":110,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":106}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":3152,"byte_end":3157,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":142}},{"kind":"Mod","span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/lib.rs","byte_start":3167,"byte_end":3171,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":221}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/ffi.rs","byte_start":7331,"byte_end":7345,"line_start":93,"line_end":93,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23006,"byte_end":23019,"line_start":39,"line_end":39,"column_start":27,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":470},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23123,"byte_end":23136,"line_start":45,"line_end":45,"column_start":26,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":470},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23246,"byte_end":23251,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23623,"byte_end":23636,"line_start":63,"line_end":63,"column_start":23,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":470},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":23885,"byte_end":23898,"line_start":72,"line_end":72,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":470},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24292,"byte_end":24306,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":157},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24403,"byte_end":24414,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":160},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":24499,"byte_end":24513,"line_start":100,"line_end":100,"column_start":6,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":25815,"byte_end":25829,"line_start":133,"line_end":133,"column_start":20,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":157},"to":{"krate":0,"index":111}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":30622,"byte_end":30636,"line_start":244,"line_end":244,"column_start":30,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":157},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31043,"byte_end":31054,"line_start":257,"line_end":257,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":31438,"byte_end":31449,"line_start":269,"line_end":269,"column_start":30,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":160},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":32814,"byte_end":32829,"line_start":304,"line_end":304,"column_start":29,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/linux.rs","byte_start":33341,"byte_end":33356,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34335,"byte_end":34349,"line_start":18,"line_end":18,"column_start":18,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":229},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34413,"byte_end":34427,"line_start":24,"line_end":24,"column_start":6,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":34782,"byte_end":34796,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":35622,"byte_end":35635,"line_start":64,"line_end":64,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":35779,"byte_end":35792,"line_start":72,"line_end":72,"column_start":20,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":111}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":36910,"byte_end":36924,"line_start":118,"line_end":118,"column_start":29,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":254},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/scoob/.cargo/registry/src/github.com-1ecc6299db9ec823/i2cdev-0.4.4/src/mock.rs","byte_start":37231,"byte_end":37244,"line_start":133,"line_end":133,"column_start":30,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":133}}]}